package goapi

import archive_tar "archive/tar"
import archive_zip "archive/zip"
import bufio "bufio"
import bytes "bytes"
import compress_bzip2 "compress/bzip2"
import compress_flate "compress/flate"
import compress_gzip "compress/gzip"
import compress_lzw "compress/lzw"
import compress_zlib "compress/zlib"
import container_heap "container/heap"
import container_list "container/list"
import container_ring "container/ring"
import crypto "crypto"
import crypto_aes "crypto/aes"
import crypto_cipher "crypto/cipher"
import crypto_des "crypto/des"
import crypto_dsa "crypto/dsa"
import crypto_ecdsa "crypto/ecdsa"
import crypto_elliptic "crypto/elliptic"
import crypto_hmac "crypto/hmac"
import crypto_md5 "crypto/md5"
import crypto_rand "crypto/rand"
import crypto_rc4 "crypto/rc4"
import crypto_rsa "crypto/rsa"
import crypto_sha1 "crypto/sha1"
import crypto_sha256 "crypto/sha256"
import crypto_sha512 "crypto/sha512"
import crypto_subtle "crypto/subtle"
import crypto_tls "crypto/tls"
import crypto_x509 "crypto/x509"
import crypto_x509_pkix "crypto/x509/pkix"
import database_sql "database/sql"
import database_sql_driver "database/sql/driver"
import debug_dwarf "debug/dwarf"
import debug_elf "debug/elf"
import debug_gosym "debug/gosym"
import debug_macho "debug/macho"
import debug_pe "debug/pe"
import encoding_ascii85 "encoding/ascii85"
import encoding_asn1 "encoding/asn1"
import encoding_base32 "encoding/base32"
import encoding_base64 "encoding/base64"
import encoding_binary "encoding/binary"
import encoding_csv "encoding/csv"
import encoding_gob "encoding/gob"
import encoding_hex "encoding/hex"
import encoding_json "encoding/json"
import encoding_pem "encoding/pem"
import encoding_xml "encoding/xml"
import errors "errors"
import expvar "expvar"
import flag "flag"
import fmt "fmt"
import go_ast "go/ast"
import go_build "go/build"
import go_doc "go/doc"
import go_parser "go/parser"
import go_printer "go/printer"
import go_scanner "go/scanner"
import go_token "go/token"
import hash_adler32 "hash/adler32"
import hash_crc32 "hash/crc32"
import hash_crc64 "hash/crc64"
import hash_fnv "hash/fnv"
import html "html"
import html_template "html/template"
import image "image"
import image_color "image/color"
import image_draw "image/draw"
import image_gif "image/gif"
import image_jpeg "image/jpeg"
import image_png "image/png"
import index_suffixarray "index/suffixarray"
import io "io"
import io_ioutil "io/ioutil"
import log "log"
import math "math"
import math_big "math/big"
import math_cmplx "math/cmplx"
import math_rand "math/rand"
import mime "mime"
import mime_multipart "mime/multipart"
import net "net"
import net_http "net/http"
import net_http_cgi "net/http/cgi"
import net_http_fcgi "net/http/fcgi"
import net_http_httptest "net/http/httptest"
import net_http_httputil "net/http/httputil"
import net_http_pprof "net/http/pprof"
import net_mail "net/mail"
import net_rpc "net/rpc"
import net_rpc_jsonrpc "net/rpc/jsonrpc"
import net_smtp "net/smtp"
import net_textproto "net/textproto"
import net_url "net/url"
import os "os"
import os_exec "os/exec"
import os_signal "os/signal"
import os_user "os/user"
import path "path"
import path_filepath "path/filepath"
import reflect "reflect"
import regexp "regexp"
import regexp_syntax "regexp/syntax"
import runtime "runtime"
import runtime_debug "runtime/debug"
import runtime_pprof "runtime/pprof"
import sort "sort"
import strconv "strconv"
import strings "strings"
import sync "sync"
import sync_atomic "sync/atomic"
import syscall "syscall"
import testing "testing"
import testing_iotest "testing/iotest"
import testing_quick "testing/quick"
import text_scanner "text/scanner"
import text_tabwriter "text/tabwriter"
import text_template "text/template"
import text_template_parse "text/template/parse"
import time "time"
import unicode "unicode"
import unicode_utf16 "unicode/utf16"
import unicode_utf8 "unicode/utf8"

var Functions map[string]interface{}
var Vars map[string]interface{}
var Types map[string]interface{}
var Consts map[string]interface{}

func init() {
	Functions = make(map[string]interface{})
	Vars = make(map[string]interface{})
	Types = make(map[string]interface{})
	Consts = make(map[string]interface{})
	Functions[`/archive/tar/NewReader`] = archive_tar.NewReader
	Functions[`/archive/tar/NewWriter`] = archive_tar.NewWriter
	Functions[`/archive/zip/FileInfoHeader`] = archive_zip.FileInfoHeader
	Functions[`/archive/zip/NewReader`] = archive_zip.NewReader
	Functions[`/archive/zip/NewWriter`] = archive_zip.NewWriter
	Functions[`/archive/zip/OpenReader`] = archive_zip.OpenReader
	Functions[`/bufio/NewReadWriter`] = bufio.NewReadWriter
	Functions[`/bufio/NewReader`] = bufio.NewReader
	Functions[`/bufio/NewReaderSize`] = bufio.NewReaderSize
	Functions[`/bufio/NewWriter`] = bufio.NewWriter
	Functions[`/bufio/NewWriterSize`] = bufio.NewWriterSize
	Functions[`/bytes/Compare`] = bytes.Compare
	Functions[`/bytes/Contains`] = bytes.Contains
	Functions[`/bytes/Count`] = bytes.Count
	Functions[`/bytes/Equal`] = bytes.Equal
	Functions[`/bytes/EqualFold`] = bytes.EqualFold
	Functions[`/bytes/Fields`] = bytes.Fields
	Functions[`/bytes/FieldsFunc`] = bytes.FieldsFunc
	Functions[`/bytes/HasPrefix`] = bytes.HasPrefix
	Functions[`/bytes/HasSuffix`] = bytes.HasSuffix
	Functions[`/bytes/Index`] = bytes.Index
	Functions[`/bytes/IndexAny`] = bytes.IndexAny
	Functions[`/bytes/IndexByte`] = bytes.IndexByte
	Functions[`/bytes/IndexFunc`] = bytes.IndexFunc
	Functions[`/bytes/IndexRune`] = bytes.IndexRune
	Functions[`/bytes/Join`] = bytes.Join
	Functions[`/bytes/LastIndex`] = bytes.LastIndex
	Functions[`/bytes/LastIndexAny`] = bytes.LastIndexAny
	Functions[`/bytes/LastIndexFunc`] = bytes.LastIndexFunc
	Functions[`/bytes/Map`] = bytes.Map
	Functions[`/bytes/NewBuffer`] = bytes.NewBuffer
	Functions[`/bytes/NewBufferString`] = bytes.NewBufferString
	Functions[`/bytes/NewReader`] = bytes.NewReader
	Functions[`/bytes/Repeat`] = bytes.Repeat
	Functions[`/bytes/Replace`] = bytes.Replace
	Functions[`/bytes/Runes`] = bytes.Runes
	Functions[`/bytes/Split`] = bytes.Split
	Functions[`/bytes/SplitAfter`] = bytes.SplitAfter
	Functions[`/bytes/SplitAfterN`] = bytes.SplitAfterN
	Functions[`/bytes/SplitN`] = bytes.SplitN
	Functions[`/bytes/Title`] = bytes.Title
	Functions[`/bytes/ToLower`] = bytes.ToLower
	Functions[`/bytes/ToLowerSpecial`] = bytes.ToLowerSpecial
	Functions[`/bytes/ToTitle`] = bytes.ToTitle
	Functions[`/bytes/ToTitleSpecial`] = bytes.ToTitleSpecial
	Functions[`/bytes/ToUpper`] = bytes.ToUpper
	Functions[`/bytes/ToUpperSpecial`] = bytes.ToUpperSpecial
	Functions[`/bytes/Trim`] = bytes.Trim
	Functions[`/bytes/TrimFunc`] = bytes.TrimFunc
	Functions[`/bytes/TrimLeft`] = bytes.TrimLeft
	Functions[`/bytes/TrimLeftFunc`] = bytes.TrimLeftFunc
	Functions[`/bytes/TrimRight`] = bytes.TrimRight
	Functions[`/bytes/TrimRightFunc`] = bytes.TrimRightFunc
	Functions[`/bytes/TrimSpace`] = bytes.TrimSpace
	Functions[`/compress/bzip2/NewReader`] = compress_bzip2.NewReader
	Functions[`/compress/flate/NewReader`] = compress_flate.NewReader
	Functions[`/compress/flate/NewReaderDict`] = compress_flate.NewReaderDict
	Functions[`/compress/flate/NewWriter`] = compress_flate.NewWriter
	Functions[`/compress/flate/NewWriterDict`] = compress_flate.NewWriterDict
	Functions[`/compress/gzip/NewReader`] = compress_gzip.NewReader
	Functions[`/compress/gzip/NewWriter`] = compress_gzip.NewWriter
	Functions[`/compress/gzip/NewWriterLevel`] = compress_gzip.NewWriterLevel
	Functions[`/compress/lzw/NewReader`] = compress_lzw.NewReader
	Functions[`/compress/lzw/NewWriter`] = compress_lzw.NewWriter
	Functions[`/compress/zlib/NewReader`] = compress_zlib.NewReader
	Functions[`/compress/zlib/NewReaderDict`] = compress_zlib.NewReaderDict
	Functions[`/compress/zlib/NewWriter`] = compress_zlib.NewWriter
	Functions[`/compress/zlib/NewWriterLevel`] = compress_zlib.NewWriterLevel
	Functions[`/compress/zlib/NewWriterLevelDict`] = compress_zlib.NewWriterLevelDict
	Functions[`/container/heap/Init`] = container_heap.Init
	Functions[`/container/heap/Pop`] = container_heap.Pop
	Functions[`/container/heap/Push`] = container_heap.Push
	Functions[`/container/heap/Remove`] = container_heap.Remove
	Functions[`/container/list/New`] = container_list.New
	Functions[`/container/ring/New`] = container_ring.New
	Functions[`/crypto/RegisterHash`] = crypto.RegisterHash
	Functions[`/crypto/aes/NewCipher`] = crypto_aes.NewCipher
	Functions[`/crypto/cipher/NewCBCDecrypter`] = crypto_cipher.NewCBCDecrypter
	Functions[`/crypto/cipher/NewCBCEncrypter`] = crypto_cipher.NewCBCEncrypter
	Functions[`/crypto/cipher/NewCFBDecrypter`] = crypto_cipher.NewCFBDecrypter
	Functions[`/crypto/cipher/NewCFBEncrypter`] = crypto_cipher.NewCFBEncrypter
	Functions[`/crypto/cipher/NewCTR`] = crypto_cipher.NewCTR
	Functions[`/crypto/cipher/NewOFB`] = crypto_cipher.NewOFB
	Functions[`/crypto/des/NewCipher`] = crypto_des.NewCipher
	Functions[`/crypto/des/NewTripleDESCipher`] = crypto_des.NewTripleDESCipher
	Functions[`/crypto/dsa/GenerateKey`] = crypto_dsa.GenerateKey
	Functions[`/crypto/dsa/GenerateParameters`] = crypto_dsa.GenerateParameters
	Functions[`/crypto/dsa/Sign`] = crypto_dsa.Sign
	Functions[`/crypto/dsa/Verify`] = crypto_dsa.Verify
	Functions[`/crypto/ecdsa/GenerateKey`] = crypto_ecdsa.GenerateKey
	Functions[`/crypto/ecdsa/Sign`] = crypto_ecdsa.Sign
	Functions[`/crypto/ecdsa/Verify`] = crypto_ecdsa.Verify
	Functions[`/crypto/elliptic/GenerateKey`] = crypto_elliptic.GenerateKey
	Functions[`/crypto/elliptic/Marshal`] = crypto_elliptic.Marshal
	Functions[`/crypto/elliptic/P224`] = crypto_elliptic.P224
	Functions[`/crypto/elliptic/P256`] = crypto_elliptic.P256
	Functions[`/crypto/elliptic/P384`] = crypto_elliptic.P384
	Functions[`/crypto/elliptic/P521`] = crypto_elliptic.P521
	Functions[`/crypto/elliptic/Unmarshal`] = crypto_elliptic.Unmarshal
	Functions[`/crypto/hmac/New`] = crypto_hmac.New
	Functions[`/crypto/md5/New`] = crypto_md5.New
	Functions[`/crypto/rand/Int`] = crypto_rand.Int
	Functions[`/crypto/rand/Prime`] = crypto_rand.Prime
	Functions[`/crypto/rand/Read`] = crypto_rand.Read
	Functions[`/crypto/rc4/NewCipher`] = crypto_rc4.NewCipher
	Functions[`/crypto/rsa/DecryptOAEP`] = crypto_rsa.DecryptOAEP
	Functions[`/crypto/rsa/DecryptPKCS1v15`] = crypto_rsa.DecryptPKCS1v15
	Functions[`/crypto/rsa/DecryptPKCS1v15SessionKey`] = crypto_rsa.DecryptPKCS1v15SessionKey
	Functions[`/crypto/rsa/EncryptOAEP`] = crypto_rsa.EncryptOAEP
	Functions[`/crypto/rsa/EncryptPKCS1v15`] = crypto_rsa.EncryptPKCS1v15
	Functions[`/crypto/rsa/GenerateKey`] = crypto_rsa.GenerateKey
	Functions[`/crypto/rsa/GenerateMultiPrimeKey`] = crypto_rsa.GenerateMultiPrimeKey
	Functions[`/crypto/rsa/SignPKCS1v15`] = crypto_rsa.SignPKCS1v15
	Functions[`/crypto/rsa/VerifyPKCS1v15`] = crypto_rsa.VerifyPKCS1v15
	Functions[`/crypto/sha1/New`] = crypto_sha1.New
	Functions[`/crypto/sha256/New`] = crypto_sha256.New
	Functions[`/crypto/sha256/New224`] = crypto_sha256.New224
	Functions[`/crypto/sha512/New`] = crypto_sha512.New
	Functions[`/crypto/sha512/New384`] = crypto_sha512.New384
	Functions[`/crypto/subtle/ConstantTimeByteEq`] = crypto_subtle.ConstantTimeByteEq
	Functions[`/crypto/subtle/ConstantTimeCompare`] = crypto_subtle.ConstantTimeCompare
	Functions[`/crypto/subtle/ConstantTimeCopy`] = crypto_subtle.ConstantTimeCopy
	Functions[`/crypto/subtle/ConstantTimeEq`] = crypto_subtle.ConstantTimeEq
	Functions[`/crypto/subtle/ConstantTimeSelect`] = crypto_subtle.ConstantTimeSelect
	Functions[`/crypto/tls/Client`] = crypto_tls.Client
	Functions[`/crypto/tls/Dial`] = crypto_tls.Dial
	Functions[`/crypto/tls/Listen`] = crypto_tls.Listen
	Functions[`/crypto/tls/LoadX509KeyPair`] = crypto_tls.LoadX509KeyPair
	Functions[`/crypto/tls/NewListener`] = crypto_tls.NewListener
	Functions[`/crypto/tls/Server`] = crypto_tls.Server
	Functions[`/crypto/tls/X509KeyPair`] = crypto_tls.X509KeyPair
	Functions[`/crypto/x509/CreateCertificate`] = crypto_x509.CreateCertificate
	Functions[`/crypto/x509/MarshalPKCS1PrivateKey`] = crypto_x509.MarshalPKCS1PrivateKey
	Functions[`/crypto/x509/MarshalPKIXPublicKey`] = crypto_x509.MarshalPKIXPublicKey
	Functions[`/crypto/x509/NewCertPool`] = crypto_x509.NewCertPool
	Functions[`/crypto/x509/ParseCRL`] = crypto_x509.ParseCRL
	Functions[`/crypto/x509/ParseCertificate`] = crypto_x509.ParseCertificate
	Functions[`/crypto/x509/ParseCertificates`] = crypto_x509.ParseCertificates
	Functions[`/crypto/x509/ParseDERCRL`] = crypto_x509.ParseDERCRL
	Functions[`/crypto/x509/ParsePKCS1PrivateKey`] = crypto_x509.ParsePKCS1PrivateKey
	Functions[`/crypto/x509/ParsePKCS8PrivateKey`] = crypto_x509.ParsePKCS8PrivateKey
	Functions[`/crypto/x509/ParsePKIXPublicKey`] = crypto_x509.ParsePKIXPublicKey
	Functions[`/database/sql/Open`] = database_sql.Open
	Functions[`/database/sql/Register`] = database_sql.Register
	Functions[`/database/sql/driver/IsScanValue`] = database_sql_driver.IsScanValue
	Functions[`/database/sql/driver/IsValue`] = database_sql_driver.IsValue
	Functions[`/debug/dwarf/New`] = debug_dwarf.New
	Functions[`/debug/elf/NewFile`] = debug_elf.NewFile
	Functions[`/debug/elf/Open`] = debug_elf.Open
	Functions[`/debug/elf/R_INFO`] = debug_elf.R_INFO
	Functions[`/debug/elf/R_INFO32`] = debug_elf.R_INFO32
	Functions[`/debug/elf/R_SYM32`] = debug_elf.R_SYM32
	Functions[`/debug/elf/R_SYM64`] = debug_elf.R_SYM64
	Functions[`/debug/elf/R_TYPE32`] = debug_elf.R_TYPE32
	Functions[`/debug/elf/R_TYPE64`] = debug_elf.R_TYPE64
	Functions[`/debug/elf/ST_BIND`] = debug_elf.ST_BIND
	Functions[`/debug/elf/ST_INFO`] = debug_elf.ST_INFO
	Functions[`/debug/elf/ST_TYPE`] = debug_elf.ST_TYPE
	Functions[`/debug/elf/ST_VISIBILITY`] = debug_elf.ST_VISIBILITY
	Functions[`/debug/gosym/NewLineTable`] = debug_gosym.NewLineTable
	Functions[`/debug/gosym/NewTable`] = debug_gosym.NewTable
	Functions[`/debug/macho/NewFile`] = debug_macho.NewFile
	Functions[`/debug/macho/Open`] = debug_macho.Open
	Functions[`/debug/pe/NewFile`] = debug_pe.NewFile
	Functions[`/debug/pe/Open`] = debug_pe.Open
	Functions[`/encoding/ascii85/Decode`] = encoding_ascii85.Decode
	Functions[`/encoding/ascii85/Encode`] = encoding_ascii85.Encode
	Functions[`/encoding/ascii85/MaxEncodedLen`] = encoding_ascii85.MaxEncodedLen
	Functions[`/encoding/ascii85/NewDecoder`] = encoding_ascii85.NewDecoder
	Functions[`/encoding/ascii85/NewEncoder`] = encoding_ascii85.NewEncoder
	Functions[`/encoding/asn1/Marshal`] = encoding_asn1.Marshal
	Functions[`/encoding/asn1/Unmarshal`] = encoding_asn1.Unmarshal
	Functions[`/encoding/asn1/UnmarshalWithParams`] = encoding_asn1.UnmarshalWithParams
	Functions[`/encoding/base32/NewDecoder`] = encoding_base32.NewDecoder
	Functions[`/encoding/base32/NewEncoder`] = encoding_base32.NewEncoder
	Functions[`/encoding/base32/NewEncoding`] = encoding_base32.NewEncoding
	Functions[`/encoding/base64/NewDecoder`] = encoding_base64.NewDecoder
	Functions[`/encoding/base64/NewEncoder`] = encoding_base64.NewEncoder
	Functions[`/encoding/base64/NewEncoding`] = encoding_base64.NewEncoding
	Functions[`/encoding/binary/PutUvarint`] = encoding_binary.PutUvarint
	Functions[`/encoding/binary/PutVarint`] = encoding_binary.PutVarint
	Functions[`/encoding/binary/Read`] = encoding_binary.Read
	Functions[`/encoding/binary/ReadUvarint`] = encoding_binary.ReadUvarint
	Functions[`/encoding/binary/ReadVarint`] = encoding_binary.ReadVarint
	Functions[`/encoding/binary/Size`] = encoding_binary.Size
	Functions[`/encoding/binary/Uvarint`] = encoding_binary.Uvarint
	Functions[`/encoding/binary/Varint`] = encoding_binary.Varint
	Functions[`/encoding/binary/Write`] = encoding_binary.Write
	Functions[`/encoding/csv/NewReader`] = encoding_csv.NewReader
	Functions[`/encoding/csv/NewWriter`] = encoding_csv.NewWriter
	Functions[`/encoding/gob/NewDecoder`] = encoding_gob.NewDecoder
	Functions[`/encoding/gob/NewEncoder`] = encoding_gob.NewEncoder
	Functions[`/encoding/gob/Register`] = encoding_gob.Register
	Functions[`/encoding/gob/RegisterName`] = encoding_gob.RegisterName
	Functions[`/encoding/hex/Decode`] = encoding_hex.Decode
	Functions[`/encoding/hex/DecodeString`] = encoding_hex.DecodeString
	Functions[`/encoding/hex/DecodedLen`] = encoding_hex.DecodedLen
	Functions[`/encoding/hex/Dump`] = encoding_hex.Dump
	Functions[`/encoding/hex/Dumper`] = encoding_hex.Dumper
	Functions[`/encoding/hex/Encode`] = encoding_hex.Encode
	Functions[`/encoding/hex/EncodeToString`] = encoding_hex.EncodeToString
	Functions[`/encoding/hex/EncodedLen`] = encoding_hex.EncodedLen
	Functions[`/encoding/json/Compact`] = encoding_json.Compact
	Functions[`/encoding/json/HTMLEscape`] = encoding_json.HTMLEscape
	Functions[`/encoding/json/Indent`] = encoding_json.Indent
	Functions[`/encoding/json/Marshal`] = encoding_json.Marshal
	Functions[`/encoding/json/MarshalIndent`] = encoding_json.MarshalIndent
	Functions[`/encoding/json/NewDecoder`] = encoding_json.NewDecoder
	Functions[`/encoding/json/NewEncoder`] = encoding_json.NewEncoder
	Functions[`/encoding/json/Unmarshal`] = encoding_json.Unmarshal
	Functions[`/encoding/pem/Decode`] = encoding_pem.Decode
	Functions[`/encoding/pem/Encode`] = encoding_pem.Encode
	Functions[`/encoding/pem/EncodeToMemory`] = encoding_pem.EncodeToMemory
	Functions[`/encoding/xml/CopyToken`] = encoding_xml.CopyToken
	Functions[`/encoding/xml/Escape`] = encoding_xml.Escape
	Functions[`/encoding/xml/Marshal`] = encoding_xml.Marshal
	Functions[`/encoding/xml/MarshalIndent`] = encoding_xml.MarshalIndent
	Functions[`/encoding/xml/NewDecoder`] = encoding_xml.NewDecoder
	Functions[`/encoding/xml/NewEncoder`] = encoding_xml.NewEncoder
	Functions[`/encoding/xml/Unmarshal`] = encoding_xml.Unmarshal
	Functions[`/errors/New`] = errors.New
	Functions[`/expvar/Do`] = expvar.Do
	Functions[`/expvar/Get`] = expvar.Get
	Functions[`/expvar/NewFloat`] = expvar.NewFloat
	Functions[`/expvar/NewInt`] = expvar.NewInt
	Functions[`/expvar/NewMap`] = expvar.NewMap
	Functions[`/expvar/NewString`] = expvar.NewString
	Functions[`/expvar/Publish`] = expvar.Publish
	Functions[`/flag/Arg`] = flag.Arg
	Functions[`/flag/Args`] = flag.Args
	Functions[`/flag/Bool`] = flag.Bool
	Functions[`/flag/BoolVar`] = flag.BoolVar
	Functions[`/flag/Duration`] = flag.Duration
	Functions[`/flag/DurationVar`] = flag.DurationVar
	Functions[`/flag/Float64`] = flag.Float64
	Functions[`/flag/Float64Var`] = flag.Float64Var
	Functions[`/flag/Int`] = flag.Int
	Functions[`/flag/Int64`] = flag.Int64
	Functions[`/flag/Int64Var`] = flag.Int64Var
	Functions[`/flag/IntVar`] = flag.IntVar
	Functions[`/flag/Lookup`] = flag.Lookup
	Functions[`/flag/NArg`] = flag.NArg
	Functions[`/flag/NFlag`] = flag.NFlag
	Functions[`/flag/NewFlagSet`] = flag.NewFlagSet
	Functions[`/flag/Parse`] = flag.Parse
	Functions[`/flag/Parsed`] = flag.Parsed
	Functions[`/flag/PrintDefaults`] = flag.PrintDefaults
	Functions[`/flag/Set`] = flag.Set
	Functions[`/flag/String`] = flag.String
	Functions[`/flag/StringVar`] = flag.StringVar
	Functions[`/flag/Uint`] = flag.Uint
	Functions[`/flag/Uint64`] = flag.Uint64
	Functions[`/flag/Uint64Var`] = flag.Uint64Var
	Functions[`/flag/UintVar`] = flag.UintVar
	Functions[`/flag/Var`] = flag.Var
	Functions[`/flag/Visit`] = flag.Visit
	Functions[`/flag/VisitAll`] = flag.VisitAll
	Functions[`/fmt/Errorf`] = fmt.Errorf
	Functions[`/fmt/Fprint`] = fmt.Fprint
	Functions[`/fmt/Fprintf`] = fmt.Fprintf
	Functions[`/fmt/Fprintln`] = fmt.Fprintln
	Functions[`/fmt/Fscan`] = fmt.Fscan
	Functions[`/fmt/Fscanf`] = fmt.Fscanf
	Functions[`/fmt/Fscanln`] = fmt.Fscanln
	Functions[`/fmt/Print`] = fmt.Print
	Functions[`/fmt/Printf`] = fmt.Printf
	Functions[`/fmt/Println`] = fmt.Println
	Functions[`/fmt/Scan`] = fmt.Scan
	Functions[`/fmt/Scanf`] = fmt.Scanf
	Functions[`/fmt/Scanln`] = fmt.Scanln
	Functions[`/fmt/Sprint`] = fmt.Sprint
	Functions[`/fmt/Sprintf`] = fmt.Sprintf
	Functions[`/fmt/Sprintln`] = fmt.Sprintln
	Functions[`/fmt/Sscan`] = fmt.Sscan
	Functions[`/fmt/Sscanf`] = fmt.Sscanf
	Functions[`/fmt/Sscanln`] = fmt.Sscanln
	Functions[`/go/ast/FileExports`] = go_ast.FileExports
	Functions[`/go/ast/FilterDecl`] = go_ast.FilterDecl
	Functions[`/go/ast/FilterFile`] = go_ast.FilterFile
	Functions[`/go/ast/FilterPackage`] = go_ast.FilterPackage
	Functions[`/go/ast/Fprint`] = go_ast.Fprint
	Functions[`/go/ast/Inspect`] = go_ast.Inspect
	Functions[`/go/ast/IsExported`] = go_ast.IsExported
	Functions[`/go/ast/MergePackageFiles`] = go_ast.MergePackageFiles
	Functions[`/go/ast/NewIdent`] = go_ast.NewIdent
	Functions[`/go/ast/NewObj`] = go_ast.NewObj
	Functions[`/go/ast/NewPackage`] = go_ast.NewPackage
	Functions[`/go/ast/NewScope`] = go_ast.NewScope
	Functions[`/go/ast/NotNilFilter`] = go_ast.NotNilFilter
	Functions[`/go/ast/PackageExports`] = go_ast.PackageExports
	Functions[`/go/ast/Print`] = go_ast.Print
	Functions[`/go/ast/SortImports`] = go_ast.SortImports
	Functions[`/go/ast/Walk`] = go_ast.Walk
	Functions[`/go/build/ArchChar`] = go_build.ArchChar
	Functions[`/go/build/Import`] = go_build.Import
	Functions[`/go/build/ImportDir`] = go_build.ImportDir
	Functions[`/go/build/IsLocalImport`] = go_build.IsLocalImport
	Functions[`/go/doc/Examples`] = go_doc.Examples
	Functions[`/go/doc/New`] = go_doc.New
	Functions[`/go/doc/Synopsis`] = go_doc.Synopsis
	Functions[`/go/doc/ToHTML`] = go_doc.ToHTML
	Functions[`/go/doc/ToText`] = go_doc.ToText
	Functions[`/go/parser/ParseDir`] = go_parser.ParseDir
	Functions[`/go/parser/ParseExpr`] = go_parser.ParseExpr
	Functions[`/go/parser/ParseFile`] = go_parser.ParseFile
	Functions[`/go/printer/Fprint`] = go_printer.Fprint
	Functions[`/go/scanner/PrintError`] = go_scanner.PrintError
	Functions[`/go/token/Lookup`] = go_token.Lookup
	Functions[`/go/token/NewFileSet`] = go_token.NewFileSet
	Functions[`/hash/adler32/Checksum`] = hash_adler32.Checksum
	Functions[`/hash/adler32/New`] = hash_adler32.New
	Functions[`/hash/crc32/Checksum`] = hash_crc32.Checksum
	Functions[`/hash/crc32/ChecksumIEEE`] = hash_crc32.ChecksumIEEE
	Functions[`/hash/crc32/MakeTable`] = hash_crc32.MakeTable
	Functions[`/hash/crc32/New`] = hash_crc32.New
	Functions[`/hash/crc32/NewIEEE`] = hash_crc32.NewIEEE
	Functions[`/hash/crc32/Update`] = hash_crc32.Update
	Functions[`/hash/crc64/Checksum`] = hash_crc64.Checksum
	Functions[`/hash/crc64/MakeTable`] = hash_crc64.MakeTable
	Functions[`/hash/crc64/New`] = hash_crc64.New
	Functions[`/hash/crc64/Update`] = hash_crc64.Update
	Functions[`/hash/fnv/New32`] = hash_fnv.New32
	Functions[`/hash/fnv/New32a`] = hash_fnv.New32a
	Functions[`/hash/fnv/New64`] = hash_fnv.New64
	Functions[`/hash/fnv/New64a`] = hash_fnv.New64a
	Functions[`/html/EscapeString`] = html.EscapeString
	Functions[`/html/UnescapeString`] = html.UnescapeString
	Functions[`/html/template/HTMLEscape`] = html_template.HTMLEscape
	Functions[`/html/template/HTMLEscapeString`] = html_template.HTMLEscapeString
	Functions[`/html/template/HTMLEscaper`] = html_template.HTMLEscaper
	Functions[`/html/template/JSEscape`] = html_template.JSEscape
	Functions[`/html/template/JSEscapeString`] = html_template.JSEscapeString
	Functions[`/html/template/JSEscaper`] = html_template.JSEscaper
	Functions[`/html/template/Must`] = html_template.Must
	Functions[`/html/template/New`] = html_template.New
	Functions[`/html/template/ParseFiles`] = html_template.ParseFiles
	Functions[`/html/template/ParseGlob`] = html_template.ParseGlob
	Functions[`/html/template/URLQueryEscaper`] = html_template.URLQueryEscaper
	Functions[`/image/Decode`] = image.Decode
	Functions[`/image/DecodeConfig`] = image.DecodeConfig
	Functions[`/image/NewAlpha`] = image.NewAlpha
	Functions[`/image/NewAlpha16`] = image.NewAlpha16
	Functions[`/image/NewGray`] = image.NewGray
	Functions[`/image/NewGray16`] = image.NewGray16
	Functions[`/image/NewNRGBA`] = image.NewNRGBA
	Functions[`/image/NewNRGBA64`] = image.NewNRGBA64
	Functions[`/image/NewPaletted`] = image.NewPaletted
	Functions[`/image/NewRGBA`] = image.NewRGBA
	Functions[`/image/NewRGBA64`] = image.NewRGBA64
	Functions[`/image/NewUniform`] = image.NewUniform
	Functions[`/image/NewYCbCr`] = image.NewYCbCr
	Functions[`/image/Pt`] = image.Pt
	Functions[`/image/Rect`] = image.Rect
	Functions[`/image/RegisterFormat`] = image.RegisterFormat
	Functions[`/image/color/ModelFunc`] = image_color.ModelFunc
	Functions[`/image/color/RGBToYCbCr`] = image_color.RGBToYCbCr
	Functions[`/image/color/YCbCrToRGB`] = image_color.YCbCrToRGB
	Functions[`/image/draw/Draw`] = image_draw.Draw
	Functions[`/image/draw/DrawMask`] = image_draw.DrawMask
	Functions[`/image/gif/Decode`] = image_gif.Decode
	Functions[`/image/gif/DecodeAll`] = image_gif.DecodeAll
	Functions[`/image/gif/DecodeConfig`] = image_gif.DecodeConfig
	Functions[`/image/jpeg/Decode`] = image_jpeg.Decode
	Functions[`/image/jpeg/DecodeConfig`] = image_jpeg.DecodeConfig
	Functions[`/image/jpeg/Encode`] = image_jpeg.Encode
	Functions[`/image/png/Decode`] = image_png.Decode
	Functions[`/image/png/DecodeConfig`] = image_png.DecodeConfig
	Functions[`/image/png/Encode`] = image_png.Encode
	Functions[`/index/suffixarray/New`] = index_suffixarray.New
	Functions[`/io/Copy`] = io.Copy
	Functions[`/io/CopyN`] = io.CopyN
	Functions[`/io/LimitReader`] = io.LimitReader
	Functions[`/io/MultiReader`] = io.MultiReader
	Functions[`/io/MultiWriter`] = io.MultiWriter
	Functions[`/io/NewSectionReader`] = io.NewSectionReader
	Functions[`/io/Pipe`] = io.Pipe
	Functions[`/io/ReadAtLeast`] = io.ReadAtLeast
	Functions[`/io/ReadFull`] = io.ReadFull
	Functions[`/io/TeeReader`] = io.TeeReader
	Functions[`/io/WriteString`] = io.WriteString
	Functions[`/io/ioutil/NopCloser`] = io_ioutil.NopCloser
	Functions[`/io/ioutil/ReadAll`] = io_ioutil.ReadAll
	Functions[`/io/ioutil/ReadDir`] = io_ioutil.ReadDir
	Functions[`/io/ioutil/ReadFile`] = io_ioutil.ReadFile
	Functions[`/io/ioutil/TempDir`] = io_ioutil.TempDir
	Functions[`/io/ioutil/TempFile`] = io_ioutil.TempFile
	Functions[`/io/ioutil/WriteFile`] = io_ioutil.WriteFile
	Functions[`/log/Fatal`] = log.Fatal
	Functions[`/log/Fatalf`] = log.Fatalf
	Functions[`/log/Fatalln`] = log.Fatalln
	Functions[`/log/Flags`] = log.Flags
	Functions[`/log/New`] = log.New
	Functions[`/log/Panic`] = log.Panic
	Functions[`/log/Panicf`] = log.Panicf
	Functions[`/log/Panicln`] = log.Panicln
	Functions[`/log/Prefix`] = log.Prefix
	Functions[`/log/Print`] = log.Print
	Functions[`/log/Printf`] = log.Printf
	Functions[`/log/Println`] = log.Println
	Functions[`/log/SetFlags`] = log.SetFlags
	Functions[`/log/SetOutput`] = log.SetOutput
	Functions[`/log/SetPrefix`] = log.SetPrefix
	Functions[`/math/Abs`] = math.Abs
	Functions[`/math/Acos`] = math.Acos
	Functions[`/math/Acosh`] = math.Acosh
	Functions[`/math/Asin`] = math.Asin
	Functions[`/math/Asinh`] = math.Asinh
	Functions[`/math/Atan`] = math.Atan
	Functions[`/math/Atan2`] = math.Atan2
	Functions[`/math/Atanh`] = math.Atanh
	Functions[`/math/Cbrt`] = math.Cbrt
	Functions[`/math/Ceil`] = math.Ceil
	Functions[`/math/Copysign`] = math.Copysign
	Functions[`/math/Cos`] = math.Cos
	Functions[`/math/Cosh`] = math.Cosh
	Functions[`/math/Dim`] = math.Dim
	Functions[`/math/Erf`] = math.Erf
	Functions[`/math/Erfc`] = math.Erfc
	Functions[`/math/Exp`] = math.Exp
	Functions[`/math/Exp2`] = math.Exp2
	Functions[`/math/Expm1`] = math.Expm1
	Functions[`/math/Float32bits`] = math.Float32bits
	Functions[`/math/Float32frombits`] = math.Float32frombits
	Functions[`/math/Float64bits`] = math.Float64bits
	Functions[`/math/Float64frombits`] = math.Float64frombits
	Functions[`/math/Floor`] = math.Floor
	Functions[`/math/Frexp`] = math.Frexp
	Functions[`/math/Gamma`] = math.Gamma
	Functions[`/math/Hypot`] = math.Hypot
	Functions[`/math/Ilogb`] = math.Ilogb
	Functions[`/math/Inf`] = math.Inf
	Functions[`/math/IsInf`] = math.IsInf
	Functions[`/math/IsNaN`] = math.IsNaN
	Functions[`/math/J0`] = math.J0
	Functions[`/math/J1`] = math.J1
	Functions[`/math/Jn`] = math.Jn
	Functions[`/math/Ldexp`] = math.Ldexp
	Functions[`/math/Lgamma`] = math.Lgamma
	Functions[`/math/Log`] = math.Log
	Functions[`/math/Log10`] = math.Log10
	Functions[`/math/Log1p`] = math.Log1p
	Functions[`/math/Log2`] = math.Log2
	Functions[`/math/Logb`] = math.Logb
	Functions[`/math/Max`] = math.Max
	Functions[`/math/Min`] = math.Min
	Functions[`/math/Mod`] = math.Mod
	Functions[`/math/Modf`] = math.Modf
	Functions[`/math/NaN`] = math.NaN
	Functions[`/math/Nextafter`] = math.Nextafter
	Functions[`/math/Pow`] = math.Pow
	Functions[`/math/Pow10`] = math.Pow10
	Functions[`/math/Remainder`] = math.Remainder
	Functions[`/math/Signbit`] = math.Signbit
	Functions[`/math/Sin`] = math.Sin
	Functions[`/math/Sincos`] = math.Sincos
	Functions[`/math/Sinh`] = math.Sinh
	Functions[`/math/Sqrt`] = math.Sqrt
	Functions[`/math/Tan`] = math.Tan
	Functions[`/math/Tanh`] = math.Tanh
	Functions[`/math/Trunc`] = math.Trunc
	Functions[`/math/Y0`] = math.Y0
	Functions[`/math/Y1`] = math.Y1
	Functions[`/math/Yn`] = math.Yn
	Functions[`/math/big/NewInt`] = math_big.NewInt
	Functions[`/math/big/NewRat`] = math_big.NewRat
	Functions[`/math/cmplx/Abs`] = math_cmplx.Abs
	Functions[`/math/cmplx/Acos`] = math_cmplx.Acos
	Functions[`/math/cmplx/Acosh`] = math_cmplx.Acosh
	Functions[`/math/cmplx/Asin`] = math_cmplx.Asin
	Functions[`/math/cmplx/Asinh`] = math_cmplx.Asinh
	Functions[`/math/cmplx/Atan`] = math_cmplx.Atan
	Functions[`/math/cmplx/Atanh`] = math_cmplx.Atanh
	Functions[`/math/cmplx/Conj`] = math_cmplx.Conj
	Functions[`/math/cmplx/Cos`] = math_cmplx.Cos
	Functions[`/math/cmplx/Cosh`] = math_cmplx.Cosh
	Functions[`/math/cmplx/Cot`] = math_cmplx.Cot
	Functions[`/math/cmplx/Exp`] = math_cmplx.Exp
	Functions[`/math/cmplx/Inf`] = math_cmplx.Inf
	Functions[`/math/cmplx/IsInf`] = math_cmplx.IsInf
	Functions[`/math/cmplx/IsNaN`] = math_cmplx.IsNaN
	Functions[`/math/cmplx/Log`] = math_cmplx.Log
	Functions[`/math/cmplx/Log10`] = math_cmplx.Log10
	Functions[`/math/cmplx/NaN`] = math_cmplx.NaN
	Functions[`/math/cmplx/Phase`] = math_cmplx.Phase
	Functions[`/math/cmplx/Polar`] = math_cmplx.Polar
	Functions[`/math/cmplx/Pow`] = math_cmplx.Pow
	Functions[`/math/cmplx/Rect`] = math_cmplx.Rect
	Functions[`/math/cmplx/Sin`] = math_cmplx.Sin
	Functions[`/math/cmplx/Sinh`] = math_cmplx.Sinh
	Functions[`/math/cmplx/Sqrt`] = math_cmplx.Sqrt
	Functions[`/math/cmplx/Tan`] = math_cmplx.Tan
	Functions[`/math/cmplx/Tanh`] = math_cmplx.Tanh
	Functions[`/math/rand/ExpFloat64`] = math_rand.ExpFloat64
	Functions[`/math/rand/Float32`] = math_rand.Float32
	Functions[`/math/rand/Float64`] = math_rand.Float64
	Functions[`/math/rand/Int`] = math_rand.Int
	Functions[`/math/rand/Int31`] = math_rand.Int31
	Functions[`/math/rand/Int31n`] = math_rand.Int31n
	Functions[`/math/rand/Int63`] = math_rand.Int63
	Functions[`/math/rand/Int63n`] = math_rand.Int63n
	Functions[`/math/rand/Intn`] = math_rand.Intn
	Functions[`/math/rand/New`] = math_rand.New
	Functions[`/math/rand/NewSource`] = math_rand.NewSource
	Functions[`/math/rand/NewZipf`] = math_rand.NewZipf
	Functions[`/math/rand/NormFloat64`] = math_rand.NormFloat64
	Functions[`/math/rand/Perm`] = math_rand.Perm
	Functions[`/math/rand/Seed`] = math_rand.Seed
	Functions[`/math/rand/Uint32`] = math_rand.Uint32
	Functions[`/mime/AddExtensionType`] = mime.AddExtensionType
	Functions[`/mime/FormatMediaType`] = mime.FormatMediaType
	Functions[`/mime/ParseMediaType`] = mime.ParseMediaType
	Functions[`/mime/TypeByExtension`] = mime.TypeByExtension
	Functions[`/mime/multipart/NewReader`] = mime_multipart.NewReader
	Functions[`/mime/multipart/NewWriter`] = mime_multipart.NewWriter
	Functions[`/net/CIDRMask`] = net.CIDRMask
	Functions[`/net/Dial`] = net.Dial
	Functions[`/net/DialIP`] = net.DialIP
	Functions[`/net/DialTCP`] = net.DialTCP
	Functions[`/net/DialTimeout`] = net.DialTimeout
	Functions[`/net/DialUDP`] = net.DialUDP
	Functions[`/net/DialUnix`] = net.DialUnix
	Functions[`/net/FileConn`] = net.FileConn
	Functions[`/net/FileListener`] = net.FileListener
	Functions[`/net/FilePacketConn`] = net.FilePacketConn
	Functions[`/net/IPv4`] = net.IPv4
	Functions[`/net/IPv4Mask`] = net.IPv4Mask
	Functions[`/net/InterfaceAddrs`] = net.InterfaceAddrs
	Functions[`/net/InterfaceByIndex`] = net.InterfaceByIndex
	Functions[`/net/InterfaceByName`] = net.InterfaceByName
	Functions[`/net/Interfaces`] = net.Interfaces
	Functions[`/net/JoinHostPort`] = net.JoinHostPort
	Functions[`/net/Listen`] = net.Listen
	Functions[`/net/ListenIP`] = net.ListenIP
	Functions[`/net/ListenMulticastUDP`] = net.ListenMulticastUDP
	Functions[`/net/ListenPacket`] = net.ListenPacket
	Functions[`/net/ListenTCP`] = net.ListenTCP
	Functions[`/net/ListenUDP`] = net.ListenUDP
	Functions[`/net/ListenUnix`] = net.ListenUnix
	Functions[`/net/ListenUnixgram`] = net.ListenUnixgram
	Functions[`/net/LookupAddr`] = net.LookupAddr
	Functions[`/net/LookupCNAME`] = net.LookupCNAME
	Functions[`/net/LookupHost`] = net.LookupHost
	Functions[`/net/LookupIP`] = net.LookupIP
	Functions[`/net/LookupMX`] = net.LookupMX
	Functions[`/net/LookupPort`] = net.LookupPort
	Functions[`/net/LookupSRV`] = net.LookupSRV
	Functions[`/net/LookupTXT`] = net.LookupTXT
	Functions[`/net/ParseCIDR`] = net.ParseCIDR
	Functions[`/net/ParseIP`] = net.ParseIP
	Functions[`/net/ParseMAC`] = net.ParseMAC
	Functions[`/net/Pipe`] = net.Pipe
	Functions[`/net/ResolveIPAddr`] = net.ResolveIPAddr
	Functions[`/net/ResolveTCPAddr`] = net.ResolveTCPAddr
	Functions[`/net/ResolveUDPAddr`] = net.ResolveUDPAddr
	Functions[`/net/ResolveUnixAddr`] = net.ResolveUnixAddr
	Functions[`/net/SplitHostPort`] = net.SplitHostPort
	Functions[`/net/http/CanonicalHeaderKey`] = net_http.CanonicalHeaderKey
	Functions[`/net/http/DetectContentType`] = net_http.DetectContentType
	Functions[`/net/http/Error`] = net_http.Error
	Functions[`/net/http/FileServer`] = net_http.FileServer
	Functions[`/net/http/Get`] = net_http.Get
	Functions[`/net/http/Handle`] = net_http.Handle
	Functions[`/net/http/HandleFunc`] = net_http.HandleFunc
	Functions[`/net/http/Head`] = net_http.Head
	Functions[`/net/http/ListenAndServe`] = net_http.ListenAndServe
	Functions[`/net/http/ListenAndServeTLS`] = net_http.ListenAndServeTLS
	Functions[`/net/http/MaxBytesReader`] = net_http.MaxBytesReader
	Functions[`/net/http/NewFileTransport`] = net_http.NewFileTransport
	Functions[`/net/http/NewRequest`] = net_http.NewRequest
	Functions[`/net/http/NewServeMux`] = net_http.NewServeMux
	Functions[`/net/http/NotFound`] = net_http.NotFound
	Functions[`/net/http/NotFoundHandler`] = net_http.NotFoundHandler
	Functions[`/net/http/ParseHTTPVersion`] = net_http.ParseHTTPVersion
	Functions[`/net/http/Post`] = net_http.Post
	Functions[`/net/http/PostForm`] = net_http.PostForm
	Functions[`/net/http/ProxyFromEnvironment`] = net_http.ProxyFromEnvironment
	Functions[`/net/http/ProxyURL`] = net_http.ProxyURL
	Functions[`/net/http/ReadRequest`] = net_http.ReadRequest
	Functions[`/net/http/ReadResponse`] = net_http.ReadResponse
	Functions[`/net/http/Redirect`] = net_http.Redirect
	Functions[`/net/http/RedirectHandler`] = net_http.RedirectHandler
	Functions[`/net/http/Serve`] = net_http.Serve
	Functions[`/net/http/ServeContent`] = net_http.ServeContent
	Functions[`/net/http/ServeFile`] = net_http.ServeFile
	Functions[`/net/http/SetCookie`] = net_http.SetCookie
	Functions[`/net/http/StatusText`] = net_http.StatusText
	Functions[`/net/http/StripPrefix`] = net_http.StripPrefix
	Functions[`/net/http/TimeoutHandler`] = net_http.TimeoutHandler
	Functions[`/net/http/cgi/Request`] = net_http_cgi.Request
	Functions[`/net/http/cgi/RequestFromMap`] = net_http_cgi.RequestFromMap
	Functions[`/net/http/cgi/Serve`] = net_http_cgi.Serve
	Functions[`/net/http/fcgi/Serve`] = net_http_fcgi.Serve
	Functions[`/net/http/httptest/NewRecorder`] = net_http_httptest.NewRecorder
	Functions[`/net/http/httptest/NewServer`] = net_http_httptest.NewServer
	Functions[`/net/http/httptest/NewTLSServer`] = net_http_httptest.NewTLSServer
	Functions[`/net/http/httptest/NewUnstartedServer`] = net_http_httptest.NewUnstartedServer
	Functions[`/net/http/httputil/DumpRequest`] = net_http_httputil.DumpRequest
	Functions[`/net/http/httputil/DumpRequestOut`] = net_http_httputil.DumpRequestOut
	Functions[`/net/http/httputil/DumpResponse`] = net_http_httputil.DumpResponse
	Functions[`/net/http/httputil/NewChunkedReader`] = net_http_httputil.NewChunkedReader
	Functions[`/net/http/httputil/NewChunkedWriter`] = net_http_httputil.NewChunkedWriter
	Functions[`/net/http/httputil/NewClientConn`] = net_http_httputil.NewClientConn
	Functions[`/net/http/httputil/NewProxyClientConn`] = net_http_httputil.NewProxyClientConn
	Functions[`/net/http/httputil/NewServerConn`] = net_http_httputil.NewServerConn
	Functions[`/net/http/httputil/NewSingleHostReverseProxy`] = net_http_httputil.NewSingleHostReverseProxy
	Functions[`/net/http/pprof/Cmdline`] = net_http_pprof.Cmdline
	Functions[`/net/http/pprof/Handler`] = net_http_pprof.Handler
	Functions[`/net/http/pprof/Index`] = net_http_pprof.Index
	Functions[`/net/http/pprof/Profile`] = net_http_pprof.Profile
	Functions[`/net/http/pprof/Symbol`] = net_http_pprof.Symbol
	Functions[`/net/mail/ReadMessage`] = net_mail.ReadMessage
	Functions[`/net/rpc/Accept`] = net_rpc.Accept
	Functions[`/net/rpc/Dial`] = net_rpc.Dial
	Functions[`/net/rpc/DialHTTP`] = net_rpc.DialHTTP
	Functions[`/net/rpc/DialHTTPPath`] = net_rpc.DialHTTPPath
	Functions[`/net/rpc/HandleHTTP`] = net_rpc.HandleHTTP
	Functions[`/net/rpc/NewClient`] = net_rpc.NewClient
	Functions[`/net/rpc/NewClientWithCodec`] = net_rpc.NewClientWithCodec
	Functions[`/net/rpc/NewServer`] = net_rpc.NewServer
	Functions[`/net/rpc/Register`] = net_rpc.Register
	Functions[`/net/rpc/RegisterName`] = net_rpc.RegisterName
	Functions[`/net/rpc/ServeCodec`] = net_rpc.ServeCodec
	Functions[`/net/rpc/ServeConn`] = net_rpc.ServeConn
	Functions[`/net/rpc/ServeRequest`] = net_rpc.ServeRequest
	Functions[`/net/rpc/jsonrpc/Dial`] = net_rpc_jsonrpc.Dial
	Functions[`/net/rpc/jsonrpc/NewClient`] = net_rpc_jsonrpc.NewClient
	Functions[`/net/rpc/jsonrpc/NewClientCodec`] = net_rpc_jsonrpc.NewClientCodec
	Functions[`/net/rpc/jsonrpc/NewServerCodec`] = net_rpc_jsonrpc.NewServerCodec
	Functions[`/net/rpc/jsonrpc/ServeConn`] = net_rpc_jsonrpc.ServeConn
	Functions[`/net/smtp/CRAMMD5Auth`] = net_smtp.CRAMMD5Auth
	Functions[`/net/smtp/Dial`] = net_smtp.Dial
	Functions[`/net/smtp/NewClient`] = net_smtp.NewClient
	Functions[`/net/smtp/PlainAuth`] = net_smtp.PlainAuth
	Functions[`/net/smtp/SendMail`] = net_smtp.SendMail
	Functions[`/net/textproto/CanonicalMIMEHeaderKey`] = net_textproto.CanonicalMIMEHeaderKey
	Functions[`/net/textproto/Dial`] = net_textproto.Dial
	Functions[`/net/textproto/NewConn`] = net_textproto.NewConn
	Functions[`/net/textproto/NewReader`] = net_textproto.NewReader
	Functions[`/net/textproto/NewWriter`] = net_textproto.NewWriter
	Functions[`/net/url/Parse`] = net_url.Parse
	Functions[`/net/url/ParseQuery`] = net_url.ParseQuery
	Functions[`/net/url/ParseRequestURI`] = net_url.ParseRequestURI
	Functions[`/net/url/QueryEscape`] = net_url.QueryEscape
	Functions[`/net/url/QueryUnescape`] = net_url.QueryUnescape
	Functions[`/net/url/User`] = net_url.User
	Functions[`/net/url/UserPassword`] = net_url.UserPassword
	Functions[`/os/Chdir`] = os.Chdir
	Functions[`/os/Chmod`] = os.Chmod
	Functions[`/os/Chown`] = os.Chown
	Functions[`/os/Chtimes`] = os.Chtimes
	Functions[`/os/Clearenv`] = os.Clearenv
	Functions[`/os/Create`] = os.Create
	Functions[`/os/Environ`] = os.Environ
	Functions[`/os/Exit`] = os.Exit
	Functions[`/os/Expand`] = os.Expand
	Functions[`/os/ExpandEnv`] = os.ExpandEnv
	Functions[`/os/FindProcess`] = os.FindProcess
	Functions[`/os/Getegid`] = os.Getegid
	Functions[`/os/Getenv`] = os.Getenv
	Functions[`/os/Geteuid`] = os.Geteuid
	Functions[`/os/Getgid`] = os.Getgid
	Functions[`/os/Getgroups`] = os.Getgroups
	Functions[`/os/Getpagesize`] = os.Getpagesize
	Functions[`/os/Getpid`] = os.Getpid
	Functions[`/os/Getppid`] = os.Getppid
	Functions[`/os/Getuid`] = os.Getuid
	Functions[`/os/Getwd`] = os.Getwd
	Functions[`/os/Hostname`] = os.Hostname
	Functions[`/os/IsExist`] = os.IsExist
	Functions[`/os/IsNotExist`] = os.IsNotExist
	Functions[`/os/IsPathSeparator`] = os.IsPathSeparator
	Functions[`/os/IsPermission`] = os.IsPermission
	Functions[`/os/Lchown`] = os.Lchown
	Functions[`/os/Link`] = os.Link
	Functions[`/os/Lstat`] = os.Lstat
	Functions[`/os/Mkdir`] = os.Mkdir
	Functions[`/os/MkdirAll`] = os.MkdirAll
	Functions[`/os/NewFile`] = os.NewFile
	Functions[`/os/NewSyscallError`] = os.NewSyscallError
	Functions[`/os/Open`] = os.Open
	Functions[`/os/OpenFile`] = os.OpenFile
	Functions[`/os/Pipe`] = os.Pipe
	Functions[`/os/Readlink`] = os.Readlink
	Functions[`/os/Remove`] = os.Remove
	Functions[`/os/RemoveAll`] = os.RemoveAll
	Functions[`/os/Rename`] = os.Rename
	Functions[`/os/SameFile`] = os.SameFile
	Functions[`/os/Setenv`] = os.Setenv
	Functions[`/os/StartProcess`] = os.StartProcess
	Functions[`/os/Stat`] = os.Stat
	Functions[`/os/Symlink`] = os.Symlink
	Functions[`/os/TempDir`] = os.TempDir
	Functions[`/os/Truncate`] = os.Truncate
	Functions[`/os/exec/Command`] = os_exec.Command
	Functions[`/os/exec/LookPath`] = os_exec.LookPath
	Functions[`/os/signal/Notify`] = os_signal.Notify
	Functions[`/os/user/Current`] = os_user.Current
	Functions[`/os/user/Lookup`] = os_user.Lookup
	Functions[`/os/user/LookupId`] = os_user.LookupId
	Functions[`/path/Base`] = path.Base
	Functions[`/path/Clean`] = path.Clean
	Functions[`/path/Dir`] = path.Dir
	Functions[`/path/Ext`] = path.Ext
	Functions[`/path/IsAbs`] = path.IsAbs
	Functions[`/path/Join`] = path.Join
	Functions[`/path/Match`] = path.Match
	Functions[`/path/Split`] = path.Split
	Functions[`/path/filepath/Abs`] = path_filepath.Abs
	Functions[`/path/filepath/Base`] = path_filepath.Base
	Functions[`/path/filepath/Clean`] = path_filepath.Clean
	Functions[`/path/filepath/Dir`] = path_filepath.Dir
	Functions[`/path/filepath/EvalSymlinks`] = path_filepath.EvalSymlinks
	Functions[`/path/filepath/Ext`] = path_filepath.Ext
	Functions[`/path/filepath/FromSlash`] = path_filepath.FromSlash
	Functions[`/path/filepath/Glob`] = path_filepath.Glob
	Functions[`/path/filepath/HasPrefix`] = path_filepath.HasPrefix
	Functions[`/path/filepath/IsAbs`] = path_filepath.IsAbs
	Functions[`/path/filepath/Join`] = path_filepath.Join
	Functions[`/path/filepath/Match`] = path_filepath.Match
	Functions[`/path/filepath/Rel`] = path_filepath.Rel
	Functions[`/path/filepath/Split`] = path_filepath.Split
	Functions[`/path/filepath/SplitList`] = path_filepath.SplitList
	Functions[`/path/filepath/ToSlash`] = path_filepath.ToSlash
	Functions[`/path/filepath/VolumeName`] = path_filepath.VolumeName
	Functions[`/path/filepath/Walk`] = path_filepath.Walk
	Functions[`/reflect/Append`] = reflect.Append
	Functions[`/reflect/AppendSlice`] = reflect.AppendSlice
	Functions[`/reflect/Copy`] = reflect.Copy
	Functions[`/reflect/DeepEqual`] = reflect.DeepEqual
	Functions[`/reflect/Indirect`] = reflect.Indirect
	Functions[`/reflect/MakeChan`] = reflect.MakeChan
	Functions[`/reflect/MakeMap`] = reflect.MakeMap
	Functions[`/reflect/MakeSlice`] = reflect.MakeSlice
	Functions[`/reflect/New`] = reflect.New
	Functions[`/reflect/NewAt`] = reflect.NewAt
	Functions[`/reflect/PtrTo`] = reflect.PtrTo
	Functions[`/reflect/TypeOf`] = reflect.TypeOf
	Functions[`/reflect/ValueOf`] = reflect.ValueOf
	Functions[`/reflect/Zero`] = reflect.Zero
	Functions[`/regexp/Compile`] = regexp.Compile
	Functions[`/regexp/CompilePOSIX`] = regexp.CompilePOSIX
	Functions[`/regexp/Match`] = regexp.Match
	Functions[`/regexp/MatchReader`] = regexp.MatchReader
	Functions[`/regexp/MatchString`] = regexp.MatchString
	Functions[`/regexp/MustCompile`] = regexp.MustCompile
	Functions[`/regexp/MustCompilePOSIX`] = regexp.MustCompilePOSIX
	Functions[`/regexp/QuoteMeta`] = regexp.QuoteMeta
	Functions[`/regexp/syntax/Compile`] = regexp_syntax.Compile
	Functions[`/regexp/syntax/EmptyOpContext`] = regexp_syntax.EmptyOpContext
	Functions[`/regexp/syntax/IsWordChar`] = regexp_syntax.IsWordChar
	Functions[`/regexp/syntax/Parse`] = regexp_syntax.Parse
	Functions[`/runtime/Breakpoint`] = runtime.Breakpoint
	Functions[`/runtime/CPUProfile`] = runtime.CPUProfile
	Functions[`/runtime/Caller`] = runtime.Caller
	Functions[`/runtime/Callers`] = runtime.Callers
	Functions[`/runtime/FuncForPC`] = runtime.FuncForPC
	Functions[`/runtime/GC`] = runtime.GC
	Functions[`/runtime/GOMAXPROCS`] = runtime.GOMAXPROCS
	Functions[`/runtime/GOROOT`] = runtime.GOROOT
	Functions[`/runtime/Goexit`] = runtime.Goexit
	Functions[`/runtime/GoroutineProfile`] = runtime.GoroutineProfile
	Functions[`/runtime/Gosched`] = runtime.Gosched
	Functions[`/runtime/LockOSThread`] = runtime.LockOSThread
	Functions[`/runtime/MemProfile`] = runtime.MemProfile
	Functions[`/runtime/NumCPU`] = runtime.NumCPU
	Functions[`/runtime/NumCgoCall`] = runtime.NumCgoCall
	Functions[`/runtime/NumGoroutine`] = runtime.NumGoroutine
	Functions[`/runtime/ReadMemStats`] = runtime.ReadMemStats
	Functions[`/runtime/SetCPUProfileRate`] = runtime.SetCPUProfileRate
	Functions[`/runtime/SetFinalizer`] = runtime.SetFinalizer
	Functions[`/runtime/Stack`] = runtime.Stack
	Functions[`/runtime/ThreadCreateProfile`] = runtime.ThreadCreateProfile
	Functions[`/runtime/UnlockOSThread`] = runtime.UnlockOSThread
	Functions[`/runtime/Version`] = runtime.Version
	Functions[`/runtime/debug/PrintStack`] = runtime_debug.PrintStack
	Functions[`/runtime/debug/Stack`] = runtime_debug.Stack
	Functions[`/runtime/pprof/Lookup`] = runtime_pprof.Lookup
	Functions[`/runtime/pprof/NewProfile`] = runtime_pprof.NewProfile
	Functions[`/runtime/pprof/Profiles`] = runtime_pprof.Profiles
	Functions[`/runtime/pprof/StartCPUProfile`] = runtime_pprof.StartCPUProfile
	Functions[`/runtime/pprof/StopCPUProfile`] = runtime_pprof.StopCPUProfile
	Functions[`/runtime/pprof/WriteHeapProfile`] = runtime_pprof.WriteHeapProfile
	Functions[`/sort/Float64s`] = sort.Float64s
	Functions[`/sort/Float64sAreSorted`] = sort.Float64sAreSorted
	Functions[`/sort/Ints`] = sort.Ints
	Functions[`/sort/IntsAreSorted`] = sort.IntsAreSorted
	Functions[`/sort/IsSorted`] = sort.IsSorted
	Functions[`/sort/Search`] = sort.Search
	Functions[`/sort/SearchFloat64s`] = sort.SearchFloat64s
	Functions[`/sort/SearchInts`] = sort.SearchInts
	Functions[`/sort/SearchStrings`] = sort.SearchStrings
	Functions[`/sort/Sort`] = sort.Sort
	Functions[`/sort/Strings`] = sort.Strings
	Functions[`/sort/StringsAreSorted`] = sort.StringsAreSorted
	Functions[`/strconv/AppendBool`] = strconv.AppendBool
	Functions[`/strconv/AppendFloat`] = strconv.AppendFloat
	Functions[`/strconv/AppendInt`] = strconv.AppendInt
	Functions[`/strconv/AppendQuote`] = strconv.AppendQuote
	Functions[`/strconv/AppendQuoteRune`] = strconv.AppendQuoteRune
	Functions[`/strconv/AppendQuoteRuneToASCII`] = strconv.AppendQuoteRuneToASCII
	Functions[`/strconv/AppendQuoteToASCII`] = strconv.AppendQuoteToASCII
	Functions[`/strconv/AppendUint`] = strconv.AppendUint
	Functions[`/strconv/Atoi`] = strconv.Atoi
	Functions[`/strconv/CanBackquote`] = strconv.CanBackquote
	Functions[`/strconv/FormatBool`] = strconv.FormatBool
	Functions[`/strconv/FormatFloat`] = strconv.FormatFloat
	Functions[`/strconv/FormatInt`] = strconv.FormatInt
	Functions[`/strconv/FormatUint`] = strconv.FormatUint
	Functions[`/strconv/IsPrint`] = strconv.IsPrint
	Functions[`/strconv/Itoa`] = strconv.Itoa
	Functions[`/strconv/ParseBool`] = strconv.ParseBool
	Functions[`/strconv/ParseFloat`] = strconv.ParseFloat
	Functions[`/strconv/ParseInt`] = strconv.ParseInt
	Functions[`/strconv/ParseUint`] = strconv.ParseUint
	Functions[`/strconv/Quote`] = strconv.Quote
	Functions[`/strconv/QuoteRune`] = strconv.QuoteRune
	Functions[`/strconv/QuoteRuneToASCII`] = strconv.QuoteRuneToASCII
	Functions[`/strconv/QuoteToASCII`] = strconv.QuoteToASCII
	Functions[`/strconv/Unquote`] = strconv.Unquote
	Functions[`/strconv/UnquoteChar`] = strconv.UnquoteChar
	Functions[`/strings/Contains`] = strings.Contains
	Functions[`/strings/ContainsAny`] = strings.ContainsAny
	Functions[`/strings/ContainsRune`] = strings.ContainsRune
	Functions[`/strings/Count`] = strings.Count
	Functions[`/strings/EqualFold`] = strings.EqualFold
	Functions[`/strings/Fields`] = strings.Fields
	Functions[`/strings/FieldsFunc`] = strings.FieldsFunc
	Functions[`/strings/HasPrefix`] = strings.HasPrefix
	Functions[`/strings/HasSuffix`] = strings.HasSuffix
	Functions[`/strings/Index`] = strings.Index
	Functions[`/strings/IndexAny`] = strings.IndexAny
	Functions[`/strings/IndexFunc`] = strings.IndexFunc
	Functions[`/strings/IndexRune`] = strings.IndexRune
	Functions[`/strings/Join`] = strings.Join
	Functions[`/strings/LastIndex`] = strings.LastIndex
	Functions[`/strings/LastIndexAny`] = strings.LastIndexAny
	Functions[`/strings/LastIndexFunc`] = strings.LastIndexFunc
	Functions[`/strings/Map`] = strings.Map
	Functions[`/strings/NewReader`] = strings.NewReader
	Functions[`/strings/NewReplacer`] = strings.NewReplacer
	Functions[`/strings/Repeat`] = strings.Repeat
	Functions[`/strings/Replace`] = strings.Replace
	Functions[`/strings/Split`] = strings.Split
	Functions[`/strings/SplitAfter`] = strings.SplitAfter
	Functions[`/strings/SplitAfterN`] = strings.SplitAfterN
	Functions[`/strings/SplitN`] = strings.SplitN
	Functions[`/strings/Title`] = strings.Title
	Functions[`/strings/ToLower`] = strings.ToLower
	Functions[`/strings/ToLowerSpecial`] = strings.ToLowerSpecial
	Functions[`/strings/ToTitle`] = strings.ToTitle
	Functions[`/strings/ToTitleSpecial`] = strings.ToTitleSpecial
	Functions[`/strings/ToUpper`] = strings.ToUpper
	Functions[`/strings/ToUpperSpecial`] = strings.ToUpperSpecial
	Functions[`/strings/Trim`] = strings.Trim
	Functions[`/strings/TrimFunc`] = strings.TrimFunc
	Functions[`/strings/TrimLeft`] = strings.TrimLeft
	Functions[`/strings/TrimLeftFunc`] = strings.TrimLeftFunc
	Functions[`/strings/TrimRight`] = strings.TrimRight
	Functions[`/strings/TrimRightFunc`] = strings.TrimRightFunc
	Functions[`/strings/TrimSpace`] = strings.TrimSpace
	Functions[`/sync/NewCond`] = sync.NewCond
	Functions[`/sync/atomic/AddInt32`] = sync_atomic.AddInt32
	Functions[`/sync/atomic/AddInt64`] = sync_atomic.AddInt64
	Functions[`/sync/atomic/AddUint32`] = sync_atomic.AddUint32
	Functions[`/sync/atomic/AddUint64`] = sync_atomic.AddUint64
	Functions[`/sync/atomic/AddUintptr`] = sync_atomic.AddUintptr
	Functions[`/sync/atomic/CompareAndSwapInt32`] = sync_atomic.CompareAndSwapInt32
	Functions[`/sync/atomic/CompareAndSwapInt64`] = sync_atomic.CompareAndSwapInt64
	Functions[`/sync/atomic/CompareAndSwapPointer`] = sync_atomic.CompareAndSwapPointer
	Functions[`/sync/atomic/CompareAndSwapUint32`] = sync_atomic.CompareAndSwapUint32
	Functions[`/sync/atomic/CompareAndSwapUint64`] = sync_atomic.CompareAndSwapUint64
	Functions[`/sync/atomic/CompareAndSwapUintptr`] = sync_atomic.CompareAndSwapUintptr
	Functions[`/sync/atomic/LoadInt32`] = sync_atomic.LoadInt32
	Functions[`/sync/atomic/LoadInt64`] = sync_atomic.LoadInt64
	Functions[`/sync/atomic/LoadPointer`] = sync_atomic.LoadPointer
	Functions[`/sync/atomic/LoadUint32`] = sync_atomic.LoadUint32
	Functions[`/sync/atomic/LoadUint64`] = sync_atomic.LoadUint64
	Functions[`/sync/atomic/LoadUintptr`] = sync_atomic.LoadUintptr
	Functions[`/sync/atomic/StoreInt32`] = sync_atomic.StoreInt32
	Functions[`/sync/atomic/StoreInt64`] = sync_atomic.StoreInt64
	Functions[`/sync/atomic/StorePointer`] = sync_atomic.StorePointer
	Functions[`/sync/atomic/StoreUint32`] = sync_atomic.StoreUint32
	Functions[`/sync/atomic/StoreUint64`] = sync_atomic.StoreUint64
	Functions[`/sync/atomic/StoreUintptr`] = sync_atomic.StoreUintptr
	Functions[`/syscall/Chdir`] = syscall.Chdir
	Functions[`/syscall/Chmod`] = syscall.Chmod
	Functions[`/syscall/Chown`] = syscall.Chown
	Functions[`/syscall/Clearenv`] = syscall.Clearenv
	Functions[`/syscall/Environ`] = syscall.Environ
	Functions[`/syscall/Exec`] = syscall.Exec
	Functions[`/syscall/Exit`] = syscall.Exit
	Functions[`/syscall/Getegid`] = syscall.Getegid
	Functions[`/syscall/Getenv`] = syscall.Getenv
	Functions[`/syscall/Geteuid`] = syscall.Geteuid
	Functions[`/syscall/Getgid`] = syscall.Getgid
	Functions[`/syscall/Getgroups`] = syscall.Getgroups
	Functions[`/syscall/Getpagesize`] = syscall.Getpagesize
	Functions[`/syscall/Getpid`] = syscall.Getpid
	Functions[`/syscall/Getppid`] = syscall.Getppid
	Functions[`/syscall/Gettimeofday`] = syscall.Gettimeofday
	Functions[`/syscall/Getuid`] = syscall.Getuid
	Functions[`/syscall/Getwd`] = syscall.Getwd
	Functions[`/syscall/Lchown`] = syscall.Lchown
	Functions[`/syscall/Link`] = syscall.Link
	Functions[`/syscall/Mkdir`] = syscall.Mkdir
	Functions[`/syscall/NsecToTimeval`] = syscall.NsecToTimeval
	Functions[`/syscall/Readlink`] = syscall.Readlink
	Functions[`/syscall/Rename`] = syscall.Rename
	Functions[`/syscall/Rmdir`] = syscall.Rmdir
	Functions[`/syscall/Setenv`] = syscall.Setenv
	Functions[`/syscall/StartProcess`] = syscall.StartProcess
	Functions[`/syscall/StringBytePtr`] = syscall.StringBytePtr
	Functions[`/syscall/StringByteSlice`] = syscall.StringByteSlice
	Functions[`/syscall/Symlink`] = syscall.Symlink
	Functions[`/syscall/Unlink`] = syscall.Unlink
	Functions[`/syscall/Utimes`] = syscall.Utimes
	Functions[`/testing/Benchmark`] = testing.Benchmark
	Functions[`/testing/Main`] = testing.Main
	Functions[`/testing/RunBenchmarks`] = testing.RunBenchmarks
	Functions[`/testing/RunExamples`] = testing.RunExamples
	Functions[`/testing/RunTests`] = testing.RunTests
	Functions[`/testing/Short`] = testing.Short
	Functions[`/testing/iotest/DataErrReader`] = testing_iotest.DataErrReader
	Functions[`/testing/iotest/HalfReader`] = testing_iotest.HalfReader
	Functions[`/testing/iotest/NewReadLogger`] = testing_iotest.NewReadLogger
	Functions[`/testing/iotest/NewWriteLogger`] = testing_iotest.NewWriteLogger
	Functions[`/testing/iotest/OneByteReader`] = testing_iotest.OneByteReader
	Functions[`/testing/iotest/TimeoutReader`] = testing_iotest.TimeoutReader
	Functions[`/testing/iotest/TruncateWriter`] = testing_iotest.TruncateWriter
	Functions[`/testing/quick/Check`] = testing_quick.Check
	Functions[`/testing/quick/CheckEqual`] = testing_quick.CheckEqual
	Functions[`/testing/quick/Value`] = testing_quick.Value
	Functions[`/text/scanner/TokenString`] = text_scanner.TokenString
	Functions[`/text/tabwriter/NewWriter`] = text_tabwriter.NewWriter
	Functions[`/text/template/HTMLEscape`] = text_template.HTMLEscape
	Functions[`/text/template/HTMLEscapeString`] = text_template.HTMLEscapeString
	Functions[`/text/template/HTMLEscaper`] = text_template.HTMLEscaper
	Functions[`/text/template/JSEscape`] = text_template.JSEscape
	Functions[`/text/template/JSEscapeString`] = text_template.JSEscapeString
	Functions[`/text/template/JSEscaper`] = text_template.JSEscaper
	Functions[`/text/template/Must`] = text_template.Must
	Functions[`/text/template/New`] = text_template.New
	Functions[`/text/template/ParseFiles`] = text_template.ParseFiles
	Functions[`/text/template/ParseGlob`] = text_template.ParseGlob
	Functions[`/text/template/URLQueryEscaper`] = text_template.URLQueryEscaper
	Functions[`/text/template/parse/IsEmptyTree`] = text_template_parse.IsEmptyTree
	Functions[`/text/template/parse/New`] = text_template_parse.New
	Functions[`/text/template/parse/NewIdentifier`] = text_template_parse.NewIdentifier
	Functions[`/text/template/parse/Parse`] = text_template_parse.Parse
	Functions[`/time/After`] = time.After
	Functions[`/time/AfterFunc`] = time.AfterFunc
	Functions[`/time/Date`] = time.Date
	Functions[`/time/FixedZone`] = time.FixedZone
	Functions[`/time/LoadLocation`] = time.LoadLocation
	Functions[`/time/NewTicker`] = time.NewTicker
	Functions[`/time/NewTimer`] = time.NewTimer
	Functions[`/time/Now`] = time.Now
	Functions[`/time/Parse`] = time.Parse
	Functions[`/time/ParseDuration`] = time.ParseDuration
	Functions[`/time/Since`] = time.Since
	Functions[`/time/Sleep`] = time.Sleep
	Functions[`/time/Tick`] = time.Tick
	Functions[`/time/Unix`] = time.Unix
	Functions[`/unicode/Is`] = unicode.Is
	Functions[`/unicode/IsControl`] = unicode.IsControl
	Functions[`/unicode/IsDigit`] = unicode.IsDigit
	Functions[`/unicode/IsGraphic`] = unicode.IsGraphic
	Functions[`/unicode/IsLetter`] = unicode.IsLetter
	Functions[`/unicode/IsLower`] = unicode.IsLower
	Functions[`/unicode/IsMark`] = unicode.IsMark
	Functions[`/unicode/IsNumber`] = unicode.IsNumber
	Functions[`/unicode/IsOneOf`] = unicode.IsOneOf
	Functions[`/unicode/IsPrint`] = unicode.IsPrint
	Functions[`/unicode/IsPunct`] = unicode.IsPunct
	Functions[`/unicode/IsSpace`] = unicode.IsSpace
	Functions[`/unicode/IsSymbol`] = unicode.IsSymbol
	Functions[`/unicode/IsTitle`] = unicode.IsTitle
	Functions[`/unicode/IsUpper`] = unicode.IsUpper
	Functions[`/unicode/SimpleFold`] = unicode.SimpleFold
	Functions[`/unicode/To`] = unicode.To
	Functions[`/unicode/ToLower`] = unicode.ToLower
	Functions[`/unicode/ToTitle`] = unicode.ToTitle
	Functions[`/unicode/ToUpper`] = unicode.ToUpper
	Functions[`/unicode/utf16/Decode`] = unicode_utf16.Decode
	Functions[`/unicode/utf16/DecodeRune`] = unicode_utf16.DecodeRune
	Functions[`/unicode/utf16/Encode`] = unicode_utf16.Encode
	Functions[`/unicode/utf16/EncodeRune`] = unicode_utf16.EncodeRune
	Functions[`/unicode/utf16/IsSurrogate`] = unicode_utf16.IsSurrogate
	Functions[`/unicode/utf8/DecodeLastRune`] = unicode_utf8.DecodeLastRune
	Functions[`/unicode/utf8/DecodeLastRuneInString`] = unicode_utf8.DecodeLastRuneInString
	Functions[`/unicode/utf8/DecodeRune`] = unicode_utf8.DecodeRune
	Functions[`/unicode/utf8/DecodeRuneInString`] = unicode_utf8.DecodeRuneInString
	Functions[`/unicode/utf8/EncodeRune`] = unicode_utf8.EncodeRune
	Functions[`/unicode/utf8/FullRune`] = unicode_utf8.FullRune
	Functions[`/unicode/utf8/FullRuneInString`] = unicode_utf8.FullRuneInString
	Functions[`/unicode/utf8/RuneCount`] = unicode_utf8.RuneCount
	Functions[`/unicode/utf8/RuneCountInString`] = unicode_utf8.RuneCountInString
	Functions[`/unicode/utf8/RuneLen`] = unicode_utf8.RuneLen
	Functions[`/unicode/utf8/RuneStart`] = unicode_utf8.RuneStart
	Functions[`/unicode/utf8/Valid`] = unicode_utf8.Valid
	Functions[`/unicode/utf8/ValidString`] = unicode_utf8.ValidString
	Vars[`/archive/tar/ErrFieldTooLong`] = &archive_tar.ErrFieldTooLong
	Vars[`/archive/tar/ErrHeader`] = &archive_tar.ErrHeader
	Vars[`/archive/tar/ErrWriteAfterClose`] = &archive_tar.ErrWriteAfterClose
	Vars[`/archive/tar/ErrWriteTooLong`] = &archive_tar.ErrWriteTooLong
	Vars[`/archive/zip/ErrAlgorithm`] = &archive_zip.ErrAlgorithm
	Vars[`/archive/zip/ErrChecksum`] = &archive_zip.ErrChecksum
	Vars[`/archive/zip/ErrFormat`] = &archive_zip.ErrFormat
	Vars[`/bufio/ErrBufferFull`] = &bufio.ErrBufferFull
	Vars[`/bufio/ErrInvalidUnreadByte`] = &bufio.ErrInvalidUnreadByte
	Vars[`/bufio/ErrInvalidUnreadRune`] = &bufio.ErrInvalidUnreadRune
	Vars[`/bufio/ErrNegativeCount`] = &bufio.ErrNegativeCount
	Vars[`/bytes/ErrTooLarge`] = &bytes.ErrTooLarge
	Vars[`/compress/gzip/ErrChecksum`] = &compress_gzip.ErrChecksum
	Vars[`/compress/gzip/ErrHeader`] = &compress_gzip.ErrHeader
	Vars[`/compress/zlib/ErrChecksum`] = &compress_zlib.ErrChecksum
	Vars[`/compress/zlib/ErrDictionary`] = &compress_zlib.ErrDictionary
	Vars[`/compress/zlib/ErrHeader`] = &compress_zlib.ErrHeader
	Vars[`/crypto/dsa/ErrInvalidPublicKey`] = &crypto_dsa.ErrInvalidPublicKey
	Vars[`/crypto/rand/Reader`] = &crypto_rand.Reader
	Vars[`/crypto/rsa/ErrDecryption`] = &crypto_rsa.ErrDecryption
	Vars[`/crypto/rsa/ErrMessageTooLong`] = &crypto_rsa.ErrMessageTooLong
	Vars[`/crypto/rsa/ErrVerification`] = &crypto_rsa.ErrVerification
	Vars[`/crypto/x509/ErrUnsupportedAlgorithm`] = &crypto_x509.ErrUnsupportedAlgorithm
	Vars[`/database/sql/ErrNoRows`] = &database_sql.ErrNoRows
	Vars[`/database/sql/ErrTxDone`] = &database_sql.ErrTxDone
	Vars[`/database/sql/driver/Bool`] = &database_sql_driver.Bool
	Vars[`/database/sql/driver/DefaultParameterConverter`] = &database_sql_driver.DefaultParameterConverter
	Vars[`/database/sql/driver/ErrBadConn`] = &database_sql_driver.ErrBadConn
	Vars[`/database/sql/driver/ErrSkip`] = &database_sql_driver.ErrSkip
	Vars[`/database/sql/driver/Int32`] = &database_sql_driver.Int32
	Vars[`/database/sql/driver/ResultNoRows`] = &database_sql_driver.ResultNoRows
	Vars[`/database/sql/driver/String`] = &database_sql_driver.String
	Vars[`/encoding/base32/HexEncoding`] = &encoding_base32.HexEncoding
	Vars[`/encoding/base32/StdEncoding`] = &encoding_base32.StdEncoding
	Vars[`/encoding/base64/StdEncoding`] = &encoding_base64.StdEncoding
	Vars[`/encoding/base64/URLEncoding`] = &encoding_base64.URLEncoding
	Vars[`/encoding/binary/BigEndian`] = &encoding_binary.BigEndian
	Vars[`/encoding/binary/LittleEndian`] = &encoding_binary.LittleEndian
	Vars[`/encoding/csv/ErrBareQuote`] = &encoding_csv.ErrBareQuote
	Vars[`/encoding/csv/ErrFieldCount`] = &encoding_csv.ErrFieldCount
	Vars[`/encoding/csv/ErrQuote`] = &encoding_csv.ErrQuote
	Vars[`/encoding/csv/ErrTrailingComma`] = &encoding_csv.ErrTrailingComma
	Vars[`/encoding/hex/ErrLength`] = &encoding_hex.ErrLength
	Vars[`/encoding/xml/HTMLAutoClose`] = &encoding_xml.HTMLAutoClose
	Vars[`/encoding/xml/HTMLEntity`] = &encoding_xml.HTMLEntity
	Vars[`/flag/ErrHelp`] = &flag.ErrHelp
	Vars[`/flag/Usage`] = &flag.Usage
	Vars[`/go/build/Default`] = &go_build.Default
	Vars[`/go/build/ToolDir`] = &go_build.ToolDir
	Vars[`/hash/crc32/IEEETable`] = &hash_crc32.IEEETable
	Vars[`/image/Black`] = &image.Black
	Vars[`/image/ErrFormat`] = &image.ErrFormat
	Vars[`/image/Opaque`] = &image.Opaque
	Vars[`/image/Transparent`] = &image.Transparent
	Vars[`/image/White`] = &image.White
	Vars[`/image/ZP`] = &image.ZP
	Vars[`/image/ZR`] = &image.ZR
	Vars[`/image/color/Alpha16Model`] = &image_color.Alpha16Model
	Vars[`/image/color/AlphaModel`] = &image_color.AlphaModel
	Vars[`/image/color/Black`] = &image_color.Black
	Vars[`/image/color/Gray16Model`] = &image_color.Gray16Model
	Vars[`/image/color/GrayModel`] = &image_color.GrayModel
	Vars[`/image/color/NRGBA64Model`] = &image_color.NRGBA64Model
	Vars[`/image/color/NRGBAModel`] = &image_color.NRGBAModel
	Vars[`/image/color/Opaque`] = &image_color.Opaque
	Vars[`/image/color/RGBA64Model`] = &image_color.RGBA64Model
	Vars[`/image/color/RGBAModel`] = &image_color.RGBAModel
	Vars[`/image/color/Transparent`] = &image_color.Transparent
	Vars[`/image/color/White`] = &image_color.White
	Vars[`/image/color/YCbCrModel`] = &image_color.YCbCrModel
	Vars[`/io/EOF`] = &io.EOF
	Vars[`/io/ErrClosedPipe`] = &io.ErrClosedPipe
	Vars[`/io/ErrShortBuffer`] = &io.ErrShortBuffer
	Vars[`/io/ErrShortWrite`] = &io.ErrShortWrite
	Vars[`/io/ErrUnexpectedEOF`] = &io.ErrUnexpectedEOF
	Vars[`/io/ioutil/Discard`] = &io_ioutil.Discard
	Vars[`/net/ErrWriteToConnected`] = &net.ErrWriteToConnected
	Vars[`/net/IPv4allrouter`] = &net.IPv4allrouter
	Vars[`/net/IPv4allsys`] = &net.IPv4allsys
	Vars[`/net/IPv4bcast`] = &net.IPv4bcast
	Vars[`/net/IPv4zero`] = &net.IPv4zero
	Vars[`/net/IPv6interfacelocalallnodes`] = &net.IPv6interfacelocalallnodes
	Vars[`/net/IPv6linklocalallnodes`] = &net.IPv6linklocalallnodes
	Vars[`/net/IPv6linklocalallrouters`] = &net.IPv6linklocalallrouters
	Vars[`/net/IPv6loopback`] = &net.IPv6loopback
	Vars[`/net/IPv6unspecified`] = &net.IPv6unspecified
	Vars[`/net/IPv6zero`] = &net.IPv6zero
	Vars[`/net/http/DefaultClient`] = &net_http.DefaultClient
	Vars[`/net/http/DefaultServeMux`] = &net_http.DefaultServeMux
	Vars[`/net/http/DefaultTransport`] = &net_http.DefaultTransport
	Vars[`/net/http/ErrBodyNotAllowed`] = &net_http.ErrBodyNotAllowed
	Vars[`/net/http/ErrBodyReadAfterClose`] = &net_http.ErrBodyReadAfterClose
	Vars[`/net/http/ErrContentLength`] = &net_http.ErrContentLength
	Vars[`/net/http/ErrHandlerTimeout`] = &net_http.ErrHandlerTimeout
	Vars[`/net/http/ErrHeaderTooLong`] = &net_http.ErrHeaderTooLong
	Vars[`/net/http/ErrHijacked`] = &net_http.ErrHijacked
	Vars[`/net/http/ErrLineTooLong`] = &net_http.ErrLineTooLong
	Vars[`/net/http/ErrMissingBoundary`] = &net_http.ErrMissingBoundary
	Vars[`/net/http/ErrMissingContentLength`] = &net_http.ErrMissingContentLength
	Vars[`/net/http/ErrMissingFile`] = &net_http.ErrMissingFile
	Vars[`/net/http/ErrNoCookie`] = &net_http.ErrNoCookie
	Vars[`/net/http/ErrNoLocation`] = &net_http.ErrNoLocation
	Vars[`/net/http/ErrNotMultipart`] = &net_http.ErrNotMultipart
	Vars[`/net/http/ErrNotSupported`] = &net_http.ErrNotSupported
	Vars[`/net/http/ErrShortBody`] = &net_http.ErrShortBody
	Vars[`/net/http/ErrUnexpectedTrailer`] = &net_http.ErrUnexpectedTrailer
	Vars[`/net/http/ErrWriteAfterFlush`] = &net_http.ErrWriteAfterFlush
	Vars[`/net/http/httputil/ErrClosed`] = &net_http_httputil.ErrClosed
	Vars[`/net/http/httputil/ErrLineTooLong`] = &net_http_httputil.ErrLineTooLong
	Vars[`/net/http/httputil/ErrPersistEOF`] = &net_http_httputil.ErrPersistEOF
	Vars[`/net/http/httputil/ErrPipeline`] = &net_http_httputil.ErrPipeline
	Vars[`/net/mail/ErrHeaderNotPresent`] = &net_mail.ErrHeaderNotPresent
	Vars[`/net/rpc/DefaultServer`] = &net_rpc.DefaultServer
	Vars[`/net/rpc/ErrShutdown`] = &net_rpc.ErrShutdown
	Vars[`/os/Args`] = &os.Args
	Vars[`/os/ErrExist`] = &os.ErrExist
	Vars[`/os/ErrInvalid`] = &os.ErrInvalid
	Vars[`/os/ErrNotExist`] = &os.ErrNotExist
	Vars[`/os/ErrPermission`] = &os.ErrPermission
	Vars[`/os/Interrupt`] = &os.Interrupt
	Vars[`/os/Kill`] = &os.Kill
	Vars[`/os/Stderr`] = &os.Stderr
	Vars[`/os/Stdin`] = &os.Stdin
	Vars[`/os/Stdout`] = &os.Stdout
	Vars[`/os/exec/ErrNotFound`] = &os_exec.ErrNotFound
	Vars[`/path/ErrBadPattern`] = &path.ErrBadPattern
	Vars[`/path/filepath/ErrBadPattern`] = &path_filepath.ErrBadPattern
	Vars[`/path/filepath/SkipDir`] = &path_filepath.SkipDir
	Vars[`/runtime/MemProfileRate`] = &runtime.MemProfileRate
	Vars[`/strconv/ErrRange`] = &strconv.ErrRange
	Vars[`/strconv/ErrSyntax`] = &strconv.ErrSyntax
	Vars[`/syscall/ForkLock`] = &syscall.ForkLock
	Vars[`/syscall/SocketDisableIPv6`] = &syscall.SocketDisableIPv6
	Vars[`/testing/iotest/ErrTimeout`] = &testing_iotest.ErrTimeout
	Vars[`/time/Local`] = &time.Local
	Vars[`/time/UTC`] = &time.UTC
	Vars[`/unicode/ASCII_Hex_Digit`] = &unicode.ASCII_Hex_Digit
	Vars[`/unicode/Arabic`] = &unicode.Arabic
	Vars[`/unicode/Armenian`] = &unicode.Armenian
	Vars[`/unicode/Avestan`] = &unicode.Avestan
	Vars[`/unicode/AzeriCase`] = &unicode.AzeriCase
	Vars[`/unicode/Balinese`] = &unicode.Balinese
	Vars[`/unicode/Bamum`] = &unicode.Bamum
	Vars[`/unicode/Batak`] = &unicode.Batak
	Vars[`/unicode/Bengali`] = &unicode.Bengali
	Vars[`/unicode/Bidi_Control`] = &unicode.Bidi_Control
	Vars[`/unicode/Bopomofo`] = &unicode.Bopomofo
	Vars[`/unicode/Brahmi`] = &unicode.Brahmi
	Vars[`/unicode/Braille`] = &unicode.Braille
	Vars[`/unicode/Buginese`] = &unicode.Buginese
	Vars[`/unicode/Buhid`] = &unicode.Buhid
	Vars[`/unicode/C`] = &unicode.C
	Vars[`/unicode/Canadian_Aboriginal`] = &unicode.Canadian_Aboriginal
	Vars[`/unicode/Carian`] = &unicode.Carian
	Vars[`/unicode/CaseRanges`] = &unicode.CaseRanges
	Vars[`/unicode/Categories`] = &unicode.Categories
	Vars[`/unicode/Cc`] = &unicode.Cc
	Vars[`/unicode/Cf`] = &unicode.Cf
	Vars[`/unicode/Cham`] = &unicode.Cham
	Vars[`/unicode/Cherokee`] = &unicode.Cherokee
	Vars[`/unicode/Co`] = &unicode.Co
	Vars[`/unicode/Common`] = &unicode.Common
	Vars[`/unicode/Coptic`] = &unicode.Coptic
	Vars[`/unicode/Cs`] = &unicode.Cs
	Vars[`/unicode/Cuneiform`] = &unicode.Cuneiform
	Vars[`/unicode/Cypriot`] = &unicode.Cypriot
	Vars[`/unicode/Cyrillic`] = &unicode.Cyrillic
	Vars[`/unicode/Dash`] = &unicode.Dash
	Vars[`/unicode/Deprecated`] = &unicode.Deprecated
	Vars[`/unicode/Deseret`] = &unicode.Deseret
	Vars[`/unicode/Devanagari`] = &unicode.Devanagari
	Vars[`/unicode/Diacritic`] = &unicode.Diacritic
	Vars[`/unicode/Digit`] = &unicode.Digit
	Vars[`/unicode/Egyptian_Hieroglyphs`] = &unicode.Egyptian_Hieroglyphs
	Vars[`/unicode/Ethiopic`] = &unicode.Ethiopic
	Vars[`/unicode/Extender`] = &unicode.Extender
	Vars[`/unicode/FoldCategory`] = &unicode.FoldCategory
	Vars[`/unicode/FoldScript`] = &unicode.FoldScript
	Vars[`/unicode/Georgian`] = &unicode.Georgian
	Vars[`/unicode/Glagolitic`] = &unicode.Glagolitic
	Vars[`/unicode/Gothic`] = &unicode.Gothic
	Vars[`/unicode/GraphicRanges`] = &unicode.GraphicRanges
	Vars[`/unicode/Greek`] = &unicode.Greek
	Vars[`/unicode/Gujarati`] = &unicode.Gujarati
	Vars[`/unicode/Gurmukhi`] = &unicode.Gurmukhi
	Vars[`/unicode/Han`] = &unicode.Han
	Vars[`/unicode/Hangul`] = &unicode.Hangul
	Vars[`/unicode/Hanunoo`] = &unicode.Hanunoo
	Vars[`/unicode/Hebrew`] = &unicode.Hebrew
	Vars[`/unicode/Hex_Digit`] = &unicode.Hex_Digit
	Vars[`/unicode/Hiragana`] = &unicode.Hiragana
	Vars[`/unicode/Hyphen`] = &unicode.Hyphen
	Vars[`/unicode/IDS_Binary_Operator`] = &unicode.IDS_Binary_Operator
	Vars[`/unicode/IDS_Trinary_Operator`] = &unicode.IDS_Trinary_Operator
	Vars[`/unicode/Ideographic`] = &unicode.Ideographic
	Vars[`/unicode/Imperial_Aramaic`] = &unicode.Imperial_Aramaic
	Vars[`/unicode/Inherited`] = &unicode.Inherited
	Vars[`/unicode/Inscriptional_Pahlavi`] = &unicode.Inscriptional_Pahlavi
	Vars[`/unicode/Inscriptional_Parthian`] = &unicode.Inscriptional_Parthian
	Vars[`/unicode/Javanese`] = &unicode.Javanese
	Vars[`/unicode/Join_Control`] = &unicode.Join_Control
	Vars[`/unicode/Kaithi`] = &unicode.Kaithi
	Vars[`/unicode/Kannada`] = &unicode.Kannada
	Vars[`/unicode/Katakana`] = &unicode.Katakana
	Vars[`/unicode/Kayah_Li`] = &unicode.Kayah_Li
	Vars[`/unicode/Kharoshthi`] = &unicode.Kharoshthi
	Vars[`/unicode/Khmer`] = &unicode.Khmer
	Vars[`/unicode/L`] = &unicode.L
	Vars[`/unicode/Lao`] = &unicode.Lao
	Vars[`/unicode/Latin`] = &unicode.Latin
	Vars[`/unicode/Lepcha`] = &unicode.Lepcha
	Vars[`/unicode/Letter`] = &unicode.Letter
	Vars[`/unicode/Limbu`] = &unicode.Limbu
	Vars[`/unicode/Linear_B`] = &unicode.Linear_B
	Vars[`/unicode/Lisu`] = &unicode.Lisu
	Vars[`/unicode/Ll`] = &unicode.Ll
	Vars[`/unicode/Lm`] = &unicode.Lm
	Vars[`/unicode/Lo`] = &unicode.Lo
	Vars[`/unicode/Logical_Order_Exception`] = &unicode.Logical_Order_Exception
	Vars[`/unicode/Lower`] = &unicode.Lower
	Vars[`/unicode/Lt`] = &unicode.Lt
	Vars[`/unicode/Lu`] = &unicode.Lu
	Vars[`/unicode/Lycian`] = &unicode.Lycian
	Vars[`/unicode/Lydian`] = &unicode.Lydian
	Vars[`/unicode/M`] = &unicode.M
	Vars[`/unicode/Malayalam`] = &unicode.Malayalam
	Vars[`/unicode/Mandaic`] = &unicode.Mandaic
	Vars[`/unicode/Mark`] = &unicode.Mark
	Vars[`/unicode/Mc`] = &unicode.Mc
	Vars[`/unicode/Me`] = &unicode.Me
	Vars[`/unicode/Meetei_Mayek`] = &unicode.Meetei_Mayek
	Vars[`/unicode/Mn`] = &unicode.Mn
	Vars[`/unicode/Mongolian`] = &unicode.Mongolian
	Vars[`/unicode/Myanmar`] = &unicode.Myanmar
	Vars[`/unicode/N`] = &unicode.N
	Vars[`/unicode/Nd`] = &unicode.Nd
	Vars[`/unicode/New_Tai_Lue`] = &unicode.New_Tai_Lue
	Vars[`/unicode/Nko`] = &unicode.Nko
	Vars[`/unicode/Nl`] = &unicode.Nl
	Vars[`/unicode/No`] = &unicode.No
	Vars[`/unicode/Noncharacter_Code_Point`] = &unicode.Noncharacter_Code_Point
	Vars[`/unicode/Number`] = &unicode.Number
	Vars[`/unicode/Ogham`] = &unicode.Ogham
	Vars[`/unicode/Ol_Chiki`] = &unicode.Ol_Chiki
	Vars[`/unicode/Old_Italic`] = &unicode.Old_Italic
	Vars[`/unicode/Old_Persian`] = &unicode.Old_Persian
	Vars[`/unicode/Old_South_Arabian`] = &unicode.Old_South_Arabian
	Vars[`/unicode/Old_Turkic`] = &unicode.Old_Turkic
	Vars[`/unicode/Oriya`] = &unicode.Oriya
	Vars[`/unicode/Osmanya`] = &unicode.Osmanya
	Vars[`/unicode/Other`] = &unicode.Other
	Vars[`/unicode/Other_Alphabetic`] = &unicode.Other_Alphabetic
	Vars[`/unicode/Other_Default_Ignorable_Code_Point`] = &unicode.Other_Default_Ignorable_Code_Point
	Vars[`/unicode/Other_Grapheme_Extend`] = &unicode.Other_Grapheme_Extend
	Vars[`/unicode/Other_ID_Continue`] = &unicode.Other_ID_Continue
	Vars[`/unicode/Other_ID_Start`] = &unicode.Other_ID_Start
	Vars[`/unicode/Other_Lowercase`] = &unicode.Other_Lowercase
	Vars[`/unicode/Other_Math`] = &unicode.Other_Math
	Vars[`/unicode/Other_Uppercase`] = &unicode.Other_Uppercase
	Vars[`/unicode/P`] = &unicode.P
	Vars[`/unicode/Pattern_Syntax`] = &unicode.Pattern_Syntax
	Vars[`/unicode/Pattern_White_Space`] = &unicode.Pattern_White_Space
	Vars[`/unicode/Pc`] = &unicode.Pc
	Vars[`/unicode/Pd`] = &unicode.Pd
	Vars[`/unicode/Pe`] = &unicode.Pe
	Vars[`/unicode/Pf`] = &unicode.Pf
	Vars[`/unicode/Phags_Pa`] = &unicode.Phags_Pa
	Vars[`/unicode/Phoenician`] = &unicode.Phoenician
	Vars[`/unicode/Pi`] = &unicode.Pi
	Vars[`/unicode/Po`] = &unicode.Po
	Vars[`/unicode/PrintRanges`] = &unicode.PrintRanges
	Vars[`/unicode/Properties`] = &unicode.Properties
	Vars[`/unicode/Ps`] = &unicode.Ps
	Vars[`/unicode/Punct`] = &unicode.Punct
	Vars[`/unicode/Quotation_Mark`] = &unicode.Quotation_Mark
	Vars[`/unicode/Radical`] = &unicode.Radical
	Vars[`/unicode/Rejang`] = &unicode.Rejang
	Vars[`/unicode/Runic`] = &unicode.Runic
	Vars[`/unicode/S`] = &unicode.S
	Vars[`/unicode/STerm`] = &unicode.STerm
	Vars[`/unicode/Samaritan`] = &unicode.Samaritan
	Vars[`/unicode/Saurashtra`] = &unicode.Saurashtra
	Vars[`/unicode/Sc`] = &unicode.Sc
	Vars[`/unicode/Scripts`] = &unicode.Scripts
	Vars[`/unicode/Shavian`] = &unicode.Shavian
	Vars[`/unicode/Sinhala`] = &unicode.Sinhala
	Vars[`/unicode/Sk`] = &unicode.Sk
	Vars[`/unicode/Sm`] = &unicode.Sm
	Vars[`/unicode/So`] = &unicode.So
	Vars[`/unicode/Soft_Dotted`] = &unicode.Soft_Dotted
	Vars[`/unicode/Space`] = &unicode.Space
	Vars[`/unicode/Sundanese`] = &unicode.Sundanese
	Vars[`/unicode/Syloti_Nagri`] = &unicode.Syloti_Nagri
	Vars[`/unicode/Symbol`] = &unicode.Symbol
	Vars[`/unicode/Syriac`] = &unicode.Syriac
	Vars[`/unicode/Tagalog`] = &unicode.Tagalog
	Vars[`/unicode/Tagbanwa`] = &unicode.Tagbanwa
	Vars[`/unicode/Tai_Le`] = &unicode.Tai_Le
	Vars[`/unicode/Tai_Tham`] = &unicode.Tai_Tham
	Vars[`/unicode/Tai_Viet`] = &unicode.Tai_Viet
	Vars[`/unicode/Tamil`] = &unicode.Tamil
	Vars[`/unicode/Telugu`] = &unicode.Telugu
	Vars[`/unicode/Terminal_Punctuation`] = &unicode.Terminal_Punctuation
	Vars[`/unicode/Thaana`] = &unicode.Thaana
	Vars[`/unicode/Thai`] = &unicode.Thai
	Vars[`/unicode/Tibetan`] = &unicode.Tibetan
	Vars[`/unicode/Tifinagh`] = &unicode.Tifinagh
	Vars[`/unicode/Title`] = &unicode.Title
	Vars[`/unicode/TurkishCase`] = &unicode.TurkishCase
	Vars[`/unicode/Ugaritic`] = &unicode.Ugaritic
	Vars[`/unicode/Unified_Ideograph`] = &unicode.Unified_Ideograph
	Vars[`/unicode/Upper`] = &unicode.Upper
	Vars[`/unicode/Vai`] = &unicode.Vai
	Vars[`/unicode/Variation_Selector`] = &unicode.Variation_Selector
	Vars[`/unicode/White_Space`] = &unicode.White_Space
	Vars[`/unicode/Yi`] = &unicode.Yi
	Vars[`/unicode/Z`] = &unicode.Z
	Vars[`/unicode/Zl`] = &unicode.Zl
	Vars[`/unicode/Zp`] = &unicode.Zp
	Vars[`/unicode/Zs`] = &unicode.Zs
	Types[`/archive/tar/Header`] = new(archive_tar.Header)
	Types[`/archive/tar/Reader`] = new(archive_tar.Reader)
	Types[`/archive/tar/Writer`] = new(archive_tar.Writer)
	Types[`/archive/zip/File`] = new(archive_zip.File)
	Types[`/archive/zip/FileHeader`] = new(archive_zip.FileHeader)
	Types[`/archive/zip/ReadCloser`] = new(archive_zip.ReadCloser)
	Types[`/archive/zip/Reader`] = new(archive_zip.Reader)
	Types[`/archive/zip/Writer`] = new(archive_zip.Writer)
	Types[`/bufio/ReadWriter`] = new(bufio.ReadWriter)
	Types[`/bufio/Reader`] = new(bufio.Reader)
	Types[`/bufio/Writer`] = new(bufio.Writer)
	Types[`/bytes/Buffer`] = new(bytes.Buffer)
	Types[`/bytes/Reader`] = new(bytes.Reader)
	Types[`/compress/flate/ReadError`] = new(compress_flate.ReadError)
	Types[`/compress/flate/WriteError`] = new(compress_flate.WriteError)
	Types[`/compress/flate/Writer`] = new(compress_flate.Writer)
	Types[`/compress/gzip/Header`] = new(compress_gzip.Header)
	Types[`/compress/gzip/Reader`] = new(compress_gzip.Reader)
	Types[`/compress/gzip/Writer`] = new(compress_gzip.Writer)
	Types[`/compress/zlib/Writer`] = new(compress_zlib.Writer)
	Types[`/container/list/Element`] = new(container_list.Element)
	Types[`/container/list/List`] = new(container_list.List)
	Types[`/container/ring/Ring`] = new(container_ring.Ring)
	Types[`/crypto/cipher/StreamReader`] = new(crypto_cipher.StreamReader)
	Types[`/crypto/cipher/StreamWriter`] = new(crypto_cipher.StreamWriter)
	Types[`/crypto/dsa/Parameters`] = new(crypto_dsa.Parameters)
	Types[`/crypto/dsa/PrivateKey`] = new(crypto_dsa.PrivateKey)
	Types[`/crypto/dsa/PublicKey`] = new(crypto_dsa.PublicKey)
	Types[`/crypto/ecdsa/PrivateKey`] = new(crypto_ecdsa.PrivateKey)
	Types[`/crypto/ecdsa/PublicKey`] = new(crypto_ecdsa.PublicKey)
	Types[`/crypto/elliptic/CurveParams`] = new(crypto_elliptic.CurveParams)
	Types[`/crypto/rc4/Cipher`] = new(crypto_rc4.Cipher)
	Types[`/crypto/rsa/CRTValue`] = new(crypto_rsa.CRTValue)
	Types[`/crypto/rsa/PrecomputedValues`] = new(crypto_rsa.PrecomputedValues)
	Types[`/crypto/rsa/PrivateKey`] = new(crypto_rsa.PrivateKey)
	Types[`/crypto/rsa/PublicKey`] = new(crypto_rsa.PublicKey)
	Types[`/crypto/tls/Certificate`] = new(crypto_tls.Certificate)
	Types[`/crypto/tls/Config`] = new(crypto_tls.Config)
	Types[`/crypto/tls/Conn`] = new(crypto_tls.Conn)
	Types[`/crypto/tls/ConnectionState`] = new(crypto_tls.ConnectionState)
	Types[`/crypto/x509/CertPool`] = new(crypto_x509.CertPool)
	Types[`/crypto/x509/Certificate`] = new(crypto_x509.Certificate)
	Types[`/crypto/x509/CertificateInvalidError`] = new(crypto_x509.CertificateInvalidError)
	Types[`/crypto/x509/ConstraintViolationError`] = new(crypto_x509.ConstraintViolationError)
	Types[`/crypto/x509/HostnameError`] = new(crypto_x509.HostnameError)
	Types[`/crypto/x509/UnhandledCriticalExtension`] = new(crypto_x509.UnhandledCriticalExtension)
	Types[`/crypto/x509/UnknownAuthorityError`] = new(crypto_x509.UnknownAuthorityError)
	Types[`/crypto/x509/VerifyOptions`] = new(crypto_x509.VerifyOptions)
	Types[`/crypto/x509/pkix/AlgorithmIdentifier`] = new(crypto_x509_pkix.AlgorithmIdentifier)
	Types[`/crypto/x509/pkix/AttributeTypeAndValue`] = new(crypto_x509_pkix.AttributeTypeAndValue)
	Types[`/crypto/x509/pkix/CertificateList`] = new(crypto_x509_pkix.CertificateList)
	Types[`/crypto/x509/pkix/Extension`] = new(crypto_x509_pkix.Extension)
	Types[`/crypto/x509/pkix/Name`] = new(crypto_x509_pkix.Name)
	Types[`/crypto/x509/pkix/RevokedCertificate`] = new(crypto_x509_pkix.RevokedCertificate)
	Types[`/crypto/x509/pkix/TBSCertificateList`] = new(crypto_x509_pkix.TBSCertificateList)
	Types[`/database/sql/DB`] = new(database_sql.DB)
	Types[`/database/sql/NullBool`] = new(database_sql.NullBool)
	Types[`/database/sql/NullFloat64`] = new(database_sql.NullFloat64)
	Types[`/database/sql/NullInt64`] = new(database_sql.NullInt64)
	Types[`/database/sql/NullString`] = new(database_sql.NullString)
	Types[`/database/sql/Row`] = new(database_sql.Row)
	Types[`/database/sql/Rows`] = new(database_sql.Rows)
	Types[`/database/sql/Stmt`] = new(database_sql.Stmt)
	Types[`/database/sql/Tx`] = new(database_sql.Tx)
	Types[`/database/sql/driver/NotNull`] = new(database_sql_driver.NotNull)
	Types[`/database/sql/driver/Null`] = new(database_sql_driver.Null)
	Types[`/debug/dwarf/AddrType`] = new(debug_dwarf.AddrType)
	Types[`/debug/dwarf/ArrayType`] = new(debug_dwarf.ArrayType)
	Types[`/debug/dwarf/BasicType`] = new(debug_dwarf.BasicType)
	Types[`/debug/dwarf/BoolType`] = new(debug_dwarf.BoolType)
	Types[`/debug/dwarf/CharType`] = new(debug_dwarf.CharType)
	Types[`/debug/dwarf/CommonType`] = new(debug_dwarf.CommonType)
	Types[`/debug/dwarf/ComplexType`] = new(debug_dwarf.ComplexType)
	Types[`/debug/dwarf/Data`] = new(debug_dwarf.Data)
	Types[`/debug/dwarf/DecodeError`] = new(debug_dwarf.DecodeError)
	Types[`/debug/dwarf/DotDotDotType`] = new(debug_dwarf.DotDotDotType)
	Types[`/debug/dwarf/Entry`] = new(debug_dwarf.Entry)
	Types[`/debug/dwarf/EnumType`] = new(debug_dwarf.EnumType)
	Types[`/debug/dwarf/EnumValue`] = new(debug_dwarf.EnumValue)
	Types[`/debug/dwarf/Field`] = new(debug_dwarf.Field)
	Types[`/debug/dwarf/FloatType`] = new(debug_dwarf.FloatType)
	Types[`/debug/dwarf/FuncType`] = new(debug_dwarf.FuncType)
	Types[`/debug/dwarf/IntType`] = new(debug_dwarf.IntType)
	Types[`/debug/dwarf/PtrType`] = new(debug_dwarf.PtrType)
	Types[`/debug/dwarf/QualType`] = new(debug_dwarf.QualType)
	Types[`/debug/dwarf/Reader`] = new(debug_dwarf.Reader)
	Types[`/debug/dwarf/StructField`] = new(debug_dwarf.StructField)
	Types[`/debug/dwarf/StructType`] = new(debug_dwarf.StructType)
	Types[`/debug/dwarf/TypedefType`] = new(debug_dwarf.TypedefType)
	Types[`/debug/dwarf/UcharType`] = new(debug_dwarf.UcharType)
	Types[`/debug/dwarf/UintType`] = new(debug_dwarf.UintType)
	Types[`/debug/dwarf/VoidType`] = new(debug_dwarf.VoidType)
	Types[`/debug/elf/Dyn32`] = new(debug_elf.Dyn32)
	Types[`/debug/elf/Dyn64`] = new(debug_elf.Dyn64)
	Types[`/debug/elf/File`] = new(debug_elf.File)
	Types[`/debug/elf/FileHeader`] = new(debug_elf.FileHeader)
	Types[`/debug/elf/FormatError`] = new(debug_elf.FormatError)
	Types[`/debug/elf/Header32`] = new(debug_elf.Header32)
	Types[`/debug/elf/Header64`] = new(debug_elf.Header64)
	Types[`/debug/elf/ImportedSymbol`] = new(debug_elf.ImportedSymbol)
	Types[`/debug/elf/Prog`] = new(debug_elf.Prog)
	Types[`/debug/elf/Prog32`] = new(debug_elf.Prog32)
	Types[`/debug/elf/Prog64`] = new(debug_elf.Prog64)
	Types[`/debug/elf/ProgHeader`] = new(debug_elf.ProgHeader)
	Types[`/debug/elf/Rel32`] = new(debug_elf.Rel32)
	Types[`/debug/elf/Rel64`] = new(debug_elf.Rel64)
	Types[`/debug/elf/Rela32`] = new(debug_elf.Rela32)
	Types[`/debug/elf/Rela64`] = new(debug_elf.Rela64)
	Types[`/debug/elf/Section`] = new(debug_elf.Section)
	Types[`/debug/elf/Section32`] = new(debug_elf.Section32)
	Types[`/debug/elf/Section64`] = new(debug_elf.Section64)
	Types[`/debug/elf/SectionHeader`] = new(debug_elf.SectionHeader)
	Types[`/debug/elf/Sym32`] = new(debug_elf.Sym32)
	Types[`/debug/elf/Sym64`] = new(debug_elf.Sym64)
	Types[`/debug/elf/Symbol`] = new(debug_elf.Symbol)
	Types[`/debug/gosym/DecodingError`] = new(debug_gosym.DecodingError)
	Types[`/debug/gosym/Func`] = new(debug_gosym.Func)
	Types[`/debug/gosym/LineTable`] = new(debug_gosym.LineTable)
	Types[`/debug/gosym/Obj`] = new(debug_gosym.Obj)
	Types[`/debug/gosym/Sym`] = new(debug_gosym.Sym)
	Types[`/debug/gosym/Table`] = new(debug_gosym.Table)
	Types[`/debug/gosym/UnknownLineError`] = new(debug_gosym.UnknownLineError)
	Types[`/debug/macho/Dylib`] = new(debug_macho.Dylib)
	Types[`/debug/macho/DylibCmd`] = new(debug_macho.DylibCmd)
	Types[`/debug/macho/Dysymtab`] = new(debug_macho.Dysymtab)
	Types[`/debug/macho/DysymtabCmd`] = new(debug_macho.DysymtabCmd)
	Types[`/debug/macho/File`] = new(debug_macho.File)
	Types[`/debug/macho/FileHeader`] = new(debug_macho.FileHeader)
	Types[`/debug/macho/FormatError`] = new(debug_macho.FormatError)
	Types[`/debug/macho/Nlist32`] = new(debug_macho.Nlist32)
	Types[`/debug/macho/Nlist64`] = new(debug_macho.Nlist64)
	Types[`/debug/macho/Regs386`] = new(debug_macho.Regs386)
	Types[`/debug/macho/RegsAMD64`] = new(debug_macho.RegsAMD64)
	Types[`/debug/macho/Section`] = new(debug_macho.Section)
	Types[`/debug/macho/Section32`] = new(debug_macho.Section32)
	Types[`/debug/macho/Section64`] = new(debug_macho.Section64)
	Types[`/debug/macho/SectionHeader`] = new(debug_macho.SectionHeader)
	Types[`/debug/macho/Segment`] = new(debug_macho.Segment)
	Types[`/debug/macho/Segment32`] = new(debug_macho.Segment32)
	Types[`/debug/macho/Segment64`] = new(debug_macho.Segment64)
	Types[`/debug/macho/SegmentHeader`] = new(debug_macho.SegmentHeader)
	Types[`/debug/macho/Symbol`] = new(debug_macho.Symbol)
	Types[`/debug/macho/Symtab`] = new(debug_macho.Symtab)
	Types[`/debug/macho/SymtabCmd`] = new(debug_macho.SymtabCmd)
	Types[`/debug/macho/Thread`] = new(debug_macho.Thread)
	Types[`/debug/pe/File`] = new(debug_pe.File)
	Types[`/debug/pe/FileHeader`] = new(debug_pe.FileHeader)
	Types[`/debug/pe/FormatError`] = new(debug_pe.FormatError)
	Types[`/debug/pe/ImportDirectory`] = new(debug_pe.ImportDirectory)
	Types[`/debug/pe/Section`] = new(debug_pe.Section)
	Types[`/debug/pe/SectionHeader`] = new(debug_pe.SectionHeader)
	Types[`/debug/pe/SectionHeader32`] = new(debug_pe.SectionHeader32)
	Types[`/encoding/asn1/BitString`] = new(encoding_asn1.BitString)
	Types[`/encoding/asn1/RawValue`] = new(encoding_asn1.RawValue)
	Types[`/encoding/asn1/StructuralError`] = new(encoding_asn1.StructuralError)
	Types[`/encoding/asn1/SyntaxError`] = new(encoding_asn1.SyntaxError)
	Types[`/encoding/base32/Encoding`] = new(encoding_base32.Encoding)
	Types[`/encoding/base64/Encoding`] = new(encoding_base64.Encoding)
	Types[`/encoding/csv/ParseError`] = new(encoding_csv.ParseError)
	Types[`/encoding/csv/Reader`] = new(encoding_csv.Reader)
	Types[`/encoding/csv/Writer`] = new(encoding_csv.Writer)
	Types[`/encoding/gob/CommonType`] = new(encoding_gob.CommonType)
	Types[`/encoding/gob/Decoder`] = new(encoding_gob.Decoder)
	Types[`/encoding/gob/Encoder`] = new(encoding_gob.Encoder)
	Types[`/encoding/json/Decoder`] = new(encoding_json.Decoder)
	Types[`/encoding/json/Encoder`] = new(encoding_json.Encoder)
	Types[`/encoding/json/InvalidUTF8Error`] = new(encoding_json.InvalidUTF8Error)
	Types[`/encoding/json/InvalidUnmarshalError`] = new(encoding_json.InvalidUnmarshalError)
	Types[`/encoding/json/MarshalerError`] = new(encoding_json.MarshalerError)
	Types[`/encoding/json/SyntaxError`] = new(encoding_json.SyntaxError)
	Types[`/encoding/json/UnmarshalFieldError`] = new(encoding_json.UnmarshalFieldError)
	Types[`/encoding/json/UnmarshalTypeError`] = new(encoding_json.UnmarshalTypeError)
	Types[`/encoding/json/UnsupportedTypeError`] = new(encoding_json.UnsupportedTypeError)
	Types[`/encoding/json/UnsupportedValueError`] = new(encoding_json.UnsupportedValueError)
	Types[`/encoding/pem/Block`] = new(encoding_pem.Block)
	Types[`/encoding/xml/Attr`] = new(encoding_xml.Attr)
	Types[`/encoding/xml/Decoder`] = new(encoding_xml.Decoder)
	Types[`/encoding/xml/Encoder`] = new(encoding_xml.Encoder)
	Types[`/encoding/xml/EndElement`] = new(encoding_xml.EndElement)
	Types[`/encoding/xml/Name`] = new(encoding_xml.Name)
	Types[`/encoding/xml/ProcInst`] = new(encoding_xml.ProcInst)
	Types[`/encoding/xml/StartElement`] = new(encoding_xml.StartElement)
	Types[`/encoding/xml/SyntaxError`] = new(encoding_xml.SyntaxError)
	Types[`/encoding/xml/TagPathError`] = new(encoding_xml.TagPathError)
	Types[`/encoding/xml/UnsupportedTypeError`] = new(encoding_xml.UnsupportedTypeError)
	Types[`/expvar/Float`] = new(expvar.Float)
	Types[`/expvar/Int`] = new(expvar.Int)
	Types[`/expvar/KeyValue`] = new(expvar.KeyValue)
	Types[`/expvar/Map`] = new(expvar.Map)
	Types[`/expvar/String`] = new(expvar.String)
	Types[`/flag/Flag`] = new(flag.Flag)
	Types[`/flag/FlagSet`] = new(flag.FlagSet)
	Types[`/go/ast/ArrayType`] = new(go_ast.ArrayType)
	Types[`/go/ast/AssignStmt`] = new(go_ast.AssignStmt)
	Types[`/go/ast/BadDecl`] = new(go_ast.BadDecl)
	Types[`/go/ast/BadExpr`] = new(go_ast.BadExpr)
	Types[`/go/ast/BadStmt`] = new(go_ast.BadStmt)
	Types[`/go/ast/BasicLit`] = new(go_ast.BasicLit)
	Types[`/go/ast/BinaryExpr`] = new(go_ast.BinaryExpr)
	Types[`/go/ast/BlockStmt`] = new(go_ast.BlockStmt)
	Types[`/go/ast/BranchStmt`] = new(go_ast.BranchStmt)
	Types[`/go/ast/CallExpr`] = new(go_ast.CallExpr)
	Types[`/go/ast/CaseClause`] = new(go_ast.CaseClause)
	Types[`/go/ast/ChanType`] = new(go_ast.ChanType)
	Types[`/go/ast/CommClause`] = new(go_ast.CommClause)
	Types[`/go/ast/Comment`] = new(go_ast.Comment)
	Types[`/go/ast/CommentGroup`] = new(go_ast.CommentGroup)
	Types[`/go/ast/CompositeLit`] = new(go_ast.CompositeLit)
	Types[`/go/ast/DeclStmt`] = new(go_ast.DeclStmt)
	Types[`/go/ast/DeferStmt`] = new(go_ast.DeferStmt)
	Types[`/go/ast/Ellipsis`] = new(go_ast.Ellipsis)
	Types[`/go/ast/EmptyStmt`] = new(go_ast.EmptyStmt)
	Types[`/go/ast/ExprStmt`] = new(go_ast.ExprStmt)
	Types[`/go/ast/Field`] = new(go_ast.Field)
	Types[`/go/ast/FieldList`] = new(go_ast.FieldList)
	Types[`/go/ast/File`] = new(go_ast.File)
	Types[`/go/ast/ForStmt`] = new(go_ast.ForStmt)
	Types[`/go/ast/FuncDecl`] = new(go_ast.FuncDecl)
	Types[`/go/ast/FuncLit`] = new(go_ast.FuncLit)
	Types[`/go/ast/FuncType`] = new(go_ast.FuncType)
	Types[`/go/ast/GenDecl`] = new(go_ast.GenDecl)
	Types[`/go/ast/GoStmt`] = new(go_ast.GoStmt)
	Types[`/go/ast/Ident`] = new(go_ast.Ident)
	Types[`/go/ast/IfStmt`] = new(go_ast.IfStmt)
	Types[`/go/ast/ImportSpec`] = new(go_ast.ImportSpec)
	Types[`/go/ast/IncDecStmt`] = new(go_ast.IncDecStmt)
	Types[`/go/ast/IndexExpr`] = new(go_ast.IndexExpr)
	Types[`/go/ast/InterfaceType`] = new(go_ast.InterfaceType)
	Types[`/go/ast/KeyValueExpr`] = new(go_ast.KeyValueExpr)
	Types[`/go/ast/LabeledStmt`] = new(go_ast.LabeledStmt)
	Types[`/go/ast/MapType`] = new(go_ast.MapType)
	Types[`/go/ast/Object`] = new(go_ast.Object)
	Types[`/go/ast/Package`] = new(go_ast.Package)
	Types[`/go/ast/ParenExpr`] = new(go_ast.ParenExpr)
	Types[`/go/ast/RangeStmt`] = new(go_ast.RangeStmt)
	Types[`/go/ast/ReturnStmt`] = new(go_ast.ReturnStmt)
	Types[`/go/ast/Scope`] = new(go_ast.Scope)
	Types[`/go/ast/SelectStmt`] = new(go_ast.SelectStmt)
	Types[`/go/ast/SelectorExpr`] = new(go_ast.SelectorExpr)
	Types[`/go/ast/SendStmt`] = new(go_ast.SendStmt)
	Types[`/go/ast/SliceExpr`] = new(go_ast.SliceExpr)
	Types[`/go/ast/StarExpr`] = new(go_ast.StarExpr)
	Types[`/go/ast/StructType`] = new(go_ast.StructType)
	Types[`/go/ast/SwitchStmt`] = new(go_ast.SwitchStmt)
	Types[`/go/ast/TypeAssertExpr`] = new(go_ast.TypeAssertExpr)
	Types[`/go/ast/TypeSpec`] = new(go_ast.TypeSpec)
	Types[`/go/ast/TypeSwitchStmt`] = new(go_ast.TypeSwitchStmt)
	Types[`/go/ast/UnaryExpr`] = new(go_ast.UnaryExpr)
	Types[`/go/ast/ValueSpec`] = new(go_ast.ValueSpec)
	Types[`/go/build/Context`] = new(go_build.Context)
	Types[`/go/build/NoGoError`] = new(go_build.NoGoError)
	Types[`/go/build/Package`] = new(go_build.Package)
	Types[`/go/doc/Example`] = new(go_doc.Example)
	Types[`/go/doc/Func`] = new(go_doc.Func)
	Types[`/go/doc/Package`] = new(go_doc.Package)
	Types[`/go/doc/Type`] = new(go_doc.Type)
	Types[`/go/doc/Value`] = new(go_doc.Value)
	Types[`/go/printer/CommentedNode`] = new(go_printer.CommentedNode)
	Types[`/go/printer/Config`] = new(go_printer.Config)
	Types[`/go/scanner/Error`] = new(go_scanner.Error)
	Types[`/go/scanner/Scanner`] = new(go_scanner.Scanner)
	Types[`/go/token/File`] = new(go_token.File)
	Types[`/go/token/FileSet`] = new(go_token.FileSet)
	Types[`/go/token/Position`] = new(go_token.Position)
	Types[`/html/template/Error`] = new(html_template.Error)
	Types[`/html/template/Template`] = new(html_template.Template)
	Types[`/image/Alpha`] = new(image.Alpha)
	Types[`/image/Alpha16`] = new(image.Alpha16)
	Types[`/image/Config`] = new(image.Config)
	Types[`/image/Gray`] = new(image.Gray)
	Types[`/image/Gray16`] = new(image.Gray16)
	Types[`/image/NRGBA`] = new(image.NRGBA)
	Types[`/image/NRGBA64`] = new(image.NRGBA64)
	Types[`/image/Paletted`] = new(image.Paletted)
	Types[`/image/Point`] = new(image.Point)
	Types[`/image/RGBA`] = new(image.RGBA)
	Types[`/image/RGBA64`] = new(image.RGBA64)
	Types[`/image/Rectangle`] = new(image.Rectangle)
	Types[`/image/Uniform`] = new(image.Uniform)
	Types[`/image/YCbCr`] = new(image.YCbCr)
	Types[`/image/color/Alpha`] = new(image_color.Alpha)
	Types[`/image/color/Alpha16`] = new(image_color.Alpha16)
	Types[`/image/color/Gray`] = new(image_color.Gray)
	Types[`/image/color/Gray16`] = new(image_color.Gray16)
	Types[`/image/color/NRGBA`] = new(image_color.NRGBA)
	Types[`/image/color/NRGBA64`] = new(image_color.NRGBA64)
	Types[`/image/color/RGBA`] = new(image_color.RGBA)
	Types[`/image/color/RGBA64`] = new(image_color.RGBA64)
	Types[`/image/color/YCbCr`] = new(image_color.YCbCr)
	Types[`/image/gif/GIF`] = new(image_gif.GIF)
	Types[`/image/jpeg/Options`] = new(image_jpeg.Options)
	Types[`/index/suffixarray/Index`] = new(index_suffixarray.Index)
	Types[`/io/LimitedReader`] = new(io.LimitedReader)
	Types[`/io/PipeReader`] = new(io.PipeReader)
	Types[`/io/PipeWriter`] = new(io.PipeWriter)
	Types[`/io/SectionReader`] = new(io.SectionReader)
	Types[`/log/Logger`] = new(log.Logger)
	Types[`/math/big/Int`] = new(math_big.Int)
	Types[`/math/big/Rat`] = new(math_big.Rat)
	Types[`/math/rand/Rand`] = new(math_rand.Rand)
	Types[`/math/rand/Zipf`] = new(math_rand.Zipf)
	Types[`/mime/multipart/FileHeader`] = new(mime_multipart.FileHeader)
	Types[`/mime/multipart/Form`] = new(mime_multipart.Form)
	Types[`/mime/multipart/Part`] = new(mime_multipart.Part)
	Types[`/mime/multipart/Reader`] = new(mime_multipart.Reader)
	Types[`/mime/multipart/Writer`] = new(mime_multipart.Writer)
	Types[`/net/AddrError`] = new(net.AddrError)
	Types[`/net/DNSConfigError`] = new(net.DNSConfigError)
	Types[`/net/DNSError`] = new(net.DNSError)
	Types[`/net/IPAddr`] = new(net.IPAddr)
	Types[`/net/IPConn`] = new(net.IPConn)
	Types[`/net/IPNet`] = new(net.IPNet)
	Types[`/net/Interface`] = new(net.Interface)
	Types[`/net/MX`] = new(net.MX)
	Types[`/net/OpError`] = new(net.OpError)
	Types[`/net/ParseError`] = new(net.ParseError)
	Types[`/net/SRV`] = new(net.SRV)
	Types[`/net/TCPAddr`] = new(net.TCPAddr)
	Types[`/net/TCPConn`] = new(net.TCPConn)
	Types[`/net/TCPListener`] = new(net.TCPListener)
	Types[`/net/UDPAddr`] = new(net.UDPAddr)
	Types[`/net/UDPConn`] = new(net.UDPConn)
	Types[`/net/UnixAddr`] = new(net.UnixAddr)
	Types[`/net/UnixConn`] = new(net.UnixConn)
	Types[`/net/UnixListener`] = new(net.UnixListener)
	Types[`/net/http/Client`] = new(net_http.Client)
	Types[`/net/http/Cookie`] = new(net_http.Cookie)
	Types[`/net/http/ProtocolError`] = new(net_http.ProtocolError)
	Types[`/net/http/Request`] = new(net_http.Request)
	Types[`/net/http/Response`] = new(net_http.Response)
	Types[`/net/http/ServeMux`] = new(net_http.ServeMux)
	Types[`/net/http/Server`] = new(net_http.Server)
	Types[`/net/http/Transport`] = new(net_http.Transport)
	Types[`/net/http/cgi/Handler`] = new(net_http_cgi.Handler)
	Types[`/net/http/httptest/ResponseRecorder`] = new(net_http_httptest.ResponseRecorder)
	Types[`/net/http/httptest/Server`] = new(net_http_httptest.Server)
	Types[`/net/http/httputil/ClientConn`] = new(net_http_httputil.ClientConn)
	Types[`/net/http/httputil/ReverseProxy`] = new(net_http_httputil.ReverseProxy)
	Types[`/net/http/httputil/ServerConn`] = new(net_http_httputil.ServerConn)
	Types[`/net/mail/Address`] = new(net_mail.Address)
	Types[`/net/mail/Message`] = new(net_mail.Message)
	Types[`/net/rpc/Call`] = new(net_rpc.Call)
	Types[`/net/rpc/Client`] = new(net_rpc.Client)
	Types[`/net/rpc/Request`] = new(net_rpc.Request)
	Types[`/net/rpc/Response`] = new(net_rpc.Response)
	Types[`/net/rpc/Server`] = new(net_rpc.Server)
	Types[`/net/smtp/Client`] = new(net_smtp.Client)
	Types[`/net/smtp/ServerInfo`] = new(net_smtp.ServerInfo)
	Types[`/net/textproto/Conn`] = new(net_textproto.Conn)
	Types[`/net/textproto/Error`] = new(net_textproto.Error)
	Types[`/net/textproto/Pipeline`] = new(net_textproto.Pipeline)
	Types[`/net/textproto/Reader`] = new(net_textproto.Reader)
	Types[`/net/textproto/Writer`] = new(net_textproto.Writer)
	Types[`/net/url/Error`] = new(net_url.Error)
	Types[`/net/url/URL`] = new(net_url.URL)
	Types[`/net/url/Userinfo`] = new(net_url.Userinfo)
	Types[`/os/File`] = new(os.File)
	Types[`/os/LinkError`] = new(os.LinkError)
	Types[`/os/PathError`] = new(os.PathError)
	Types[`/os/ProcAttr`] = new(os.ProcAttr)
	Types[`/os/Process`] = new(os.Process)
	Types[`/os/ProcessState`] = new(os.ProcessState)
	Types[`/os/SyscallError`] = new(os.SyscallError)
	Types[`/os/exec/Cmd`] = new(os_exec.Cmd)
	Types[`/os/exec/Error`] = new(os_exec.Error)
	Types[`/os/exec/ExitError`] = new(os_exec.ExitError)
	Types[`/os/user/User`] = new(os_user.User)
	Types[`/reflect/Method`] = new(reflect.Method)
	Types[`/reflect/SliceHeader`] = new(reflect.SliceHeader)
	Types[`/reflect/StringHeader`] = new(reflect.StringHeader)
	Types[`/reflect/StructField`] = new(reflect.StructField)
	Types[`/reflect/Value`] = new(reflect.Value)
	Types[`/reflect/ValueError`] = new(reflect.ValueError)
	Types[`/regexp/Regexp`] = new(regexp.Regexp)
	Types[`/regexp/syntax/Error`] = new(regexp_syntax.Error)
	Types[`/regexp/syntax/Inst`] = new(regexp_syntax.Inst)
	Types[`/regexp/syntax/Prog`] = new(regexp_syntax.Prog)
	Types[`/regexp/syntax/Regexp`] = new(regexp_syntax.Regexp)
	Types[`/runtime/Func`] = new(runtime.Func)
	Types[`/runtime/MemProfileRecord`] = new(runtime.MemProfileRecord)
	Types[`/runtime/MemStats`] = new(runtime.MemStats)
	Types[`/runtime/StackRecord`] = new(runtime.StackRecord)
	Types[`/runtime/TypeAssertionError`] = new(runtime.TypeAssertionError)
	Types[`/runtime/pprof/Profile`] = new(runtime_pprof.Profile)
	Types[`/strconv/NumError`] = new(strconv.NumError)
	Types[`/strings/Reader`] = new(strings.Reader)
	Types[`/strings/Replacer`] = new(strings.Replacer)
	Types[`/sync/Cond`] = new(sync.Cond)
	Types[`/sync/Mutex`] = new(sync.Mutex)
	Types[`/sync/Once`] = new(sync.Once)
	Types[`/sync/RWMutex`] = new(sync.RWMutex)
	Types[`/sync/WaitGroup`] = new(sync.WaitGroup)
	Types[`/syscall/IPMreq`] = new(syscall.IPMreq)
	Types[`/syscall/IPv6Mreq`] = new(syscall.IPv6Mreq)
	Types[`/syscall/Linger`] = new(syscall.Linger)
	Types[`/syscall/ProcAttr`] = new(syscall.ProcAttr)
	Types[`/syscall/RawSockaddr`] = new(syscall.RawSockaddr)
	Types[`/syscall/RawSockaddrAny`] = new(syscall.RawSockaddrAny)
	Types[`/syscall/RawSockaddrInet4`] = new(syscall.RawSockaddrInet4)
	Types[`/syscall/Rusage`] = new(syscall.Rusage)
	Types[`/syscall/SockaddrInet4`] = new(syscall.SockaddrInet4)
	Types[`/syscall/SockaddrInet6`] = new(syscall.SockaddrInet6)
	Types[`/syscall/SockaddrUnix`] = new(syscall.SockaddrUnix)
	Types[`/syscall/SysProcAttr`] = new(syscall.SysProcAttr)
	Types[`/syscall/Timespec`] = new(syscall.Timespec)
	Types[`/syscall/Timeval`] = new(syscall.Timeval)
	Types[`/testing/B`] = new(testing.B)
	Types[`/testing/BenchmarkResult`] = new(testing.BenchmarkResult)
	Types[`/testing/InternalBenchmark`] = new(testing.InternalBenchmark)
	Types[`/testing/InternalExample`] = new(testing.InternalExample)
	Types[`/testing/InternalTest`] = new(testing.InternalTest)
	Types[`/testing/T`] = new(testing.T)
	Types[`/testing/quick/CheckEqualError`] = new(testing_quick.CheckEqualError)
	Types[`/testing/quick/CheckError`] = new(testing_quick.CheckError)
	Types[`/testing/quick/Config`] = new(testing_quick.Config)
	Types[`/text/scanner/Position`] = new(text_scanner.Position)
	Types[`/text/scanner/Scanner`] = new(text_scanner.Scanner)
	Types[`/text/tabwriter/Writer`] = new(text_tabwriter.Writer)
	Types[`/text/template/Template`] = new(text_template.Template)
	Types[`/text/template/parse/ActionNode`] = new(text_template_parse.ActionNode)
	Types[`/text/template/parse/BoolNode`] = new(text_template_parse.BoolNode)
	Types[`/text/template/parse/BranchNode`] = new(text_template_parse.BranchNode)
	Types[`/text/template/parse/CommandNode`] = new(text_template_parse.CommandNode)
	Types[`/text/template/parse/FieldNode`] = new(text_template_parse.FieldNode)
	Types[`/text/template/parse/IdentifierNode`] = new(text_template_parse.IdentifierNode)
	Types[`/text/template/parse/IfNode`] = new(text_template_parse.IfNode)
	Types[`/text/template/parse/ListNode`] = new(text_template_parse.ListNode)
	Types[`/text/template/parse/NumberNode`] = new(text_template_parse.NumberNode)
	Types[`/text/template/parse/PipeNode`] = new(text_template_parse.PipeNode)
	Types[`/text/template/parse/RangeNode`] = new(text_template_parse.RangeNode)
	Types[`/text/template/parse/StringNode`] = new(text_template_parse.StringNode)
	Types[`/text/template/parse/TemplateNode`] = new(text_template_parse.TemplateNode)
	Types[`/text/template/parse/TextNode`] = new(text_template_parse.TextNode)
	Types[`/text/template/parse/Tree`] = new(text_template_parse.Tree)
	Types[`/text/template/parse/VariableNode`] = new(text_template_parse.VariableNode)
	Types[`/text/template/parse/WithNode`] = new(text_template_parse.WithNode)
	Types[`/time/Location`] = new(time.Location)
	Types[`/time/ParseError`] = new(time.ParseError)
	Types[`/time/Ticker`] = new(time.Ticker)
	Types[`/time/Time`] = new(time.Time)
	Types[`/time/Timer`] = new(time.Timer)
	Types[`/unicode/CaseRange`] = new(unicode.CaseRange)
	Types[`/unicode/Range16`] = new(unicode.Range16)
	Types[`/unicode/Range32`] = new(unicode.Range32)
	Types[`/unicode/RangeTable`] = new(unicode.RangeTable)
	Consts[`/archive/tar/TypeBlock`] = archive_tar.TypeBlock
	Consts[`/archive/tar/TypeChar`] = archive_tar.TypeChar
	Consts[`/archive/tar/TypeCont`] = archive_tar.TypeCont
	Consts[`/archive/tar/TypeDir`] = archive_tar.TypeDir
	Consts[`/archive/tar/TypeFifo`] = archive_tar.TypeFifo
	Consts[`/archive/tar/TypeLink`] = archive_tar.TypeLink
	Consts[`/archive/tar/TypeReg`] = archive_tar.TypeReg
	Consts[`/archive/tar/TypeRegA`] = archive_tar.TypeRegA
	Consts[`/archive/tar/TypeSymlink`] = archive_tar.TypeSymlink
	Consts[`/archive/tar/TypeXGlobalHeader`] = archive_tar.TypeXGlobalHeader
	Consts[`/archive/tar/TypeXHeader`] = archive_tar.TypeXHeader
	Consts[`/archive/zip/Deflate`] = archive_zip.Deflate
	Consts[`/archive/zip/Store`] = archive_zip.Store
	Consts[`/bytes/MinRead`] = bytes.MinRead
	Consts[`/compress/flate/BestCompression`] = compress_flate.BestCompression
	Consts[`/compress/flate/BestSpeed`] = compress_flate.BestSpeed
	Consts[`/compress/flate/DefaultCompression`] = compress_flate.DefaultCompression
	Consts[`/compress/flate/NoCompression`] = compress_flate.NoCompression
	Consts[`/compress/gzip/BestCompression`] = compress_gzip.BestCompression
	Consts[`/compress/gzip/BestSpeed`] = compress_gzip.BestSpeed
	Consts[`/compress/gzip/DefaultCompression`] = compress_gzip.DefaultCompression
	Consts[`/compress/gzip/NoCompression`] = compress_gzip.NoCompression
	Consts[`/compress/lzw/LSB`] = compress_lzw.LSB
	Consts[`/compress/lzw/MSB`] = compress_lzw.MSB
	Consts[`/compress/zlib/BestCompression`] = compress_zlib.BestCompression
	Consts[`/compress/zlib/BestSpeed`] = compress_zlib.BestSpeed
	Consts[`/compress/zlib/DefaultCompression`] = compress_zlib.DefaultCompression
	Consts[`/compress/zlib/NoCompression`] = compress_zlib.NoCompression
	Consts[`/crypto/MD4`] = crypto.MD4
	Consts[`/crypto/MD5`] = crypto.MD5
	Consts[`/crypto/MD5SHA1`] = crypto.MD5SHA1
	Consts[`/crypto/RIPEMD160`] = crypto.RIPEMD160
	Consts[`/crypto/SHA1`] = crypto.SHA1
	Consts[`/crypto/SHA224`] = crypto.SHA224
	Consts[`/crypto/SHA256`] = crypto.SHA256
	Consts[`/crypto/SHA384`] = crypto.SHA384
	Consts[`/crypto/SHA512`] = crypto.SHA512
	Consts[`/crypto/aes/BlockSize`] = crypto_aes.BlockSize
	Consts[`/crypto/des/BlockSize`] = crypto_des.BlockSize
	Consts[`/crypto/dsa/L1024N160`] = crypto_dsa.L1024N160
	Consts[`/crypto/dsa/L2048N224`] = crypto_dsa.L2048N224
	Consts[`/crypto/dsa/L2048N256`] = crypto_dsa.L2048N256
	Consts[`/crypto/dsa/L3072N256`] = crypto_dsa.L3072N256
	Consts[`/crypto/md5/BlockSize`] = crypto_md5.BlockSize
	Consts[`/crypto/md5/Size`] = crypto_md5.Size
	Consts[`/crypto/sha1/BlockSize`] = crypto_sha1.BlockSize
	Consts[`/crypto/sha1/Size`] = crypto_sha1.Size
	Consts[`/crypto/sha256/BlockSize`] = crypto_sha256.BlockSize
	Consts[`/crypto/sha256/Size`] = crypto_sha256.Size
	Consts[`/crypto/sha256/Size224`] = crypto_sha256.Size224
	Consts[`/crypto/sha512/BlockSize`] = crypto_sha512.BlockSize
	Consts[`/crypto/sha512/Size`] = crypto_sha512.Size
	Consts[`/crypto/sha512/Size384`] = crypto_sha512.Size384
	Consts[`/crypto/tls/NoClientCert`] = crypto_tls.NoClientCert
	Consts[`/crypto/tls/RequestClientCert`] = crypto_tls.RequestClientCert
	Consts[`/crypto/tls/RequireAndVerifyClientCert`] = crypto_tls.RequireAndVerifyClientCert
	Consts[`/crypto/tls/RequireAnyClientCert`] = crypto_tls.RequireAnyClientCert
	Consts[`/crypto/tls/TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA`] = crypto_tls.TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
	Consts[`/crypto/tls/TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`] = crypto_tls.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
	Consts[`/crypto/tls/TLS_ECDHE_RSA_WITH_RC4_128_SHA`] = crypto_tls.TLS_ECDHE_RSA_WITH_RC4_128_SHA
	Consts[`/crypto/tls/TLS_RSA_WITH_3DES_EDE_CBC_SHA`] = crypto_tls.TLS_RSA_WITH_3DES_EDE_CBC_SHA
	Consts[`/crypto/tls/TLS_RSA_WITH_AES_128_CBC_SHA`] = crypto_tls.TLS_RSA_WITH_AES_128_CBC_SHA
	Consts[`/crypto/tls/TLS_RSA_WITH_RC4_128_SHA`] = crypto_tls.TLS_RSA_WITH_RC4_128_SHA
	Consts[`/crypto/tls/VerifyClientCertIfGiven`] = crypto_tls.VerifyClientCertIfGiven
	Consts[`/crypto/x509/CANotAuthorizedForThisName`] = crypto_x509.CANotAuthorizedForThisName
	Consts[`/crypto/x509/DSA`] = crypto_x509.DSA
	Consts[`/crypto/x509/DSAWithSHA1`] = crypto_x509.DSAWithSHA1
	Consts[`/crypto/x509/DSAWithSHA256`] = crypto_x509.DSAWithSHA256
	Consts[`/crypto/x509/Expired`] = crypto_x509.Expired
	Consts[`/crypto/x509/ExtKeyUsageAny`] = crypto_x509.ExtKeyUsageAny
	Consts[`/crypto/x509/ExtKeyUsageClientAuth`] = crypto_x509.ExtKeyUsageClientAuth
	Consts[`/crypto/x509/ExtKeyUsageCodeSigning`] = crypto_x509.ExtKeyUsageCodeSigning
	Consts[`/crypto/x509/ExtKeyUsageEmailProtection`] = crypto_x509.ExtKeyUsageEmailProtection
	Consts[`/crypto/x509/ExtKeyUsageOCSPSigning`] = crypto_x509.ExtKeyUsageOCSPSigning
	Consts[`/crypto/x509/ExtKeyUsageServerAuth`] = crypto_x509.ExtKeyUsageServerAuth
	Consts[`/crypto/x509/ExtKeyUsageTimeStamping`] = crypto_x509.ExtKeyUsageTimeStamping
	Consts[`/crypto/x509/KeyUsageCRLSign`] = crypto_x509.KeyUsageCRLSign
	Consts[`/crypto/x509/KeyUsageCertSign`] = crypto_x509.KeyUsageCertSign
	Consts[`/crypto/x509/KeyUsageContentCommitment`] = crypto_x509.KeyUsageContentCommitment
	Consts[`/crypto/x509/KeyUsageDataEncipherment`] = crypto_x509.KeyUsageDataEncipherment
	Consts[`/crypto/x509/KeyUsageDecipherOnly`] = crypto_x509.KeyUsageDecipherOnly
	Consts[`/crypto/x509/KeyUsageDigitalSignature`] = crypto_x509.KeyUsageDigitalSignature
	Consts[`/crypto/x509/KeyUsageEncipherOnly`] = crypto_x509.KeyUsageEncipherOnly
	Consts[`/crypto/x509/KeyUsageKeyAgreement`] = crypto_x509.KeyUsageKeyAgreement
	Consts[`/crypto/x509/KeyUsageKeyEncipherment`] = crypto_x509.KeyUsageKeyEncipherment
	Consts[`/crypto/x509/MD2WithRSA`] = crypto_x509.MD2WithRSA
	Consts[`/crypto/x509/MD5WithRSA`] = crypto_x509.MD5WithRSA
	Consts[`/crypto/x509/NotAuthorizedToSign`] = crypto_x509.NotAuthorizedToSign
	Consts[`/crypto/x509/RSA`] = crypto_x509.RSA
	Consts[`/crypto/x509/SHA1WithRSA`] = crypto_x509.SHA1WithRSA
	Consts[`/crypto/x509/SHA256WithRSA`] = crypto_x509.SHA256WithRSA
	Consts[`/crypto/x509/SHA384WithRSA`] = crypto_x509.SHA384WithRSA
	Consts[`/crypto/x509/SHA512WithRSA`] = crypto_x509.SHA512WithRSA
	Consts[`/crypto/x509/TooManyIntermediates`] = crypto_x509.TooManyIntermediates
	Consts[`/crypto/x509/UnknownPublicKeyAlgorithm`] = crypto_x509.UnknownPublicKeyAlgorithm
	Consts[`/crypto/x509/UnknownSignatureAlgorithm`] = crypto_x509.UnknownSignatureAlgorithm
	Consts[`/debug/dwarf/AttrAbstractOrigin`] = debug_dwarf.AttrAbstractOrigin
	Consts[`/debug/dwarf/AttrAccessibility`] = debug_dwarf.AttrAccessibility
	Consts[`/debug/dwarf/AttrAddrClass`] = debug_dwarf.AttrAddrClass
	Consts[`/debug/dwarf/AttrAllocated`] = debug_dwarf.AttrAllocated
	Consts[`/debug/dwarf/AttrArtificial`] = debug_dwarf.AttrArtificial
	Consts[`/debug/dwarf/AttrAssociated`] = debug_dwarf.AttrAssociated
	Consts[`/debug/dwarf/AttrBaseTypes`] = debug_dwarf.AttrBaseTypes
	Consts[`/debug/dwarf/AttrBitOffset`] = debug_dwarf.AttrBitOffset
	Consts[`/debug/dwarf/AttrBitSize`] = debug_dwarf.AttrBitSize
	Consts[`/debug/dwarf/AttrByteSize`] = debug_dwarf.AttrByteSize
	Consts[`/debug/dwarf/AttrCallColumn`] = debug_dwarf.AttrCallColumn
	Consts[`/debug/dwarf/AttrCallFile`] = debug_dwarf.AttrCallFile
	Consts[`/debug/dwarf/AttrCallLine`] = debug_dwarf.AttrCallLine
	Consts[`/debug/dwarf/AttrCalling`] = debug_dwarf.AttrCalling
	Consts[`/debug/dwarf/AttrCommonRef`] = debug_dwarf.AttrCommonRef
	Consts[`/debug/dwarf/AttrCompDir`] = debug_dwarf.AttrCompDir
	Consts[`/debug/dwarf/AttrConstValue`] = debug_dwarf.AttrConstValue
	Consts[`/debug/dwarf/AttrContainingType`] = debug_dwarf.AttrContainingType
	Consts[`/debug/dwarf/AttrCount`] = debug_dwarf.AttrCount
	Consts[`/debug/dwarf/AttrDataLocation`] = debug_dwarf.AttrDataLocation
	Consts[`/debug/dwarf/AttrDataMemberLoc`] = debug_dwarf.AttrDataMemberLoc
	Consts[`/debug/dwarf/AttrDeclColumn`] = debug_dwarf.AttrDeclColumn
	Consts[`/debug/dwarf/AttrDeclFile`] = debug_dwarf.AttrDeclFile
	Consts[`/debug/dwarf/AttrDeclLine`] = debug_dwarf.AttrDeclLine
	Consts[`/debug/dwarf/AttrDeclaration`] = debug_dwarf.AttrDeclaration
	Consts[`/debug/dwarf/AttrDefaultValue`] = debug_dwarf.AttrDefaultValue
	Consts[`/debug/dwarf/AttrDescription`] = debug_dwarf.AttrDescription
	Consts[`/debug/dwarf/AttrDiscr`] = debug_dwarf.AttrDiscr
	Consts[`/debug/dwarf/AttrDiscrList`] = debug_dwarf.AttrDiscrList
	Consts[`/debug/dwarf/AttrDiscrValue`] = debug_dwarf.AttrDiscrValue
	Consts[`/debug/dwarf/AttrEncoding`] = debug_dwarf.AttrEncoding
	Consts[`/debug/dwarf/AttrEntrypc`] = debug_dwarf.AttrEntrypc
	Consts[`/debug/dwarf/AttrExtension`] = debug_dwarf.AttrExtension
	Consts[`/debug/dwarf/AttrExternal`] = debug_dwarf.AttrExternal
	Consts[`/debug/dwarf/AttrFrameBase`] = debug_dwarf.AttrFrameBase
	Consts[`/debug/dwarf/AttrFriend`] = debug_dwarf.AttrFriend
	Consts[`/debug/dwarf/AttrHighpc`] = debug_dwarf.AttrHighpc
	Consts[`/debug/dwarf/AttrIdentifierCase`] = debug_dwarf.AttrIdentifierCase
	Consts[`/debug/dwarf/AttrImport`] = debug_dwarf.AttrImport
	Consts[`/debug/dwarf/AttrInline`] = debug_dwarf.AttrInline
	Consts[`/debug/dwarf/AttrIsOptional`] = debug_dwarf.AttrIsOptional
	Consts[`/debug/dwarf/AttrLanguage`] = debug_dwarf.AttrLanguage
	Consts[`/debug/dwarf/AttrLocation`] = debug_dwarf.AttrLocation
	Consts[`/debug/dwarf/AttrLowerBound`] = debug_dwarf.AttrLowerBound
	Consts[`/debug/dwarf/AttrLowpc`] = debug_dwarf.AttrLowpc
	Consts[`/debug/dwarf/AttrMacroInfo`] = debug_dwarf.AttrMacroInfo
	Consts[`/debug/dwarf/AttrName`] = debug_dwarf.AttrName
	Consts[`/debug/dwarf/AttrNamelistItem`] = debug_dwarf.AttrNamelistItem
	Consts[`/debug/dwarf/AttrOrdering`] = debug_dwarf.AttrOrdering
	Consts[`/debug/dwarf/AttrPriority`] = debug_dwarf.AttrPriority
	Consts[`/debug/dwarf/AttrProducer`] = debug_dwarf.AttrProducer
	Consts[`/debug/dwarf/AttrPrototyped`] = debug_dwarf.AttrPrototyped
	Consts[`/debug/dwarf/AttrRanges`] = debug_dwarf.AttrRanges
	Consts[`/debug/dwarf/AttrReturnAddr`] = debug_dwarf.AttrReturnAddr
	Consts[`/debug/dwarf/AttrSegment`] = debug_dwarf.AttrSegment
	Consts[`/debug/dwarf/AttrSibling`] = debug_dwarf.AttrSibling
	Consts[`/debug/dwarf/AttrSpecification`] = debug_dwarf.AttrSpecification
	Consts[`/debug/dwarf/AttrStartScope`] = debug_dwarf.AttrStartScope
	Consts[`/debug/dwarf/AttrStaticLink`] = debug_dwarf.AttrStaticLink
	Consts[`/debug/dwarf/AttrStmtList`] = debug_dwarf.AttrStmtList
	Consts[`/debug/dwarf/AttrStride`] = debug_dwarf.AttrStride
	Consts[`/debug/dwarf/AttrStrideSize`] = debug_dwarf.AttrStrideSize
	Consts[`/debug/dwarf/AttrStringLength`] = debug_dwarf.AttrStringLength
	Consts[`/debug/dwarf/AttrTrampoline`] = debug_dwarf.AttrTrampoline
	Consts[`/debug/dwarf/AttrType`] = debug_dwarf.AttrType
	Consts[`/debug/dwarf/AttrUpperBound`] = debug_dwarf.AttrUpperBound
	Consts[`/debug/dwarf/AttrUseLocation`] = debug_dwarf.AttrUseLocation
	Consts[`/debug/dwarf/AttrUseUTF8`] = debug_dwarf.AttrUseUTF8
	Consts[`/debug/dwarf/AttrVarParam`] = debug_dwarf.AttrVarParam
	Consts[`/debug/dwarf/AttrVirtuality`] = debug_dwarf.AttrVirtuality
	Consts[`/debug/dwarf/AttrVisibility`] = debug_dwarf.AttrVisibility
	Consts[`/debug/dwarf/AttrVtableElemLoc`] = debug_dwarf.AttrVtableElemLoc
	Consts[`/debug/dwarf/TagAccessDeclaration`] = debug_dwarf.TagAccessDeclaration
	Consts[`/debug/dwarf/TagArrayType`] = debug_dwarf.TagArrayType
	Consts[`/debug/dwarf/TagBaseType`] = debug_dwarf.TagBaseType
	Consts[`/debug/dwarf/TagCatchDwarfBlock`] = debug_dwarf.TagCatchDwarfBlock
	Consts[`/debug/dwarf/TagClassType`] = debug_dwarf.TagClassType
	Consts[`/debug/dwarf/TagCommonDwarfBlock`] = debug_dwarf.TagCommonDwarfBlock
	Consts[`/debug/dwarf/TagCommonInclusion`] = debug_dwarf.TagCommonInclusion
	Consts[`/debug/dwarf/TagCompileUnit`] = debug_dwarf.TagCompileUnit
	Consts[`/debug/dwarf/TagConstType`] = debug_dwarf.TagConstType
	Consts[`/debug/dwarf/TagConstant`] = debug_dwarf.TagConstant
	Consts[`/debug/dwarf/TagDwarfProcedure`] = debug_dwarf.TagDwarfProcedure
	Consts[`/debug/dwarf/TagEntryPoint`] = debug_dwarf.TagEntryPoint
	Consts[`/debug/dwarf/TagEnumerationType`] = debug_dwarf.TagEnumerationType
	Consts[`/debug/dwarf/TagEnumerator`] = debug_dwarf.TagEnumerator
	Consts[`/debug/dwarf/TagFileType`] = debug_dwarf.TagFileType
	Consts[`/debug/dwarf/TagFormalParameter`] = debug_dwarf.TagFormalParameter
	Consts[`/debug/dwarf/TagFriend`] = debug_dwarf.TagFriend
	Consts[`/debug/dwarf/TagImportedDeclaration`] = debug_dwarf.TagImportedDeclaration
	Consts[`/debug/dwarf/TagImportedModule`] = debug_dwarf.TagImportedModule
	Consts[`/debug/dwarf/TagImportedUnit`] = debug_dwarf.TagImportedUnit
	Consts[`/debug/dwarf/TagInheritance`] = debug_dwarf.TagInheritance
	Consts[`/debug/dwarf/TagInlinedSubroutine`] = debug_dwarf.TagInlinedSubroutine
	Consts[`/debug/dwarf/TagInterfaceType`] = debug_dwarf.TagInterfaceType
	Consts[`/debug/dwarf/TagLabel`] = debug_dwarf.TagLabel
	Consts[`/debug/dwarf/TagLexDwarfBlock`] = debug_dwarf.TagLexDwarfBlock
	Consts[`/debug/dwarf/TagMember`] = debug_dwarf.TagMember
	Consts[`/debug/dwarf/TagModule`] = debug_dwarf.TagModule
	Consts[`/debug/dwarf/TagMutableType`] = debug_dwarf.TagMutableType
	Consts[`/debug/dwarf/TagNamelist`] = debug_dwarf.TagNamelist
	Consts[`/debug/dwarf/TagNamelistItem`] = debug_dwarf.TagNamelistItem
	Consts[`/debug/dwarf/TagNamespace`] = debug_dwarf.TagNamespace
	Consts[`/debug/dwarf/TagPackedType`] = debug_dwarf.TagPackedType
	Consts[`/debug/dwarf/TagPartialUnit`] = debug_dwarf.TagPartialUnit
	Consts[`/debug/dwarf/TagPointerType`] = debug_dwarf.TagPointerType
	Consts[`/debug/dwarf/TagPtrToMemberType`] = debug_dwarf.TagPtrToMemberType
	Consts[`/debug/dwarf/TagReferenceType`] = debug_dwarf.TagReferenceType
	Consts[`/debug/dwarf/TagRestrictType`] = debug_dwarf.TagRestrictType
	Consts[`/debug/dwarf/TagSetType`] = debug_dwarf.TagSetType
	Consts[`/debug/dwarf/TagStringType`] = debug_dwarf.TagStringType
	Consts[`/debug/dwarf/TagStructType`] = debug_dwarf.TagStructType
	Consts[`/debug/dwarf/TagSubprogram`] = debug_dwarf.TagSubprogram
	Consts[`/debug/dwarf/TagSubrangeType`] = debug_dwarf.TagSubrangeType
	Consts[`/debug/dwarf/TagSubroutineType`] = debug_dwarf.TagSubroutineType
	Consts[`/debug/dwarf/TagTemplateTypeParameter`] = debug_dwarf.TagTemplateTypeParameter
	Consts[`/debug/dwarf/TagTemplateValueParameter`] = debug_dwarf.TagTemplateValueParameter
	Consts[`/debug/dwarf/TagThrownType`] = debug_dwarf.TagThrownType
	Consts[`/debug/dwarf/TagTryDwarfBlock`] = debug_dwarf.TagTryDwarfBlock
	Consts[`/debug/dwarf/TagTypedef`] = debug_dwarf.TagTypedef
	Consts[`/debug/dwarf/TagUnionType`] = debug_dwarf.TagUnionType
	Consts[`/debug/dwarf/TagUnspecifiedParameters`] = debug_dwarf.TagUnspecifiedParameters
	Consts[`/debug/dwarf/TagUnspecifiedType`] = debug_dwarf.TagUnspecifiedType
	Consts[`/debug/dwarf/TagVariable`] = debug_dwarf.TagVariable
	Consts[`/debug/dwarf/TagVariant`] = debug_dwarf.TagVariant
	Consts[`/debug/dwarf/TagVariantPart`] = debug_dwarf.TagVariantPart
	Consts[`/debug/dwarf/TagVolatileType`] = debug_dwarf.TagVolatileType
	Consts[`/debug/dwarf/TagWithStmt`] = debug_dwarf.TagWithStmt
	Consts[`/debug/elf/ARM_MAGIC_TRAMP_NUMBER`] = debug_elf.ARM_MAGIC_TRAMP_NUMBER
	Consts[`/debug/elf/DF_BIND_NOW`] = debug_elf.DF_BIND_NOW
	Consts[`/debug/elf/DF_ORIGIN`] = debug_elf.DF_ORIGIN
	Consts[`/debug/elf/DF_STATIC_TLS`] = debug_elf.DF_STATIC_TLS
	Consts[`/debug/elf/DF_SYMBOLIC`] = debug_elf.DF_SYMBOLIC
	Consts[`/debug/elf/DF_TEXTREL`] = debug_elf.DF_TEXTREL
	Consts[`/debug/elf/DT_BIND_NOW`] = debug_elf.DT_BIND_NOW
	Consts[`/debug/elf/DT_DEBUG`] = debug_elf.DT_DEBUG
	Consts[`/debug/elf/DT_ENCODING`] = debug_elf.DT_ENCODING
	Consts[`/debug/elf/DT_FINI`] = debug_elf.DT_FINI
	Consts[`/debug/elf/DT_FINI_ARRAY`] = debug_elf.DT_FINI_ARRAY
	Consts[`/debug/elf/DT_FINI_ARRAYSZ`] = debug_elf.DT_FINI_ARRAYSZ
	Consts[`/debug/elf/DT_FLAGS`] = debug_elf.DT_FLAGS
	Consts[`/debug/elf/DT_HASH`] = debug_elf.DT_HASH
	Consts[`/debug/elf/DT_HIOS`] = debug_elf.DT_HIOS
	Consts[`/debug/elf/DT_HIPROC`] = debug_elf.DT_HIPROC
	Consts[`/debug/elf/DT_INIT`] = debug_elf.DT_INIT
	Consts[`/debug/elf/DT_INIT_ARRAY`] = debug_elf.DT_INIT_ARRAY
	Consts[`/debug/elf/DT_INIT_ARRAYSZ`] = debug_elf.DT_INIT_ARRAYSZ
	Consts[`/debug/elf/DT_JMPREL`] = debug_elf.DT_JMPREL
	Consts[`/debug/elf/DT_LOOS`] = debug_elf.DT_LOOS
	Consts[`/debug/elf/DT_LOPROC`] = debug_elf.DT_LOPROC
	Consts[`/debug/elf/DT_NEEDED`] = debug_elf.DT_NEEDED
	Consts[`/debug/elf/DT_NULL`] = debug_elf.DT_NULL
	Consts[`/debug/elf/DT_PLTGOT`] = debug_elf.DT_PLTGOT
	Consts[`/debug/elf/DT_PLTREL`] = debug_elf.DT_PLTREL
	Consts[`/debug/elf/DT_PLTRELSZ`] = debug_elf.DT_PLTRELSZ
	Consts[`/debug/elf/DT_PREINIT_ARRAY`] = debug_elf.DT_PREINIT_ARRAY
	Consts[`/debug/elf/DT_PREINIT_ARRAYSZ`] = debug_elf.DT_PREINIT_ARRAYSZ
	Consts[`/debug/elf/DT_REL`] = debug_elf.DT_REL
	Consts[`/debug/elf/DT_RELA`] = debug_elf.DT_RELA
	Consts[`/debug/elf/DT_RELAENT`] = debug_elf.DT_RELAENT
	Consts[`/debug/elf/DT_RELASZ`] = debug_elf.DT_RELASZ
	Consts[`/debug/elf/DT_RELENT`] = debug_elf.DT_RELENT
	Consts[`/debug/elf/DT_RELSZ`] = debug_elf.DT_RELSZ
	Consts[`/debug/elf/DT_RPATH`] = debug_elf.DT_RPATH
	Consts[`/debug/elf/DT_RUNPATH`] = debug_elf.DT_RUNPATH
	Consts[`/debug/elf/DT_SONAME`] = debug_elf.DT_SONAME
	Consts[`/debug/elf/DT_STRSZ`] = debug_elf.DT_STRSZ
	Consts[`/debug/elf/DT_STRTAB`] = debug_elf.DT_STRTAB
	Consts[`/debug/elf/DT_SYMBOLIC`] = debug_elf.DT_SYMBOLIC
	Consts[`/debug/elf/DT_SYMENT`] = debug_elf.DT_SYMENT
	Consts[`/debug/elf/DT_SYMTAB`] = debug_elf.DT_SYMTAB
	Consts[`/debug/elf/DT_TEXTREL`] = debug_elf.DT_TEXTREL
	Consts[`/debug/elf/DT_VERNEED`] = debug_elf.DT_VERNEED
	Consts[`/debug/elf/DT_VERNEEDNUM`] = debug_elf.DT_VERNEEDNUM
	Consts[`/debug/elf/DT_VERSYM`] = debug_elf.DT_VERSYM
	Consts[`/debug/elf/EI_ABIVERSION`] = debug_elf.EI_ABIVERSION
	Consts[`/debug/elf/EI_CLASS`] = debug_elf.EI_CLASS
	Consts[`/debug/elf/EI_DATA`] = debug_elf.EI_DATA
	Consts[`/debug/elf/EI_NIDENT`] = debug_elf.EI_NIDENT
	Consts[`/debug/elf/EI_OSABI`] = debug_elf.EI_OSABI
	Consts[`/debug/elf/EI_PAD`] = debug_elf.EI_PAD
	Consts[`/debug/elf/EI_VERSION`] = debug_elf.EI_VERSION
	Consts[`/debug/elf/ELFCLASS32`] = debug_elf.ELFCLASS32
	Consts[`/debug/elf/ELFCLASS64`] = debug_elf.ELFCLASS64
	Consts[`/debug/elf/ELFCLASSNONE`] = debug_elf.ELFCLASSNONE
	Consts[`/debug/elf/ELFDATA2LSB`] = debug_elf.ELFDATA2LSB
	Consts[`/debug/elf/ELFDATA2MSB`] = debug_elf.ELFDATA2MSB
	Consts[`/debug/elf/ELFDATANONE`] = debug_elf.ELFDATANONE
	Consts[`/debug/elf/ELFMAG`] = debug_elf.ELFMAG
	Consts[`/debug/elf/ELFOSABI_86OPEN`] = debug_elf.ELFOSABI_86OPEN
	Consts[`/debug/elf/ELFOSABI_AIX`] = debug_elf.ELFOSABI_AIX
	Consts[`/debug/elf/ELFOSABI_ARM`] = debug_elf.ELFOSABI_ARM
	Consts[`/debug/elf/ELFOSABI_FREEBSD`] = debug_elf.ELFOSABI_FREEBSD
	Consts[`/debug/elf/ELFOSABI_HPUX`] = debug_elf.ELFOSABI_HPUX
	Consts[`/debug/elf/ELFOSABI_HURD`] = debug_elf.ELFOSABI_HURD
	Consts[`/debug/elf/ELFOSABI_IRIX`] = debug_elf.ELFOSABI_IRIX
	Consts[`/debug/elf/ELFOSABI_LINUX`] = debug_elf.ELFOSABI_LINUX
	Consts[`/debug/elf/ELFOSABI_MODESTO`] = debug_elf.ELFOSABI_MODESTO
	Consts[`/debug/elf/ELFOSABI_NETBSD`] = debug_elf.ELFOSABI_NETBSD
	Consts[`/debug/elf/ELFOSABI_NONE`] = debug_elf.ELFOSABI_NONE
	Consts[`/debug/elf/ELFOSABI_NSK`] = debug_elf.ELFOSABI_NSK
	Consts[`/debug/elf/ELFOSABI_OPENBSD`] = debug_elf.ELFOSABI_OPENBSD
	Consts[`/debug/elf/ELFOSABI_OPENVMS`] = debug_elf.ELFOSABI_OPENVMS
	Consts[`/debug/elf/ELFOSABI_SOLARIS`] = debug_elf.ELFOSABI_SOLARIS
	Consts[`/debug/elf/ELFOSABI_STANDALONE`] = debug_elf.ELFOSABI_STANDALONE
	Consts[`/debug/elf/ELFOSABI_TRU64`] = debug_elf.ELFOSABI_TRU64
	Consts[`/debug/elf/EM_386`] = debug_elf.EM_386
	Consts[`/debug/elf/EM_486`] = debug_elf.EM_486
	Consts[`/debug/elf/EM_68HC12`] = debug_elf.EM_68HC12
	Consts[`/debug/elf/EM_68K`] = debug_elf.EM_68K
	Consts[`/debug/elf/EM_860`] = debug_elf.EM_860
	Consts[`/debug/elf/EM_88K`] = debug_elf.EM_88K
	Consts[`/debug/elf/EM_960`] = debug_elf.EM_960
	Consts[`/debug/elf/EM_ALPHA`] = debug_elf.EM_ALPHA
	Consts[`/debug/elf/EM_ALPHA_STD`] = debug_elf.EM_ALPHA_STD
	Consts[`/debug/elf/EM_ARC`] = debug_elf.EM_ARC
	Consts[`/debug/elf/EM_ARM`] = debug_elf.EM_ARM
	Consts[`/debug/elf/EM_COLDFIRE`] = debug_elf.EM_COLDFIRE
	Consts[`/debug/elf/EM_FR20`] = debug_elf.EM_FR20
	Consts[`/debug/elf/EM_H8S`] = debug_elf.EM_H8S
	Consts[`/debug/elf/EM_H8_300`] = debug_elf.EM_H8_300
	Consts[`/debug/elf/EM_H8_300H`] = debug_elf.EM_H8_300H
	Consts[`/debug/elf/EM_H8_500`] = debug_elf.EM_H8_500
	Consts[`/debug/elf/EM_IA_64`] = debug_elf.EM_IA_64
	Consts[`/debug/elf/EM_M32`] = debug_elf.EM_M32
	Consts[`/debug/elf/EM_ME16`] = debug_elf.EM_ME16
	Consts[`/debug/elf/EM_MIPS`] = debug_elf.EM_MIPS
	Consts[`/debug/elf/EM_MIPS_RS3_LE`] = debug_elf.EM_MIPS_RS3_LE
	Consts[`/debug/elf/EM_MIPS_RS4_BE`] = debug_elf.EM_MIPS_RS4_BE
	Consts[`/debug/elf/EM_MIPS_X`] = debug_elf.EM_MIPS_X
	Consts[`/debug/elf/EM_MMA`] = debug_elf.EM_MMA
	Consts[`/debug/elf/EM_NCPU`] = debug_elf.EM_NCPU
	Consts[`/debug/elf/EM_NDR1`] = debug_elf.EM_NDR1
	Consts[`/debug/elf/EM_NONE`] = debug_elf.EM_NONE
	Consts[`/debug/elf/EM_PARISC`] = debug_elf.EM_PARISC
	Consts[`/debug/elf/EM_PCP`] = debug_elf.EM_PCP
	Consts[`/debug/elf/EM_PPC`] = debug_elf.EM_PPC
	Consts[`/debug/elf/EM_PPC64`] = debug_elf.EM_PPC64
	Consts[`/debug/elf/EM_RCE`] = debug_elf.EM_RCE
	Consts[`/debug/elf/EM_RH32`] = debug_elf.EM_RH32
	Consts[`/debug/elf/EM_S370`] = debug_elf.EM_S370
	Consts[`/debug/elf/EM_S390`] = debug_elf.EM_S390
	Consts[`/debug/elf/EM_SH`] = debug_elf.EM_SH
	Consts[`/debug/elf/EM_SPARC`] = debug_elf.EM_SPARC
	Consts[`/debug/elf/EM_SPARC32PLUS`] = debug_elf.EM_SPARC32PLUS
	Consts[`/debug/elf/EM_SPARCV9`] = debug_elf.EM_SPARCV9
	Consts[`/debug/elf/EM_ST100`] = debug_elf.EM_ST100
	Consts[`/debug/elf/EM_STARCORE`] = debug_elf.EM_STARCORE
	Consts[`/debug/elf/EM_TINYJ`] = debug_elf.EM_TINYJ
	Consts[`/debug/elf/EM_TRICORE`] = debug_elf.EM_TRICORE
	Consts[`/debug/elf/EM_V800`] = debug_elf.EM_V800
	Consts[`/debug/elf/EM_VPP500`] = debug_elf.EM_VPP500
	Consts[`/debug/elf/EM_X86_64`] = debug_elf.EM_X86_64
	Consts[`/debug/elf/ET_CORE`] = debug_elf.ET_CORE
	Consts[`/debug/elf/ET_DYN`] = debug_elf.ET_DYN
	Consts[`/debug/elf/ET_EXEC`] = debug_elf.ET_EXEC
	Consts[`/debug/elf/ET_HIOS`] = debug_elf.ET_HIOS
	Consts[`/debug/elf/ET_HIPROC`] = debug_elf.ET_HIPROC
	Consts[`/debug/elf/ET_LOOS`] = debug_elf.ET_LOOS
	Consts[`/debug/elf/ET_LOPROC`] = debug_elf.ET_LOPROC
	Consts[`/debug/elf/ET_NONE`] = debug_elf.ET_NONE
	Consts[`/debug/elf/ET_REL`] = debug_elf.ET_REL
	Consts[`/debug/elf/EV_CURRENT`] = debug_elf.EV_CURRENT
	Consts[`/debug/elf/EV_NONE`] = debug_elf.EV_NONE
	Consts[`/debug/elf/NT_FPREGSET`] = debug_elf.NT_FPREGSET
	Consts[`/debug/elf/NT_PRPSINFO`] = debug_elf.NT_PRPSINFO
	Consts[`/debug/elf/NT_PRSTATUS`] = debug_elf.NT_PRSTATUS
	Consts[`/debug/elf/PF_MASKOS`] = debug_elf.PF_MASKOS
	Consts[`/debug/elf/PF_MASKPROC`] = debug_elf.PF_MASKPROC
	Consts[`/debug/elf/PF_R`] = debug_elf.PF_R
	Consts[`/debug/elf/PF_W`] = debug_elf.PF_W
	Consts[`/debug/elf/PF_X`] = debug_elf.PF_X
	Consts[`/debug/elf/PT_DYNAMIC`] = debug_elf.PT_DYNAMIC
	Consts[`/debug/elf/PT_HIOS`] = debug_elf.PT_HIOS
	Consts[`/debug/elf/PT_HIPROC`] = debug_elf.PT_HIPROC
	Consts[`/debug/elf/PT_INTERP`] = debug_elf.PT_INTERP
	Consts[`/debug/elf/PT_LOAD`] = debug_elf.PT_LOAD
	Consts[`/debug/elf/PT_LOOS`] = debug_elf.PT_LOOS
	Consts[`/debug/elf/PT_LOPROC`] = debug_elf.PT_LOPROC
	Consts[`/debug/elf/PT_NOTE`] = debug_elf.PT_NOTE
	Consts[`/debug/elf/PT_NULL`] = debug_elf.PT_NULL
	Consts[`/debug/elf/PT_PHDR`] = debug_elf.PT_PHDR
	Consts[`/debug/elf/PT_SHLIB`] = debug_elf.PT_SHLIB
	Consts[`/debug/elf/PT_TLS`] = debug_elf.PT_TLS
	Consts[`/debug/elf/R_386_32`] = debug_elf.R_386_32
	Consts[`/debug/elf/R_386_COPY`] = debug_elf.R_386_COPY
	Consts[`/debug/elf/R_386_GLOB_DAT`] = debug_elf.R_386_GLOB_DAT
	Consts[`/debug/elf/R_386_GOT32`] = debug_elf.R_386_GOT32
	Consts[`/debug/elf/R_386_GOTOFF`] = debug_elf.R_386_GOTOFF
	Consts[`/debug/elf/R_386_GOTPC`] = debug_elf.R_386_GOTPC
	Consts[`/debug/elf/R_386_JMP_SLOT`] = debug_elf.R_386_JMP_SLOT
	Consts[`/debug/elf/R_386_NONE`] = debug_elf.R_386_NONE
	Consts[`/debug/elf/R_386_PC32`] = debug_elf.R_386_PC32
	Consts[`/debug/elf/R_386_PLT32`] = debug_elf.R_386_PLT32
	Consts[`/debug/elf/R_386_RELATIVE`] = debug_elf.R_386_RELATIVE
	Consts[`/debug/elf/R_386_TLS_DTPMOD32`] = debug_elf.R_386_TLS_DTPMOD32
	Consts[`/debug/elf/R_386_TLS_DTPOFF32`] = debug_elf.R_386_TLS_DTPOFF32
	Consts[`/debug/elf/R_386_TLS_GD`] = debug_elf.R_386_TLS_GD
	Consts[`/debug/elf/R_386_TLS_GD_32`] = debug_elf.R_386_TLS_GD_32
	Consts[`/debug/elf/R_386_TLS_GD_CALL`] = debug_elf.R_386_TLS_GD_CALL
	Consts[`/debug/elf/R_386_TLS_GD_POP`] = debug_elf.R_386_TLS_GD_POP
	Consts[`/debug/elf/R_386_TLS_GD_PUSH`] = debug_elf.R_386_TLS_GD_PUSH
	Consts[`/debug/elf/R_386_TLS_GOTIE`] = debug_elf.R_386_TLS_GOTIE
	Consts[`/debug/elf/R_386_TLS_IE`] = debug_elf.R_386_TLS_IE
	Consts[`/debug/elf/R_386_TLS_IE_32`] = debug_elf.R_386_TLS_IE_32
	Consts[`/debug/elf/R_386_TLS_LDM`] = debug_elf.R_386_TLS_LDM
	Consts[`/debug/elf/R_386_TLS_LDM_32`] = debug_elf.R_386_TLS_LDM_32
	Consts[`/debug/elf/R_386_TLS_LDM_CALL`] = debug_elf.R_386_TLS_LDM_CALL
	Consts[`/debug/elf/R_386_TLS_LDM_POP`] = debug_elf.R_386_TLS_LDM_POP
	Consts[`/debug/elf/R_386_TLS_LDM_PUSH`] = debug_elf.R_386_TLS_LDM_PUSH
	Consts[`/debug/elf/R_386_TLS_LDO_32`] = debug_elf.R_386_TLS_LDO_32
	Consts[`/debug/elf/R_386_TLS_LE`] = debug_elf.R_386_TLS_LE
	Consts[`/debug/elf/R_386_TLS_LE_32`] = debug_elf.R_386_TLS_LE_32
	Consts[`/debug/elf/R_386_TLS_TPOFF`] = debug_elf.R_386_TLS_TPOFF
	Consts[`/debug/elf/R_386_TLS_TPOFF32`] = debug_elf.R_386_TLS_TPOFF32
	Consts[`/debug/elf/R_ALPHA_BRADDR`] = debug_elf.R_ALPHA_BRADDR
	Consts[`/debug/elf/R_ALPHA_COPY`] = debug_elf.R_ALPHA_COPY
	Consts[`/debug/elf/R_ALPHA_GLOB_DAT`] = debug_elf.R_ALPHA_GLOB_DAT
	Consts[`/debug/elf/R_ALPHA_GPDISP`] = debug_elf.R_ALPHA_GPDISP
	Consts[`/debug/elf/R_ALPHA_GPREL32`] = debug_elf.R_ALPHA_GPREL32
	Consts[`/debug/elf/R_ALPHA_GPRELHIGH`] = debug_elf.R_ALPHA_GPRELHIGH
	Consts[`/debug/elf/R_ALPHA_GPRELLOW`] = debug_elf.R_ALPHA_GPRELLOW
	Consts[`/debug/elf/R_ALPHA_GPVALUE`] = debug_elf.R_ALPHA_GPVALUE
	Consts[`/debug/elf/R_ALPHA_HINT`] = debug_elf.R_ALPHA_HINT
	Consts[`/debug/elf/R_ALPHA_IMMED_BR_HI32`] = debug_elf.R_ALPHA_IMMED_BR_HI32
	Consts[`/debug/elf/R_ALPHA_IMMED_GP_16`] = debug_elf.R_ALPHA_IMMED_GP_16
	Consts[`/debug/elf/R_ALPHA_IMMED_GP_HI32`] = debug_elf.R_ALPHA_IMMED_GP_HI32
	Consts[`/debug/elf/R_ALPHA_IMMED_LO32`] = debug_elf.R_ALPHA_IMMED_LO32
	Consts[`/debug/elf/R_ALPHA_IMMED_SCN_HI32`] = debug_elf.R_ALPHA_IMMED_SCN_HI32
	Consts[`/debug/elf/R_ALPHA_JMP_SLOT`] = debug_elf.R_ALPHA_JMP_SLOT
	Consts[`/debug/elf/R_ALPHA_LITERAL`] = debug_elf.R_ALPHA_LITERAL
	Consts[`/debug/elf/R_ALPHA_LITUSE`] = debug_elf.R_ALPHA_LITUSE
	Consts[`/debug/elf/R_ALPHA_NONE`] = debug_elf.R_ALPHA_NONE
	Consts[`/debug/elf/R_ALPHA_OP_PRSHIFT`] = debug_elf.R_ALPHA_OP_PRSHIFT
	Consts[`/debug/elf/R_ALPHA_OP_PSUB`] = debug_elf.R_ALPHA_OP_PSUB
	Consts[`/debug/elf/R_ALPHA_OP_PUSH`] = debug_elf.R_ALPHA_OP_PUSH
	Consts[`/debug/elf/R_ALPHA_OP_STORE`] = debug_elf.R_ALPHA_OP_STORE
	Consts[`/debug/elf/R_ALPHA_REFLONG`] = debug_elf.R_ALPHA_REFLONG
	Consts[`/debug/elf/R_ALPHA_REFQUAD`] = debug_elf.R_ALPHA_REFQUAD
	Consts[`/debug/elf/R_ALPHA_RELATIVE`] = debug_elf.R_ALPHA_RELATIVE
	Consts[`/debug/elf/R_ALPHA_SREL16`] = debug_elf.R_ALPHA_SREL16
	Consts[`/debug/elf/R_ALPHA_SREL32`] = debug_elf.R_ALPHA_SREL32
	Consts[`/debug/elf/R_ALPHA_SREL64`] = debug_elf.R_ALPHA_SREL64
	Consts[`/debug/elf/R_ARM_ABS12`] = debug_elf.R_ARM_ABS12
	Consts[`/debug/elf/R_ARM_ABS16`] = debug_elf.R_ARM_ABS16
	Consts[`/debug/elf/R_ARM_ABS32`] = debug_elf.R_ARM_ABS32
	Consts[`/debug/elf/R_ARM_ABS8`] = debug_elf.R_ARM_ABS8
	Consts[`/debug/elf/R_ARM_AMP_VCALL9`] = debug_elf.R_ARM_AMP_VCALL9
	Consts[`/debug/elf/R_ARM_COPY`] = debug_elf.R_ARM_COPY
	Consts[`/debug/elf/R_ARM_GLOB_DAT`] = debug_elf.R_ARM_GLOB_DAT
	Consts[`/debug/elf/R_ARM_GNU_VTENTRY`] = debug_elf.R_ARM_GNU_VTENTRY
	Consts[`/debug/elf/R_ARM_GNU_VTINHERIT`] = debug_elf.R_ARM_GNU_VTINHERIT
	Consts[`/debug/elf/R_ARM_GOT32`] = debug_elf.R_ARM_GOT32
	Consts[`/debug/elf/R_ARM_GOTOFF`] = debug_elf.R_ARM_GOTOFF
	Consts[`/debug/elf/R_ARM_GOTPC`] = debug_elf.R_ARM_GOTPC
	Consts[`/debug/elf/R_ARM_JUMP_SLOT`] = debug_elf.R_ARM_JUMP_SLOT
	Consts[`/debug/elf/R_ARM_NONE`] = debug_elf.R_ARM_NONE
	Consts[`/debug/elf/R_ARM_PC13`] = debug_elf.R_ARM_PC13
	Consts[`/debug/elf/R_ARM_PC24`] = debug_elf.R_ARM_PC24
	Consts[`/debug/elf/R_ARM_PLT32`] = debug_elf.R_ARM_PLT32
	Consts[`/debug/elf/R_ARM_RABS32`] = debug_elf.R_ARM_RABS32
	Consts[`/debug/elf/R_ARM_RBASE`] = debug_elf.R_ARM_RBASE
	Consts[`/debug/elf/R_ARM_REL32`] = debug_elf.R_ARM_REL32
	Consts[`/debug/elf/R_ARM_RELATIVE`] = debug_elf.R_ARM_RELATIVE
	Consts[`/debug/elf/R_ARM_RPC24`] = debug_elf.R_ARM_RPC24
	Consts[`/debug/elf/R_ARM_RREL32`] = debug_elf.R_ARM_RREL32
	Consts[`/debug/elf/R_ARM_RSBREL32`] = debug_elf.R_ARM_RSBREL32
	Consts[`/debug/elf/R_ARM_SBREL32`] = debug_elf.R_ARM_SBREL32
	Consts[`/debug/elf/R_ARM_SWI24`] = debug_elf.R_ARM_SWI24
	Consts[`/debug/elf/R_ARM_THM_ABS5`] = debug_elf.R_ARM_THM_ABS5
	Consts[`/debug/elf/R_ARM_THM_PC22`] = debug_elf.R_ARM_THM_PC22
	Consts[`/debug/elf/R_ARM_THM_PC8`] = debug_elf.R_ARM_THM_PC8
	Consts[`/debug/elf/R_ARM_THM_RPC22`] = debug_elf.R_ARM_THM_RPC22
	Consts[`/debug/elf/R_ARM_THM_SWI8`] = debug_elf.R_ARM_THM_SWI8
	Consts[`/debug/elf/R_ARM_THM_XPC22`] = debug_elf.R_ARM_THM_XPC22
	Consts[`/debug/elf/R_ARM_XPC25`] = debug_elf.R_ARM_XPC25
	Consts[`/debug/elf/R_PPC_ADDR14`] = debug_elf.R_PPC_ADDR14
	Consts[`/debug/elf/R_PPC_ADDR14_BRNTAKEN`] = debug_elf.R_PPC_ADDR14_BRNTAKEN
	Consts[`/debug/elf/R_PPC_ADDR14_BRTAKEN`] = debug_elf.R_PPC_ADDR14_BRTAKEN
	Consts[`/debug/elf/R_PPC_ADDR16`] = debug_elf.R_PPC_ADDR16
	Consts[`/debug/elf/R_PPC_ADDR16_HA`] = debug_elf.R_PPC_ADDR16_HA
	Consts[`/debug/elf/R_PPC_ADDR16_HI`] = debug_elf.R_PPC_ADDR16_HI
	Consts[`/debug/elf/R_PPC_ADDR16_LO`] = debug_elf.R_PPC_ADDR16_LO
	Consts[`/debug/elf/R_PPC_ADDR24`] = debug_elf.R_PPC_ADDR24
	Consts[`/debug/elf/R_PPC_ADDR32`] = debug_elf.R_PPC_ADDR32
	Consts[`/debug/elf/R_PPC_COPY`] = debug_elf.R_PPC_COPY
	Consts[`/debug/elf/R_PPC_DTPMOD32`] = debug_elf.R_PPC_DTPMOD32
	Consts[`/debug/elf/R_PPC_DTPREL16`] = debug_elf.R_PPC_DTPREL16
	Consts[`/debug/elf/R_PPC_DTPREL16_HA`] = debug_elf.R_PPC_DTPREL16_HA
	Consts[`/debug/elf/R_PPC_DTPREL16_HI`] = debug_elf.R_PPC_DTPREL16_HI
	Consts[`/debug/elf/R_PPC_DTPREL16_LO`] = debug_elf.R_PPC_DTPREL16_LO
	Consts[`/debug/elf/R_PPC_DTPREL32`] = debug_elf.R_PPC_DTPREL32
	Consts[`/debug/elf/R_PPC_EMB_BIT_FLD`] = debug_elf.R_PPC_EMB_BIT_FLD
	Consts[`/debug/elf/R_PPC_EMB_MRKREF`] = debug_elf.R_PPC_EMB_MRKREF
	Consts[`/debug/elf/R_PPC_EMB_NADDR16`] = debug_elf.R_PPC_EMB_NADDR16
	Consts[`/debug/elf/R_PPC_EMB_NADDR16_HA`] = debug_elf.R_PPC_EMB_NADDR16_HA
	Consts[`/debug/elf/R_PPC_EMB_NADDR16_HI`] = debug_elf.R_PPC_EMB_NADDR16_HI
	Consts[`/debug/elf/R_PPC_EMB_NADDR16_LO`] = debug_elf.R_PPC_EMB_NADDR16_LO
	Consts[`/debug/elf/R_PPC_EMB_NADDR32`] = debug_elf.R_PPC_EMB_NADDR32
	Consts[`/debug/elf/R_PPC_EMB_RELSDA`] = debug_elf.R_PPC_EMB_RELSDA
	Consts[`/debug/elf/R_PPC_EMB_RELSEC16`] = debug_elf.R_PPC_EMB_RELSEC16
	Consts[`/debug/elf/R_PPC_EMB_RELST_HA`] = debug_elf.R_PPC_EMB_RELST_HA
	Consts[`/debug/elf/R_PPC_EMB_RELST_HI`] = debug_elf.R_PPC_EMB_RELST_HI
	Consts[`/debug/elf/R_PPC_EMB_RELST_LO`] = debug_elf.R_PPC_EMB_RELST_LO
	Consts[`/debug/elf/R_PPC_EMB_SDA21`] = debug_elf.R_PPC_EMB_SDA21
	Consts[`/debug/elf/R_PPC_EMB_SDA2I16`] = debug_elf.R_PPC_EMB_SDA2I16
	Consts[`/debug/elf/R_PPC_EMB_SDA2REL`] = debug_elf.R_PPC_EMB_SDA2REL
	Consts[`/debug/elf/R_PPC_EMB_SDAI16`] = debug_elf.R_PPC_EMB_SDAI16
	Consts[`/debug/elf/R_PPC_GLOB_DAT`] = debug_elf.R_PPC_GLOB_DAT
	Consts[`/debug/elf/R_PPC_GOT16`] = debug_elf.R_PPC_GOT16
	Consts[`/debug/elf/R_PPC_GOT16_HA`] = debug_elf.R_PPC_GOT16_HA
	Consts[`/debug/elf/R_PPC_GOT16_HI`] = debug_elf.R_PPC_GOT16_HI
	Consts[`/debug/elf/R_PPC_GOT16_LO`] = debug_elf.R_PPC_GOT16_LO
	Consts[`/debug/elf/R_PPC_GOT_TLSGD16`] = debug_elf.R_PPC_GOT_TLSGD16
	Consts[`/debug/elf/R_PPC_GOT_TLSGD16_HA`] = debug_elf.R_PPC_GOT_TLSGD16_HA
	Consts[`/debug/elf/R_PPC_GOT_TLSGD16_HI`] = debug_elf.R_PPC_GOT_TLSGD16_HI
	Consts[`/debug/elf/R_PPC_GOT_TLSGD16_LO`] = debug_elf.R_PPC_GOT_TLSGD16_LO
	Consts[`/debug/elf/R_PPC_GOT_TLSLD16`] = debug_elf.R_PPC_GOT_TLSLD16
	Consts[`/debug/elf/R_PPC_GOT_TLSLD16_HA`] = debug_elf.R_PPC_GOT_TLSLD16_HA
	Consts[`/debug/elf/R_PPC_GOT_TLSLD16_HI`] = debug_elf.R_PPC_GOT_TLSLD16_HI
	Consts[`/debug/elf/R_PPC_GOT_TLSLD16_LO`] = debug_elf.R_PPC_GOT_TLSLD16_LO
	Consts[`/debug/elf/R_PPC_GOT_TPREL16`] = debug_elf.R_PPC_GOT_TPREL16
	Consts[`/debug/elf/R_PPC_GOT_TPREL16_HA`] = debug_elf.R_PPC_GOT_TPREL16_HA
	Consts[`/debug/elf/R_PPC_GOT_TPREL16_HI`] = debug_elf.R_PPC_GOT_TPREL16_HI
	Consts[`/debug/elf/R_PPC_GOT_TPREL16_LO`] = debug_elf.R_PPC_GOT_TPREL16_LO
	Consts[`/debug/elf/R_PPC_JMP_SLOT`] = debug_elf.R_PPC_JMP_SLOT
	Consts[`/debug/elf/R_PPC_LOCAL24PC`] = debug_elf.R_PPC_LOCAL24PC
	Consts[`/debug/elf/R_PPC_NONE`] = debug_elf.R_PPC_NONE
	Consts[`/debug/elf/R_PPC_PLT16_HA`] = debug_elf.R_PPC_PLT16_HA
	Consts[`/debug/elf/R_PPC_PLT16_HI`] = debug_elf.R_PPC_PLT16_HI
	Consts[`/debug/elf/R_PPC_PLT16_LO`] = debug_elf.R_PPC_PLT16_LO
	Consts[`/debug/elf/R_PPC_PLT32`] = debug_elf.R_PPC_PLT32
	Consts[`/debug/elf/R_PPC_PLTREL24`] = debug_elf.R_PPC_PLTREL24
	Consts[`/debug/elf/R_PPC_PLTREL32`] = debug_elf.R_PPC_PLTREL32
	Consts[`/debug/elf/R_PPC_REL14`] = debug_elf.R_PPC_REL14
	Consts[`/debug/elf/R_PPC_REL14_BRNTAKEN`] = debug_elf.R_PPC_REL14_BRNTAKEN
	Consts[`/debug/elf/R_PPC_REL14_BRTAKEN`] = debug_elf.R_PPC_REL14_BRTAKEN
	Consts[`/debug/elf/R_PPC_REL24`] = debug_elf.R_PPC_REL24
	Consts[`/debug/elf/R_PPC_REL32`] = debug_elf.R_PPC_REL32
	Consts[`/debug/elf/R_PPC_RELATIVE`] = debug_elf.R_PPC_RELATIVE
	Consts[`/debug/elf/R_PPC_SDAREL16`] = debug_elf.R_PPC_SDAREL16
	Consts[`/debug/elf/R_PPC_SECTOFF`] = debug_elf.R_PPC_SECTOFF
	Consts[`/debug/elf/R_PPC_SECTOFF_HA`] = debug_elf.R_PPC_SECTOFF_HA
	Consts[`/debug/elf/R_PPC_SECTOFF_HI`] = debug_elf.R_PPC_SECTOFF_HI
	Consts[`/debug/elf/R_PPC_SECTOFF_LO`] = debug_elf.R_PPC_SECTOFF_LO
	Consts[`/debug/elf/R_PPC_TLS`] = debug_elf.R_PPC_TLS
	Consts[`/debug/elf/R_PPC_TPREL16`] = debug_elf.R_PPC_TPREL16
	Consts[`/debug/elf/R_PPC_TPREL16_HA`] = debug_elf.R_PPC_TPREL16_HA
	Consts[`/debug/elf/R_PPC_TPREL16_HI`] = debug_elf.R_PPC_TPREL16_HI
	Consts[`/debug/elf/R_PPC_TPREL16_LO`] = debug_elf.R_PPC_TPREL16_LO
	Consts[`/debug/elf/R_PPC_TPREL32`] = debug_elf.R_PPC_TPREL32
	Consts[`/debug/elf/R_PPC_UADDR16`] = debug_elf.R_PPC_UADDR16
	Consts[`/debug/elf/R_PPC_UADDR32`] = debug_elf.R_PPC_UADDR32
	Consts[`/debug/elf/R_SPARC_10`] = debug_elf.R_SPARC_10
	Consts[`/debug/elf/R_SPARC_11`] = debug_elf.R_SPARC_11
	Consts[`/debug/elf/R_SPARC_13`] = debug_elf.R_SPARC_13
	Consts[`/debug/elf/R_SPARC_16`] = debug_elf.R_SPARC_16
	Consts[`/debug/elf/R_SPARC_22`] = debug_elf.R_SPARC_22
	Consts[`/debug/elf/R_SPARC_32`] = debug_elf.R_SPARC_32
	Consts[`/debug/elf/R_SPARC_5`] = debug_elf.R_SPARC_5
	Consts[`/debug/elf/R_SPARC_6`] = debug_elf.R_SPARC_6
	Consts[`/debug/elf/R_SPARC_64`] = debug_elf.R_SPARC_64
	Consts[`/debug/elf/R_SPARC_7`] = debug_elf.R_SPARC_7
	Consts[`/debug/elf/R_SPARC_8`] = debug_elf.R_SPARC_8
	Consts[`/debug/elf/R_SPARC_COPY`] = debug_elf.R_SPARC_COPY
	Consts[`/debug/elf/R_SPARC_DISP16`] = debug_elf.R_SPARC_DISP16
	Consts[`/debug/elf/R_SPARC_DISP32`] = debug_elf.R_SPARC_DISP32
	Consts[`/debug/elf/R_SPARC_DISP64`] = debug_elf.R_SPARC_DISP64
	Consts[`/debug/elf/R_SPARC_DISP8`] = debug_elf.R_SPARC_DISP8
	Consts[`/debug/elf/R_SPARC_GLOB_DAT`] = debug_elf.R_SPARC_GLOB_DAT
	Consts[`/debug/elf/R_SPARC_GLOB_JMP`] = debug_elf.R_SPARC_GLOB_JMP
	Consts[`/debug/elf/R_SPARC_GOT10`] = debug_elf.R_SPARC_GOT10
	Consts[`/debug/elf/R_SPARC_GOT13`] = debug_elf.R_SPARC_GOT13
	Consts[`/debug/elf/R_SPARC_GOT22`] = debug_elf.R_SPARC_GOT22
	Consts[`/debug/elf/R_SPARC_H44`] = debug_elf.R_SPARC_H44
	Consts[`/debug/elf/R_SPARC_HH22`] = debug_elf.R_SPARC_HH22
	Consts[`/debug/elf/R_SPARC_HI22`] = debug_elf.R_SPARC_HI22
	Consts[`/debug/elf/R_SPARC_HIPLT22`] = debug_elf.R_SPARC_HIPLT22
	Consts[`/debug/elf/R_SPARC_HIX22`] = debug_elf.R_SPARC_HIX22
	Consts[`/debug/elf/R_SPARC_HM10`] = debug_elf.R_SPARC_HM10
	Consts[`/debug/elf/R_SPARC_JMP_SLOT`] = debug_elf.R_SPARC_JMP_SLOT
	Consts[`/debug/elf/R_SPARC_L44`] = debug_elf.R_SPARC_L44
	Consts[`/debug/elf/R_SPARC_LM22`] = debug_elf.R_SPARC_LM22
	Consts[`/debug/elf/R_SPARC_LO10`] = debug_elf.R_SPARC_LO10
	Consts[`/debug/elf/R_SPARC_LOPLT10`] = debug_elf.R_SPARC_LOPLT10
	Consts[`/debug/elf/R_SPARC_LOX10`] = debug_elf.R_SPARC_LOX10
	Consts[`/debug/elf/R_SPARC_M44`] = debug_elf.R_SPARC_M44
	Consts[`/debug/elf/R_SPARC_NONE`] = debug_elf.R_SPARC_NONE
	Consts[`/debug/elf/R_SPARC_OLO10`] = debug_elf.R_SPARC_OLO10
	Consts[`/debug/elf/R_SPARC_PC10`] = debug_elf.R_SPARC_PC10
	Consts[`/debug/elf/R_SPARC_PC22`] = debug_elf.R_SPARC_PC22
	Consts[`/debug/elf/R_SPARC_PCPLT10`] = debug_elf.R_SPARC_PCPLT10
	Consts[`/debug/elf/R_SPARC_PCPLT22`] = debug_elf.R_SPARC_PCPLT22
	Consts[`/debug/elf/R_SPARC_PCPLT32`] = debug_elf.R_SPARC_PCPLT32
	Consts[`/debug/elf/R_SPARC_PC_HH22`] = debug_elf.R_SPARC_PC_HH22
	Consts[`/debug/elf/R_SPARC_PC_HM10`] = debug_elf.R_SPARC_PC_HM10
	Consts[`/debug/elf/R_SPARC_PC_LM22`] = debug_elf.R_SPARC_PC_LM22
	Consts[`/debug/elf/R_SPARC_PLT32`] = debug_elf.R_SPARC_PLT32
	Consts[`/debug/elf/R_SPARC_PLT64`] = debug_elf.R_SPARC_PLT64
	Consts[`/debug/elf/R_SPARC_REGISTER`] = debug_elf.R_SPARC_REGISTER
	Consts[`/debug/elf/R_SPARC_RELATIVE`] = debug_elf.R_SPARC_RELATIVE
	Consts[`/debug/elf/R_SPARC_UA16`] = debug_elf.R_SPARC_UA16
	Consts[`/debug/elf/R_SPARC_UA32`] = debug_elf.R_SPARC_UA32
	Consts[`/debug/elf/R_SPARC_UA64`] = debug_elf.R_SPARC_UA64
	Consts[`/debug/elf/R_SPARC_WDISP16`] = debug_elf.R_SPARC_WDISP16
	Consts[`/debug/elf/R_SPARC_WDISP19`] = debug_elf.R_SPARC_WDISP19
	Consts[`/debug/elf/R_SPARC_WDISP22`] = debug_elf.R_SPARC_WDISP22
	Consts[`/debug/elf/R_SPARC_WDISP30`] = debug_elf.R_SPARC_WDISP30
	Consts[`/debug/elf/R_SPARC_WPLT30`] = debug_elf.R_SPARC_WPLT30
	Consts[`/debug/elf/R_X86_64_16`] = debug_elf.R_X86_64_16
	Consts[`/debug/elf/R_X86_64_32`] = debug_elf.R_X86_64_32
	Consts[`/debug/elf/R_X86_64_32S`] = debug_elf.R_X86_64_32S
	Consts[`/debug/elf/R_X86_64_64`] = debug_elf.R_X86_64_64
	Consts[`/debug/elf/R_X86_64_8`] = debug_elf.R_X86_64_8
	Consts[`/debug/elf/R_X86_64_COPY`] = debug_elf.R_X86_64_COPY
	Consts[`/debug/elf/R_X86_64_DTPMOD64`] = debug_elf.R_X86_64_DTPMOD64
	Consts[`/debug/elf/R_X86_64_DTPOFF32`] = debug_elf.R_X86_64_DTPOFF32
	Consts[`/debug/elf/R_X86_64_DTPOFF64`] = debug_elf.R_X86_64_DTPOFF64
	Consts[`/debug/elf/R_X86_64_GLOB_DAT`] = debug_elf.R_X86_64_GLOB_DAT
	Consts[`/debug/elf/R_X86_64_GOT32`] = debug_elf.R_X86_64_GOT32
	Consts[`/debug/elf/R_X86_64_GOTPCREL`] = debug_elf.R_X86_64_GOTPCREL
	Consts[`/debug/elf/R_X86_64_GOTTPOFF`] = debug_elf.R_X86_64_GOTTPOFF
	Consts[`/debug/elf/R_X86_64_JMP_SLOT`] = debug_elf.R_X86_64_JMP_SLOT
	Consts[`/debug/elf/R_X86_64_NONE`] = debug_elf.R_X86_64_NONE
	Consts[`/debug/elf/R_X86_64_PC16`] = debug_elf.R_X86_64_PC16
	Consts[`/debug/elf/R_X86_64_PC32`] = debug_elf.R_X86_64_PC32
	Consts[`/debug/elf/R_X86_64_PC8`] = debug_elf.R_X86_64_PC8
	Consts[`/debug/elf/R_X86_64_PLT32`] = debug_elf.R_X86_64_PLT32
	Consts[`/debug/elf/R_X86_64_RELATIVE`] = debug_elf.R_X86_64_RELATIVE
	Consts[`/debug/elf/R_X86_64_TLSGD`] = debug_elf.R_X86_64_TLSGD
	Consts[`/debug/elf/R_X86_64_TLSLD`] = debug_elf.R_X86_64_TLSLD
	Consts[`/debug/elf/R_X86_64_TPOFF32`] = debug_elf.R_X86_64_TPOFF32
	Consts[`/debug/elf/R_X86_64_TPOFF64`] = debug_elf.R_X86_64_TPOFF64
	Consts[`/debug/elf/SHF_ALLOC`] = debug_elf.SHF_ALLOC
	Consts[`/debug/elf/SHF_EXECINSTR`] = debug_elf.SHF_EXECINSTR
	Consts[`/debug/elf/SHF_GROUP`] = debug_elf.SHF_GROUP
	Consts[`/debug/elf/SHF_INFO_LINK`] = debug_elf.SHF_INFO_LINK
	Consts[`/debug/elf/SHF_LINK_ORDER`] = debug_elf.SHF_LINK_ORDER
	Consts[`/debug/elf/SHF_MASKOS`] = debug_elf.SHF_MASKOS
	Consts[`/debug/elf/SHF_MASKPROC`] = debug_elf.SHF_MASKPROC
	Consts[`/debug/elf/SHF_MERGE`] = debug_elf.SHF_MERGE
	Consts[`/debug/elf/SHF_OS_NONCONFORMING`] = debug_elf.SHF_OS_NONCONFORMING
	Consts[`/debug/elf/SHF_STRINGS`] = debug_elf.SHF_STRINGS
	Consts[`/debug/elf/SHF_TLS`] = debug_elf.SHF_TLS
	Consts[`/debug/elf/SHF_WRITE`] = debug_elf.SHF_WRITE
	Consts[`/debug/elf/SHN_ABS`] = debug_elf.SHN_ABS
	Consts[`/debug/elf/SHN_COMMON`] = debug_elf.SHN_COMMON
	Consts[`/debug/elf/SHN_HIOS`] = debug_elf.SHN_HIOS
	Consts[`/debug/elf/SHN_HIPROC`] = debug_elf.SHN_HIPROC
	Consts[`/debug/elf/SHN_HIRESERVE`] = debug_elf.SHN_HIRESERVE
	Consts[`/debug/elf/SHN_LOOS`] = debug_elf.SHN_LOOS
	Consts[`/debug/elf/SHN_LOPROC`] = debug_elf.SHN_LOPROC
	Consts[`/debug/elf/SHN_LORESERVE`] = debug_elf.SHN_LORESERVE
	Consts[`/debug/elf/SHN_UNDEF`] = debug_elf.SHN_UNDEF
	Consts[`/debug/elf/SHN_XINDEX`] = debug_elf.SHN_XINDEX
	Consts[`/debug/elf/SHT_DYNAMIC`] = debug_elf.SHT_DYNAMIC
	Consts[`/debug/elf/SHT_DYNSYM`] = debug_elf.SHT_DYNSYM
	Consts[`/debug/elf/SHT_FINI_ARRAY`] = debug_elf.SHT_FINI_ARRAY
	Consts[`/debug/elf/SHT_GNU_ATTRIBUTES`] = debug_elf.SHT_GNU_ATTRIBUTES
	Consts[`/debug/elf/SHT_GNU_HASH`] = debug_elf.SHT_GNU_HASH
	Consts[`/debug/elf/SHT_GNU_LIBLIST`] = debug_elf.SHT_GNU_LIBLIST
	Consts[`/debug/elf/SHT_GNU_VERDEF`] = debug_elf.SHT_GNU_VERDEF
	Consts[`/debug/elf/SHT_GNU_VERNEED`] = debug_elf.SHT_GNU_VERNEED
	Consts[`/debug/elf/SHT_GNU_VERSYM`] = debug_elf.SHT_GNU_VERSYM
	Consts[`/debug/elf/SHT_GROUP`] = debug_elf.SHT_GROUP
	Consts[`/debug/elf/SHT_HASH`] = debug_elf.SHT_HASH
	Consts[`/debug/elf/SHT_HIOS`] = debug_elf.SHT_HIOS
	Consts[`/debug/elf/SHT_HIPROC`] = debug_elf.SHT_HIPROC
	Consts[`/debug/elf/SHT_HIUSER`] = debug_elf.SHT_HIUSER
	Consts[`/debug/elf/SHT_INIT_ARRAY`] = debug_elf.SHT_INIT_ARRAY
	Consts[`/debug/elf/SHT_LOOS`] = debug_elf.SHT_LOOS
	Consts[`/debug/elf/SHT_LOPROC`] = debug_elf.SHT_LOPROC
	Consts[`/debug/elf/SHT_LOUSER`] = debug_elf.SHT_LOUSER
	Consts[`/debug/elf/SHT_NOBITS`] = debug_elf.SHT_NOBITS
	Consts[`/debug/elf/SHT_NOTE`] = debug_elf.SHT_NOTE
	Consts[`/debug/elf/SHT_NULL`] = debug_elf.SHT_NULL
	Consts[`/debug/elf/SHT_PREINIT_ARRAY`] = debug_elf.SHT_PREINIT_ARRAY
	Consts[`/debug/elf/SHT_PROGBITS`] = debug_elf.SHT_PROGBITS
	Consts[`/debug/elf/SHT_REL`] = debug_elf.SHT_REL
	Consts[`/debug/elf/SHT_RELA`] = debug_elf.SHT_RELA
	Consts[`/debug/elf/SHT_SHLIB`] = debug_elf.SHT_SHLIB
	Consts[`/debug/elf/SHT_STRTAB`] = debug_elf.SHT_STRTAB
	Consts[`/debug/elf/SHT_SYMTAB`] = debug_elf.SHT_SYMTAB
	Consts[`/debug/elf/SHT_SYMTAB_SHNDX`] = debug_elf.SHT_SYMTAB_SHNDX
	Consts[`/debug/elf/STB_GLOBAL`] = debug_elf.STB_GLOBAL
	Consts[`/debug/elf/STB_HIOS`] = debug_elf.STB_HIOS
	Consts[`/debug/elf/STB_HIPROC`] = debug_elf.STB_HIPROC
	Consts[`/debug/elf/STB_LOCAL`] = debug_elf.STB_LOCAL
	Consts[`/debug/elf/STB_LOOS`] = debug_elf.STB_LOOS
	Consts[`/debug/elf/STB_LOPROC`] = debug_elf.STB_LOPROC
	Consts[`/debug/elf/STB_WEAK`] = debug_elf.STB_WEAK
	Consts[`/debug/elf/STT_COMMON`] = debug_elf.STT_COMMON
	Consts[`/debug/elf/STT_FILE`] = debug_elf.STT_FILE
	Consts[`/debug/elf/STT_FUNC`] = debug_elf.STT_FUNC
	Consts[`/debug/elf/STT_HIOS`] = debug_elf.STT_HIOS
	Consts[`/debug/elf/STT_HIPROC`] = debug_elf.STT_HIPROC
	Consts[`/debug/elf/STT_LOOS`] = debug_elf.STT_LOOS
	Consts[`/debug/elf/STT_LOPROC`] = debug_elf.STT_LOPROC
	Consts[`/debug/elf/STT_NOTYPE`] = debug_elf.STT_NOTYPE
	Consts[`/debug/elf/STT_OBJECT`] = debug_elf.STT_OBJECT
	Consts[`/debug/elf/STT_SECTION`] = debug_elf.STT_SECTION
	Consts[`/debug/elf/STT_TLS`] = debug_elf.STT_TLS
	Consts[`/debug/elf/STV_DEFAULT`] = debug_elf.STV_DEFAULT
	Consts[`/debug/elf/STV_HIDDEN`] = debug_elf.STV_HIDDEN
	Consts[`/debug/elf/STV_INTERNAL`] = debug_elf.STV_INTERNAL
	Consts[`/debug/elf/STV_PROTECTED`] = debug_elf.STV_PROTECTED
	Consts[`/debug/elf/Sym32Size`] = debug_elf.Sym32Size
	Consts[`/debug/elf/Sym64Size`] = debug_elf.Sym64Size
	Consts[`/debug/macho/Cpu386`] = debug_macho.Cpu386
	Consts[`/debug/macho/CpuAmd64`] = debug_macho.CpuAmd64
	Consts[`/debug/macho/LoadCmdDylib`] = debug_macho.LoadCmdDylib
	Consts[`/debug/macho/LoadCmdDylinker`] = debug_macho.LoadCmdDylinker
	Consts[`/debug/macho/LoadCmdDysymtab`] = debug_macho.LoadCmdDysymtab
	Consts[`/debug/macho/LoadCmdSegment`] = debug_macho.LoadCmdSegment
	Consts[`/debug/macho/LoadCmdSegment64`] = debug_macho.LoadCmdSegment64
	Consts[`/debug/macho/LoadCmdSymtab`] = debug_macho.LoadCmdSymtab
	Consts[`/debug/macho/LoadCmdThread`] = debug_macho.LoadCmdThread
	Consts[`/debug/macho/LoadCmdUnixThread`] = debug_macho.LoadCmdUnixThread
	Consts[`/debug/macho/Magic32`] = debug_macho.Magic32
	Consts[`/debug/macho/Magic64`] = debug_macho.Magic64
	Consts[`/debug/macho/TypeExec`] = debug_macho.TypeExec
	Consts[`/debug/macho/TypeObj`] = debug_macho.TypeObj
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_AM33`] = debug_pe.IMAGE_FILE_MACHINE_AM33
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_AMD64`] = debug_pe.IMAGE_FILE_MACHINE_AMD64
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_ARM`] = debug_pe.IMAGE_FILE_MACHINE_ARM
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_EBC`] = debug_pe.IMAGE_FILE_MACHINE_EBC
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_I386`] = debug_pe.IMAGE_FILE_MACHINE_I386
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_IA64`] = debug_pe.IMAGE_FILE_MACHINE_IA64
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_M32R`] = debug_pe.IMAGE_FILE_MACHINE_M32R
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_MIPS16`] = debug_pe.IMAGE_FILE_MACHINE_MIPS16
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_MIPSFPU`] = debug_pe.IMAGE_FILE_MACHINE_MIPSFPU
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_MIPSFPU16`] = debug_pe.IMAGE_FILE_MACHINE_MIPSFPU16
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_POWERPC`] = debug_pe.IMAGE_FILE_MACHINE_POWERPC
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_POWERPCFP`] = debug_pe.IMAGE_FILE_MACHINE_POWERPCFP
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_R4000`] = debug_pe.IMAGE_FILE_MACHINE_R4000
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_SH3`] = debug_pe.IMAGE_FILE_MACHINE_SH3
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_SH3DSP`] = debug_pe.IMAGE_FILE_MACHINE_SH3DSP
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_SH4`] = debug_pe.IMAGE_FILE_MACHINE_SH4
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_SH5`] = debug_pe.IMAGE_FILE_MACHINE_SH5
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_THUMB`] = debug_pe.IMAGE_FILE_MACHINE_THUMB
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_UNKNOWN`] = debug_pe.IMAGE_FILE_MACHINE_UNKNOWN
	Consts[`/debug/pe/IMAGE_FILE_MACHINE_WCEMIPSV2`] = debug_pe.IMAGE_FILE_MACHINE_WCEMIPSV2
	Consts[`/encoding/binary/MaxVarintLen16`] = encoding_binary.MaxVarintLen16
	Consts[`/encoding/binary/MaxVarintLen32`] = encoding_binary.MaxVarintLen32
	Consts[`/encoding/binary/MaxVarintLen64`] = encoding_binary.MaxVarintLen64
	Consts[`/encoding/xml/Header`] = encoding_xml.Header
	Consts[`/flag/ContinueOnError`] = flag.ContinueOnError
	Consts[`/flag/ExitOnError`] = flag.ExitOnError
	Consts[`/flag/PanicOnError`] = flag.PanicOnError
	Consts[`/go/ast/Bad`] = go_ast.Bad
	Consts[`/go/ast/Con`] = go_ast.Con
	Consts[`/go/ast/FilterFuncDuplicates`] = go_ast.FilterFuncDuplicates
	Consts[`/go/ast/FilterImportDuplicates`] = go_ast.FilterImportDuplicates
	Consts[`/go/ast/FilterUnassociatedComments`] = go_ast.FilterUnassociatedComments
	Consts[`/go/ast/Fun`] = go_ast.Fun
	Consts[`/go/ast/Lbl`] = go_ast.Lbl
	Consts[`/go/ast/Pkg`] = go_ast.Pkg
	Consts[`/go/ast/RECV`] = go_ast.RECV
	Consts[`/go/ast/SEND`] = go_ast.SEND
	Consts[`/go/ast/Typ`] = go_ast.Typ
	Consts[`/go/ast/Var`] = go_ast.Var
	Consts[`/go/build/AllowBinary`] = go_build.AllowBinary
	Consts[`/go/build/FindOnly`] = go_build.FindOnly
	Consts[`/go/doc/AllDecls`] = go_doc.AllDecls
	Consts[`/go/doc/AllMethods`] = go_doc.AllMethods
	Consts[`/go/parser/DeclarationErrors`] = go_parser.DeclarationErrors
	Consts[`/go/parser/ImportsOnly`] = go_parser.ImportsOnly
	Consts[`/go/parser/PackageClauseOnly`] = go_parser.PackageClauseOnly
	Consts[`/go/parser/ParseComments`] = go_parser.ParseComments
	Consts[`/go/parser/SpuriousErrors`] = go_parser.SpuriousErrors
	Consts[`/go/parser/Trace`] = go_parser.Trace
	Consts[`/go/printer/RawFormat`] = go_printer.RawFormat
	Consts[`/go/printer/SourcePos`] = go_printer.SourcePos
	Consts[`/go/printer/TabIndent`] = go_printer.TabIndent
	Consts[`/go/printer/UseSpaces`] = go_printer.UseSpaces
	Consts[`/go/scanner/ScanComments`] = go_scanner.ScanComments
	Consts[`/go/token/ADD`] = go_token.ADD
	Consts[`/go/token/ADD_ASSIGN`] = go_token.ADD_ASSIGN
	Consts[`/go/token/AND`] = go_token.AND
	Consts[`/go/token/AND_ASSIGN`] = go_token.AND_ASSIGN
	Consts[`/go/token/AND_NOT`] = go_token.AND_NOT
	Consts[`/go/token/AND_NOT_ASSIGN`] = go_token.AND_NOT_ASSIGN
	Consts[`/go/token/ARROW`] = go_token.ARROW
	Consts[`/go/token/ASSIGN`] = go_token.ASSIGN
	Consts[`/go/token/BREAK`] = go_token.BREAK
	Consts[`/go/token/CASE`] = go_token.CASE
	Consts[`/go/token/CHAN`] = go_token.CHAN
	Consts[`/go/token/CHAR`] = go_token.CHAR
	Consts[`/go/token/COLON`] = go_token.COLON
	Consts[`/go/token/COMMA`] = go_token.COMMA
	Consts[`/go/token/COMMENT`] = go_token.COMMENT
	Consts[`/go/token/CONST`] = go_token.CONST
	Consts[`/go/token/CONTINUE`] = go_token.CONTINUE
	Consts[`/go/token/DEC`] = go_token.DEC
	Consts[`/go/token/DEFAULT`] = go_token.DEFAULT
	Consts[`/go/token/DEFER`] = go_token.DEFER
	Consts[`/go/token/DEFINE`] = go_token.DEFINE
	Consts[`/go/token/ELLIPSIS`] = go_token.ELLIPSIS
	Consts[`/go/token/ELSE`] = go_token.ELSE
	Consts[`/go/token/EOF`] = go_token.EOF
	Consts[`/go/token/EQL`] = go_token.EQL
	Consts[`/go/token/FALLTHROUGH`] = go_token.FALLTHROUGH
	Consts[`/go/token/FLOAT`] = go_token.FLOAT
	Consts[`/go/token/FOR`] = go_token.FOR
	Consts[`/go/token/FUNC`] = go_token.FUNC
	Consts[`/go/token/GEQ`] = go_token.GEQ
	Consts[`/go/token/GO`] = go_token.GO
	Consts[`/go/token/GOTO`] = go_token.GOTO
	Consts[`/go/token/GTR`] = go_token.GTR
	Consts[`/go/token/HighestPrec`] = go_token.HighestPrec
	Consts[`/go/token/IDENT`] = go_token.IDENT
	Consts[`/go/token/IF`] = go_token.IF
	Consts[`/go/token/ILLEGAL`] = go_token.ILLEGAL
	Consts[`/go/token/IMAG`] = go_token.IMAG
	Consts[`/go/token/IMPORT`] = go_token.IMPORT
	Consts[`/go/token/INC`] = go_token.INC
	Consts[`/go/token/INT`] = go_token.INT
	Consts[`/go/token/INTERFACE`] = go_token.INTERFACE
	Consts[`/go/token/LAND`] = go_token.LAND
	Consts[`/go/token/LBRACE`] = go_token.LBRACE
	Consts[`/go/token/LBRACK`] = go_token.LBRACK
	Consts[`/go/token/LEQ`] = go_token.LEQ
	Consts[`/go/token/LOR`] = go_token.LOR
	Consts[`/go/token/LPAREN`] = go_token.LPAREN
	Consts[`/go/token/LSS`] = go_token.LSS
	Consts[`/go/token/LowestPrec`] = go_token.LowestPrec
	Consts[`/go/token/MAP`] = go_token.MAP
	Consts[`/go/token/MUL`] = go_token.MUL
	Consts[`/go/token/MUL_ASSIGN`] = go_token.MUL_ASSIGN
	Consts[`/go/token/NEQ`] = go_token.NEQ
	Consts[`/go/token/NOT`] = go_token.NOT
	Consts[`/go/token/NoPos`] = go_token.NoPos
	Consts[`/go/token/OR`] = go_token.OR
	Consts[`/go/token/OR_ASSIGN`] = go_token.OR_ASSIGN
	Consts[`/go/token/PACKAGE`] = go_token.PACKAGE
	Consts[`/go/token/PERIOD`] = go_token.PERIOD
	Consts[`/go/token/QUO`] = go_token.QUO
	Consts[`/go/token/QUO_ASSIGN`] = go_token.QUO_ASSIGN
	Consts[`/go/token/RANGE`] = go_token.RANGE
	Consts[`/go/token/RBRACE`] = go_token.RBRACE
	Consts[`/go/token/RBRACK`] = go_token.RBRACK
	Consts[`/go/token/REM`] = go_token.REM
	Consts[`/go/token/REM_ASSIGN`] = go_token.REM_ASSIGN
	Consts[`/go/token/RETURN`] = go_token.RETURN
	Consts[`/go/token/RPAREN`] = go_token.RPAREN
	Consts[`/go/token/SELECT`] = go_token.SELECT
	Consts[`/go/token/SEMICOLON`] = go_token.SEMICOLON
	Consts[`/go/token/SHL`] = go_token.SHL
	Consts[`/go/token/SHL_ASSIGN`] = go_token.SHL_ASSIGN
	Consts[`/go/token/SHR`] = go_token.SHR
	Consts[`/go/token/SHR_ASSIGN`] = go_token.SHR_ASSIGN
	Consts[`/go/token/STRING`] = go_token.STRING
	Consts[`/go/token/STRUCT`] = go_token.STRUCT
	Consts[`/go/token/SUB`] = go_token.SUB
	Consts[`/go/token/SUB_ASSIGN`] = go_token.SUB_ASSIGN
	Consts[`/go/token/SWITCH`] = go_token.SWITCH
	Consts[`/go/token/TYPE`] = go_token.TYPE
	Consts[`/go/token/UnaryPrec`] = go_token.UnaryPrec
	Consts[`/go/token/VAR`] = go_token.VAR
	Consts[`/go/token/XOR`] = go_token.XOR
	Consts[`/go/token/XOR_ASSIGN`] = go_token.XOR_ASSIGN
	Consts[`/hash/adler32/Size`] = hash_adler32.Size
	Consts[`/hash/crc32/Castagnoli`] = hash_crc32.Castagnoli
	Consts[`/hash/crc32/IEEE`] = hash_crc32.IEEE
	Consts[`/hash/crc32/Koopman`] = hash_crc32.Koopman
	Consts[`/hash/crc32/Size`] = hash_crc32.Size
	Consts[`/html/template/ErrAmbigContext`] = html_template.ErrAmbigContext
	Consts[`/html/template/ErrBadHTML`] = html_template.ErrBadHTML
	Consts[`/html/template/ErrBranchEnd`] = html_template.ErrBranchEnd
	Consts[`/html/template/ErrEndContext`] = html_template.ErrEndContext
	Consts[`/html/template/ErrNoSuchTemplate`] = html_template.ErrNoSuchTemplate
	Consts[`/html/template/ErrOutputContext`] = html_template.ErrOutputContext
	Consts[`/html/template/ErrPartialCharset`] = html_template.ErrPartialCharset
	Consts[`/html/template/ErrPartialEscape`] = html_template.ErrPartialEscape
	Consts[`/html/template/ErrRangeLoopReentry`] = html_template.ErrRangeLoopReentry
	Consts[`/html/template/ErrSlashAmbig`] = html_template.ErrSlashAmbig
	Consts[`/html/template/OK`] = html_template.OK
	Consts[`/image/YCbCrSubsampleRatio420`] = image.YCbCrSubsampleRatio420
	Consts[`/image/YCbCrSubsampleRatio422`] = image.YCbCrSubsampleRatio422
	Consts[`/image/YCbCrSubsampleRatio444`] = image.YCbCrSubsampleRatio444
	Consts[`/image/draw/Over`] = image_draw.Over
	Consts[`/image/draw/Src`] = image_draw.Src
	Consts[`/image/jpeg/DefaultQuality`] = image_jpeg.DefaultQuality
	Consts[`/log/Ldate`] = log.Ldate
	Consts[`/log/Llongfile`] = log.Llongfile
	Consts[`/log/Lmicroseconds`] = log.Lmicroseconds
	Consts[`/log/Lshortfile`] = log.Lshortfile
	Consts[`/log/LstdFlags`] = log.LstdFlags
	Consts[`/log/Ltime`] = log.Ltime
	Consts[`/math/E`] = math.E
	Consts[`/math/Ln10`] = math.Ln10
	Consts[`/math/Ln2`] = math.Ln2
	Consts[`/math/Log10E`] = math.Log10E
	Consts[`/math/Log2E`] = math.Log2E
	Consts[`/math/MaxFloat32`] = math.MaxFloat32
	Consts[`/math/MaxFloat64`] = math.MaxFloat64
	Consts[`/math/MaxInt16`] = math.MaxInt16
	Consts[`/math/MaxInt32`] = math.MaxInt32
	Consts[`/math/MaxInt64`] = math.MaxInt64
	Consts[`/math/MaxInt8`] = math.MaxInt8
	Consts[`/math/MaxUint16`] = math.MaxUint16
	Consts[`/math/MaxUint32`] = math.MaxUint32
	Consts[`/math/MaxUint8`] = math.MaxUint8
	Consts[`/math/MinInt16`] = math.MinInt16
	Consts[`/math/MinInt32`] = math.MinInt32
	Consts[`/math/MinInt64`] = math.MinInt64
	Consts[`/math/MinInt8`] = math.MinInt8
	Consts[`/math/Phi`] = math.Phi
	Consts[`/math/Pi`] = math.Pi
	Consts[`/math/SmallestNonzeroFloat32`] = math.SmallestNonzeroFloat32
	Consts[`/math/SmallestNonzeroFloat64`] = math.SmallestNonzeroFloat64
	Consts[`/math/Sqrt2`] = math.Sqrt2
	Consts[`/math/SqrtE`] = math.SqrtE
	Consts[`/math/SqrtPhi`] = math.SqrtPhi
	Consts[`/math/SqrtPi`] = math.SqrtPi
	Consts[`/math/big/MaxBase`] = math_big.MaxBase
	Consts[`/net/FlagBroadcast`] = net.FlagBroadcast
	Consts[`/net/FlagLoopback`] = net.FlagLoopback
	Consts[`/net/FlagMulticast`] = net.FlagMulticast
	Consts[`/net/FlagPointToPoint`] = net.FlagPointToPoint
	Consts[`/net/FlagUp`] = net.FlagUp
	Consts[`/net/IPv4len`] = net.IPv4len
	Consts[`/net/IPv6len`] = net.IPv6len
	Consts[`/net/http/DefaultMaxHeaderBytes`] = net_http.DefaultMaxHeaderBytes
	Consts[`/net/http/DefaultMaxIdleConnsPerHost`] = net_http.DefaultMaxIdleConnsPerHost
	Consts[`/net/http/StatusAccepted`] = net_http.StatusAccepted
	Consts[`/net/http/StatusBadGateway`] = net_http.StatusBadGateway
	Consts[`/net/http/StatusBadRequest`] = net_http.StatusBadRequest
	Consts[`/net/http/StatusConflict`] = net_http.StatusConflict
	Consts[`/net/http/StatusContinue`] = net_http.StatusContinue
	Consts[`/net/http/StatusCreated`] = net_http.StatusCreated
	Consts[`/net/http/StatusExpectationFailed`] = net_http.StatusExpectationFailed
	Consts[`/net/http/StatusForbidden`] = net_http.StatusForbidden
	Consts[`/net/http/StatusFound`] = net_http.StatusFound
	Consts[`/net/http/StatusGatewayTimeout`] = net_http.StatusGatewayTimeout
	Consts[`/net/http/StatusGone`] = net_http.StatusGone
	Consts[`/net/http/StatusHTTPVersionNotSupported`] = net_http.StatusHTTPVersionNotSupported
	Consts[`/net/http/StatusInternalServerError`] = net_http.StatusInternalServerError
	Consts[`/net/http/StatusLengthRequired`] = net_http.StatusLengthRequired
	Consts[`/net/http/StatusMethodNotAllowed`] = net_http.StatusMethodNotAllowed
	Consts[`/net/http/StatusMovedPermanently`] = net_http.StatusMovedPermanently
	Consts[`/net/http/StatusMultipleChoices`] = net_http.StatusMultipleChoices
	Consts[`/net/http/StatusNoContent`] = net_http.StatusNoContent
	Consts[`/net/http/StatusNonAuthoritativeInfo`] = net_http.StatusNonAuthoritativeInfo
	Consts[`/net/http/StatusNotAcceptable`] = net_http.StatusNotAcceptable
	Consts[`/net/http/StatusNotFound`] = net_http.StatusNotFound
	Consts[`/net/http/StatusNotImplemented`] = net_http.StatusNotImplemented
	Consts[`/net/http/StatusNotModified`] = net_http.StatusNotModified
	Consts[`/net/http/StatusOK`] = net_http.StatusOK
	Consts[`/net/http/StatusPartialContent`] = net_http.StatusPartialContent
	Consts[`/net/http/StatusPaymentRequired`] = net_http.StatusPaymentRequired
	Consts[`/net/http/StatusPreconditionFailed`] = net_http.StatusPreconditionFailed
	Consts[`/net/http/StatusProxyAuthRequired`] = net_http.StatusProxyAuthRequired
	Consts[`/net/http/StatusRequestEntityTooLarge`] = net_http.StatusRequestEntityTooLarge
	Consts[`/net/http/StatusRequestTimeout`] = net_http.StatusRequestTimeout
	Consts[`/net/http/StatusRequestURITooLong`] = net_http.StatusRequestURITooLong
	Consts[`/net/http/StatusRequestedRangeNotSatisfiable`] = net_http.StatusRequestedRangeNotSatisfiable
	Consts[`/net/http/StatusResetContent`] = net_http.StatusResetContent
	Consts[`/net/http/StatusSeeOther`] = net_http.StatusSeeOther
	Consts[`/net/http/StatusServiceUnavailable`] = net_http.StatusServiceUnavailable
	Consts[`/net/http/StatusSwitchingProtocols`] = net_http.StatusSwitchingProtocols
	Consts[`/net/http/StatusTeapot`] = net_http.StatusTeapot
	Consts[`/net/http/StatusTemporaryRedirect`] = net_http.StatusTemporaryRedirect
	Consts[`/net/http/StatusUnauthorized`] = net_http.StatusUnauthorized
	Consts[`/net/http/StatusUnsupportedMediaType`] = net_http.StatusUnsupportedMediaType
	Consts[`/net/http/StatusUseProxy`] = net_http.StatusUseProxy
	Consts[`/net/http/TimeFormat`] = net_http.TimeFormat
	Consts[`/net/http/httptest/DefaultRemoteAddr`] = net_http_httptest.DefaultRemoteAddr
	Consts[`/net/rpc/DefaultDebugPath`] = net_rpc.DefaultDebugPath
	Consts[`/net/rpc/DefaultRPCPath`] = net_rpc.DefaultRPCPath
	Consts[`/os/DevNull`] = os.DevNull
	Consts[`/os/ModeAppend`] = os.ModeAppend
	Consts[`/os/ModeCharDevice`] = os.ModeCharDevice
	Consts[`/os/ModeDevice`] = os.ModeDevice
	Consts[`/os/ModeDir`] = os.ModeDir
	Consts[`/os/ModeExclusive`] = os.ModeExclusive
	Consts[`/os/ModeNamedPipe`] = os.ModeNamedPipe
	Consts[`/os/ModePerm`] = os.ModePerm
	Consts[`/os/ModeSetgid`] = os.ModeSetgid
	Consts[`/os/ModeSetuid`] = os.ModeSetuid
	Consts[`/os/ModeSocket`] = os.ModeSocket
	Consts[`/os/ModeSticky`] = os.ModeSticky
	Consts[`/os/ModeSymlink`] = os.ModeSymlink
	Consts[`/os/ModeTemporary`] = os.ModeTemporary
	Consts[`/os/ModeType`] = os.ModeType
	Consts[`/os/O_APPEND`] = os.O_APPEND
	Consts[`/os/O_CREATE`] = os.O_CREATE
	Consts[`/os/O_EXCL`] = os.O_EXCL
	Consts[`/os/O_RDONLY`] = os.O_RDONLY
	Consts[`/os/O_RDWR`] = os.O_RDWR
	Consts[`/os/O_SYNC`] = os.O_SYNC
	Consts[`/os/O_TRUNC`] = os.O_TRUNC
	Consts[`/os/O_WRONLY`] = os.O_WRONLY
	Consts[`/os/PathListSeparator`] = os.PathListSeparator
	Consts[`/os/PathSeparator`] = os.PathSeparator
	Consts[`/os/SEEK_CUR`] = os.SEEK_CUR
	Consts[`/os/SEEK_END`] = os.SEEK_END
	Consts[`/os/SEEK_SET`] = os.SEEK_SET
	Consts[`/path/filepath/ListSeparator`] = path_filepath.ListSeparator
	Consts[`/path/filepath/Separator`] = path_filepath.Separator
	Consts[`/reflect/Array`] = reflect.Array
	Consts[`/reflect/Bool`] = reflect.Bool
	Consts[`/reflect/BothDir`] = reflect.BothDir
	Consts[`/reflect/Chan`] = reflect.Chan
	Consts[`/reflect/Complex128`] = reflect.Complex128
	Consts[`/reflect/Complex64`] = reflect.Complex64
	Consts[`/reflect/Float32`] = reflect.Float32
	Consts[`/reflect/Float64`] = reflect.Float64
	Consts[`/reflect/Func`] = reflect.Func
	Consts[`/reflect/Int`] = reflect.Int
	Consts[`/reflect/Int16`] = reflect.Int16
	Consts[`/reflect/Int32`] = reflect.Int32
	Consts[`/reflect/Int64`] = reflect.Int64
	Consts[`/reflect/Int8`] = reflect.Int8
	Consts[`/reflect/Interface`] = reflect.Interface
	Consts[`/reflect/Invalid`] = reflect.Invalid
	Consts[`/reflect/Map`] = reflect.Map
	Consts[`/reflect/Ptr`] = reflect.Ptr
	Consts[`/reflect/RecvDir`] = reflect.RecvDir
	Consts[`/reflect/SendDir`] = reflect.SendDir
	Consts[`/reflect/Slice`] = reflect.Slice
	Consts[`/reflect/String`] = reflect.String
	Consts[`/reflect/Struct`] = reflect.Struct
	Consts[`/reflect/Uint`] = reflect.Uint
	Consts[`/reflect/Uint16`] = reflect.Uint16
	Consts[`/reflect/Uint32`] = reflect.Uint32
	Consts[`/reflect/Uint64`] = reflect.Uint64
	Consts[`/reflect/Uint8`] = reflect.Uint8
	Consts[`/reflect/Uintptr`] = reflect.Uintptr
	Consts[`/reflect/UnsafePointer`] = reflect.UnsafePointer
	Consts[`/regexp/syntax/ClassNL`] = regexp_syntax.ClassNL
	Consts[`/regexp/syntax/DotNL`] = regexp_syntax.DotNL
	Consts[`/regexp/syntax/EmptyBeginLine`] = regexp_syntax.EmptyBeginLine
	Consts[`/regexp/syntax/EmptyBeginText`] = regexp_syntax.EmptyBeginText
	Consts[`/regexp/syntax/EmptyEndLine`] = regexp_syntax.EmptyEndLine
	Consts[`/regexp/syntax/EmptyEndText`] = regexp_syntax.EmptyEndText
	Consts[`/regexp/syntax/EmptyNoWordBoundary`] = regexp_syntax.EmptyNoWordBoundary
	Consts[`/regexp/syntax/EmptyWordBoundary`] = regexp_syntax.EmptyWordBoundary
	Consts[`/regexp/syntax/ErrInternalError`] = regexp_syntax.ErrInternalError
	Consts[`/regexp/syntax/ErrInvalidCharClass`] = regexp_syntax.ErrInvalidCharClass
	Consts[`/regexp/syntax/ErrInvalidCharRange`] = regexp_syntax.ErrInvalidCharRange
	Consts[`/regexp/syntax/ErrInvalidEscape`] = regexp_syntax.ErrInvalidEscape
	Consts[`/regexp/syntax/ErrInvalidNamedCapture`] = regexp_syntax.ErrInvalidNamedCapture
	Consts[`/regexp/syntax/ErrInvalidPerlOp`] = regexp_syntax.ErrInvalidPerlOp
	Consts[`/regexp/syntax/ErrInvalidRepeatOp`] = regexp_syntax.ErrInvalidRepeatOp
	Consts[`/regexp/syntax/ErrInvalidRepeatSize`] = regexp_syntax.ErrInvalidRepeatSize
	Consts[`/regexp/syntax/ErrInvalidUTF8`] = regexp_syntax.ErrInvalidUTF8
	Consts[`/regexp/syntax/ErrMissingBracket`] = regexp_syntax.ErrMissingBracket
	Consts[`/regexp/syntax/ErrMissingParen`] = regexp_syntax.ErrMissingParen
	Consts[`/regexp/syntax/ErrMissingRepeatArgument`] = regexp_syntax.ErrMissingRepeatArgument
	Consts[`/regexp/syntax/ErrTrailingBackslash`] = regexp_syntax.ErrTrailingBackslash
	Consts[`/regexp/syntax/FoldCase`] = regexp_syntax.FoldCase
	Consts[`/regexp/syntax/InstAlt`] = regexp_syntax.InstAlt
	Consts[`/regexp/syntax/InstAltMatch`] = regexp_syntax.InstAltMatch
	Consts[`/regexp/syntax/InstCapture`] = regexp_syntax.InstCapture
	Consts[`/regexp/syntax/InstEmptyWidth`] = regexp_syntax.InstEmptyWidth
	Consts[`/regexp/syntax/InstFail`] = regexp_syntax.InstFail
	Consts[`/regexp/syntax/InstMatch`] = regexp_syntax.InstMatch
	Consts[`/regexp/syntax/InstNop`] = regexp_syntax.InstNop
	Consts[`/regexp/syntax/InstRune`] = regexp_syntax.InstRune
	Consts[`/regexp/syntax/InstRune1`] = regexp_syntax.InstRune1
	Consts[`/regexp/syntax/InstRuneAny`] = regexp_syntax.InstRuneAny
	Consts[`/regexp/syntax/InstRuneAnyNotNL`] = regexp_syntax.InstRuneAnyNotNL
	Consts[`/regexp/syntax/Literal`] = regexp_syntax.Literal
	Consts[`/regexp/syntax/MatchNL`] = regexp_syntax.MatchNL
	Consts[`/regexp/syntax/NonGreedy`] = regexp_syntax.NonGreedy
	Consts[`/regexp/syntax/OneLine`] = regexp_syntax.OneLine
	Consts[`/regexp/syntax/OpAlternate`] = regexp_syntax.OpAlternate
	Consts[`/regexp/syntax/OpAnyChar`] = regexp_syntax.OpAnyChar
	Consts[`/regexp/syntax/OpAnyCharNotNL`] = regexp_syntax.OpAnyCharNotNL
	Consts[`/regexp/syntax/OpBeginLine`] = regexp_syntax.OpBeginLine
	Consts[`/regexp/syntax/OpBeginText`] = regexp_syntax.OpBeginText
	Consts[`/regexp/syntax/OpCapture`] = regexp_syntax.OpCapture
	Consts[`/regexp/syntax/OpCharClass`] = regexp_syntax.OpCharClass
	Consts[`/regexp/syntax/OpConcat`] = regexp_syntax.OpConcat
	Consts[`/regexp/syntax/OpEmptyMatch`] = regexp_syntax.OpEmptyMatch
	Consts[`/regexp/syntax/OpEndLine`] = regexp_syntax.OpEndLine
	Consts[`/regexp/syntax/OpEndText`] = regexp_syntax.OpEndText
	Consts[`/regexp/syntax/OpLiteral`] = regexp_syntax.OpLiteral
	Consts[`/regexp/syntax/OpNoMatch`] = regexp_syntax.OpNoMatch
	Consts[`/regexp/syntax/OpNoWordBoundary`] = regexp_syntax.OpNoWordBoundary
	Consts[`/regexp/syntax/OpPlus`] = regexp_syntax.OpPlus
	Consts[`/regexp/syntax/OpQuest`] = regexp_syntax.OpQuest
	Consts[`/regexp/syntax/OpRepeat`] = regexp_syntax.OpRepeat
	Consts[`/regexp/syntax/OpStar`] = regexp_syntax.OpStar
	Consts[`/regexp/syntax/OpWordBoundary`] = regexp_syntax.OpWordBoundary
	Consts[`/regexp/syntax/POSIX`] = regexp_syntax.POSIX
	Consts[`/regexp/syntax/Perl`] = regexp_syntax.Perl
	Consts[`/regexp/syntax/PerlX`] = regexp_syntax.PerlX
	Consts[`/regexp/syntax/Simple`] = regexp_syntax.Simple
	Consts[`/regexp/syntax/UnicodeGroups`] = regexp_syntax.UnicodeGroups
	Consts[`/regexp/syntax/WasDollar`] = regexp_syntax.WasDollar
	Consts[`/runtime/Compiler`] = runtime.Compiler
	Consts[`/runtime/GOARCH`] = runtime.GOARCH
	Consts[`/runtime/GOOS`] = runtime.GOOS
	Consts[`/strconv/IntSize`] = strconv.IntSize
	Consts[`/syscall/AF_INET`] = syscall.AF_INET
	Consts[`/syscall/AF_INET6`] = syscall.AF_INET6
	Consts[`/syscall/AF_UNIX`] = syscall.AF_UNIX
	Consts[`/syscall/AF_UNSPEC`] = syscall.AF_UNSPEC
	Consts[`/syscall/E2BIG`] = syscall.E2BIG
	Consts[`/syscall/EACCES`] = syscall.EACCES
	Consts[`/syscall/EADDRINUSE`] = syscall.EADDRINUSE
	Consts[`/syscall/EADDRNOTAVAIL`] = syscall.EADDRNOTAVAIL
	Consts[`/syscall/EAFNOSUPPORT`] = syscall.EAFNOSUPPORT
	Consts[`/syscall/EAGAIN`] = syscall.EAGAIN
	Consts[`/syscall/EALREADY`] = syscall.EALREADY
	Consts[`/syscall/EBADF`] = syscall.EBADF
	Consts[`/syscall/EBADMSG`] = syscall.EBADMSG
	Consts[`/syscall/EBUSY`] = syscall.EBUSY
	Consts[`/syscall/ECANCELED`] = syscall.ECANCELED
	Consts[`/syscall/ECHILD`] = syscall.ECHILD
	Consts[`/syscall/ECONNABORTED`] = syscall.ECONNABORTED
	Consts[`/syscall/ECONNREFUSED`] = syscall.ECONNREFUSED
	Consts[`/syscall/ECONNRESET`] = syscall.ECONNRESET
	Consts[`/syscall/EDEADLK`] = syscall.EDEADLK
	Consts[`/syscall/EDESTADDRREQ`] = syscall.EDESTADDRREQ
	Consts[`/syscall/EDOM`] = syscall.EDOM
	Consts[`/syscall/EDQUOT`] = syscall.EDQUOT
	Consts[`/syscall/EEXIST`] = syscall.EEXIST
	Consts[`/syscall/EFAULT`] = syscall.EFAULT
	Consts[`/syscall/EFBIG`] = syscall.EFBIG
	Consts[`/syscall/EHOSTDOWN`] = syscall.EHOSTDOWN
	Consts[`/syscall/EHOSTUNREACH`] = syscall.EHOSTUNREACH
	Consts[`/syscall/EIDRM`] = syscall.EIDRM
	Consts[`/syscall/EILSEQ`] = syscall.EILSEQ
	Consts[`/syscall/EINPROGRESS`] = syscall.EINPROGRESS
	Consts[`/syscall/EINTR`] = syscall.EINTR
	Consts[`/syscall/EINVAL`] = syscall.EINVAL
	Consts[`/syscall/EIO`] = syscall.EIO
	Consts[`/syscall/EISCONN`] = syscall.EISCONN
	Consts[`/syscall/EISDIR`] = syscall.EISDIR
	Consts[`/syscall/ELOOP`] = syscall.ELOOP
	Consts[`/syscall/EMFILE`] = syscall.EMFILE
	Consts[`/syscall/EMLINK`] = syscall.EMLINK
	Consts[`/syscall/EMSGSIZE`] = syscall.EMSGSIZE
	Consts[`/syscall/EMULTIHOP`] = syscall.EMULTIHOP
	Consts[`/syscall/ENAMETOOLONG`] = syscall.ENAMETOOLONG
	Consts[`/syscall/ENETDOWN`] = syscall.ENETDOWN
	Consts[`/syscall/ENETRESET`] = syscall.ENETRESET
	Consts[`/syscall/ENETUNREACH`] = syscall.ENETUNREACH
	Consts[`/syscall/ENFILE`] = syscall.ENFILE
	Consts[`/syscall/ENOBUFS`] = syscall.ENOBUFS
	Consts[`/syscall/ENODEV`] = syscall.ENODEV
	Consts[`/syscall/ENOENT`] = syscall.ENOENT
	Consts[`/syscall/ENOEXEC`] = syscall.ENOEXEC
	Consts[`/syscall/ENOLCK`] = syscall.ENOLCK
	Consts[`/syscall/ENOLINK`] = syscall.ENOLINK
	Consts[`/syscall/ENOMEM`] = syscall.ENOMEM
	Consts[`/syscall/ENOMSG`] = syscall.ENOMSG
	Consts[`/syscall/ENOPROTOOPT`] = syscall.ENOPROTOOPT
	Consts[`/syscall/ENOSPC`] = syscall.ENOSPC
	Consts[`/syscall/ENOSYS`] = syscall.ENOSYS
	Consts[`/syscall/ENOTBLK`] = syscall.ENOTBLK
	Consts[`/syscall/ENOTCONN`] = syscall.ENOTCONN
	Consts[`/syscall/ENOTDIR`] = syscall.ENOTDIR
	Consts[`/syscall/ENOTEMPTY`] = syscall.ENOTEMPTY
	Consts[`/syscall/ENOTSOCK`] = syscall.ENOTSOCK
	Consts[`/syscall/ENOTSUP`] = syscall.ENOTSUP
	Consts[`/syscall/ENOTTY`] = syscall.ENOTTY
	Consts[`/syscall/ENXIO`] = syscall.ENXIO
	Consts[`/syscall/EOPNOTSUPP`] = syscall.EOPNOTSUPP
	Consts[`/syscall/EOVERFLOW`] = syscall.EOVERFLOW
	Consts[`/syscall/EPERM`] = syscall.EPERM
	Consts[`/syscall/EPFNOSUPPORT`] = syscall.EPFNOSUPPORT
	Consts[`/syscall/EPIPE`] = syscall.EPIPE
	Consts[`/syscall/EPROTO`] = syscall.EPROTO
	Consts[`/syscall/EPROTONOSUPPORT`] = syscall.EPROTONOSUPPORT
	Consts[`/syscall/EPROTOTYPE`] = syscall.EPROTOTYPE
	Consts[`/syscall/ERANGE`] = syscall.ERANGE
	Consts[`/syscall/EREMOTE`] = syscall.EREMOTE
	Consts[`/syscall/EROFS`] = syscall.EROFS
	Consts[`/syscall/ESHUTDOWN`] = syscall.ESHUTDOWN
	Consts[`/syscall/ESOCKTNOSUPPORT`] = syscall.ESOCKTNOSUPPORT
	Consts[`/syscall/ESPIPE`] = syscall.ESPIPE
	Consts[`/syscall/ESRCH`] = syscall.ESRCH
	Consts[`/syscall/ESTALE`] = syscall.ESTALE
	Consts[`/syscall/ETIMEDOUT`] = syscall.ETIMEDOUT
	Consts[`/syscall/ETOOMANYREFS`] = syscall.ETOOMANYREFS
	Consts[`/syscall/ETXTBSY`] = syscall.ETXTBSY
	Consts[`/syscall/EUSERS`] = syscall.EUSERS
	Consts[`/syscall/EWOULDBLOCK`] = syscall.EWOULDBLOCK
	Consts[`/syscall/EXDEV`] = syscall.EXDEV
	Consts[`/syscall/IFF_BROADCAST`] = syscall.IFF_BROADCAST
	Consts[`/syscall/IFF_LOOPBACK`] = syscall.IFF_LOOPBACK
	Consts[`/syscall/IFF_MULTICAST`] = syscall.IFF_MULTICAST
	Consts[`/syscall/IFF_UP`] = syscall.IFF_UP
	Consts[`/syscall/IPPROTO_IP`] = syscall.IPPROTO_IP
	Consts[`/syscall/IPPROTO_IPV6`] = syscall.IPPROTO_IPV6
	Consts[`/syscall/IPPROTO_TCP`] = syscall.IPPROTO_TCP
	Consts[`/syscall/IPPROTO_UDP`] = syscall.IPPROTO_UDP
	Consts[`/syscall/IPV6_JOIN_GROUP`] = syscall.IPV6_JOIN_GROUP
	Consts[`/syscall/IPV6_LEAVE_GROUP`] = syscall.IPV6_LEAVE_GROUP
	Consts[`/syscall/IPV6_MULTICAST_HOPS`] = syscall.IPV6_MULTICAST_HOPS
	Consts[`/syscall/IPV6_MULTICAST_IF`] = syscall.IPV6_MULTICAST_IF
	Consts[`/syscall/IPV6_MULTICAST_LOOP`] = syscall.IPV6_MULTICAST_LOOP
	Consts[`/syscall/IPV6_UNICAST_HOPS`] = syscall.IPV6_UNICAST_HOPS
	Consts[`/syscall/IPV6_V6ONLY`] = syscall.IPV6_V6ONLY
	Consts[`/syscall/IP_ADD_MEMBERSHIP`] = syscall.IP_ADD_MEMBERSHIP
	Consts[`/syscall/IP_DROP_MEMBERSHIP`] = syscall.IP_DROP_MEMBERSHIP
	Consts[`/syscall/IP_MULTICAST_IF`] = syscall.IP_MULTICAST_IF
	Consts[`/syscall/IP_MULTICAST_LOOP`] = syscall.IP_MULTICAST_LOOP
	Consts[`/syscall/IP_MULTICAST_TTL`] = syscall.IP_MULTICAST_TTL
	Consts[`/syscall/IP_TOS`] = syscall.IP_TOS
	Consts[`/syscall/IP_TTL`] = syscall.IP_TTL
	Consts[`/syscall/ImplementsGetwd`] = syscall.ImplementsGetwd
	Consts[`/syscall/O_APPEND`] = syscall.O_APPEND
	Consts[`/syscall/O_ASYNC`] = syscall.O_ASYNC
	Consts[`/syscall/O_CLOEXEC`] = syscall.O_CLOEXEC
	Consts[`/syscall/O_CREAT`] = syscall.O_CREAT
	Consts[`/syscall/O_EXCL`] = syscall.O_EXCL
	Consts[`/syscall/O_NOCTTY`] = syscall.O_NOCTTY
	Consts[`/syscall/O_NONBLOCK`] = syscall.O_NONBLOCK
	Consts[`/syscall/O_RDONLY`] = syscall.O_RDONLY
	Consts[`/syscall/O_RDWR`] = syscall.O_RDWR
	Consts[`/syscall/O_SYNC`] = syscall.O_SYNC
	Consts[`/syscall/O_TRUNC`] = syscall.O_TRUNC
	Consts[`/syscall/O_WRONLY`] = syscall.O_WRONLY
	Consts[`/syscall/SHUT_RD`] = syscall.SHUT_RD
	Consts[`/syscall/SHUT_RDWR`] = syscall.SHUT_RDWR
	Consts[`/syscall/SHUT_WR`] = syscall.SHUT_WR
	Consts[`/syscall/SIGABRT`] = syscall.SIGABRT
	Consts[`/syscall/SIGALRM`] = syscall.SIGALRM
	Consts[`/syscall/SIGBUS`] = syscall.SIGBUS
	Consts[`/syscall/SIGFPE`] = syscall.SIGFPE
	Consts[`/syscall/SIGHUP`] = syscall.SIGHUP
	Consts[`/syscall/SIGILL`] = syscall.SIGILL
	Consts[`/syscall/SIGINT`] = syscall.SIGINT
	Consts[`/syscall/SIGKILL`] = syscall.SIGKILL
	Consts[`/syscall/SIGPIPE`] = syscall.SIGPIPE
	Consts[`/syscall/SIGQUIT`] = syscall.SIGQUIT
	Consts[`/syscall/SIGSEGV`] = syscall.SIGSEGV
	Consts[`/syscall/SIGTERM`] = syscall.SIGTERM
	Consts[`/syscall/SIGTRAP`] = syscall.SIGTRAP
	Consts[`/syscall/SOCK_DGRAM`] = syscall.SOCK_DGRAM
	Consts[`/syscall/SOCK_RAW`] = syscall.SOCK_RAW
	Consts[`/syscall/SOCK_SEQPACKET`] = syscall.SOCK_SEQPACKET
	Consts[`/syscall/SOCK_STREAM`] = syscall.SOCK_STREAM
	Consts[`/syscall/SOL_SOCKET`] = syscall.SOL_SOCKET
	Consts[`/syscall/SOMAXCONN`] = syscall.SOMAXCONN
	Consts[`/syscall/SO_BROADCAST`] = syscall.SO_BROADCAST
	Consts[`/syscall/SO_DONTROUTE`] = syscall.SO_DONTROUTE
	Consts[`/syscall/SO_KEEPALIVE`] = syscall.SO_KEEPALIVE
	Consts[`/syscall/SO_LINGER`] = syscall.SO_LINGER
	Consts[`/syscall/SO_RCVBUF`] = syscall.SO_RCVBUF
	Consts[`/syscall/SO_REUSEADDR`] = syscall.SO_REUSEADDR
	Consts[`/syscall/SO_SNDBUF`] = syscall.SO_SNDBUF
	Consts[`/syscall/S_IFBLK`] = syscall.S_IFBLK
	Consts[`/syscall/S_IFCHR`] = syscall.S_IFCHR
	Consts[`/syscall/S_IFDIR`] = syscall.S_IFDIR
	Consts[`/syscall/S_IFIFO`] = syscall.S_IFIFO
	Consts[`/syscall/S_IFLNK`] = syscall.S_IFLNK
	Consts[`/syscall/S_IFMT`] = syscall.S_IFMT
	Consts[`/syscall/S_IFREG`] = syscall.S_IFREG
	Consts[`/syscall/S_IFSOCK`] = syscall.S_IFSOCK
	Consts[`/syscall/S_IRUSR`] = syscall.S_IRUSR
	Consts[`/syscall/S_ISGID`] = syscall.S_ISGID
	Consts[`/syscall/S_ISUID`] = syscall.S_ISUID
	Consts[`/syscall/S_ISVTX`] = syscall.S_ISVTX
	Consts[`/syscall/S_IWUSR`] = syscall.S_IWUSR
	Consts[`/syscall/S_IXUSR`] = syscall.S_IXUSR
	Consts[`/syscall/TCP_NODELAY`] = syscall.TCP_NODELAY
	Consts[`/text/scanner/Char`] = text_scanner.Char
	Consts[`/text/scanner/Comment`] = text_scanner.Comment
	Consts[`/text/scanner/EOF`] = text_scanner.EOF
	Consts[`/text/scanner/Float`] = text_scanner.Float
	Consts[`/text/scanner/GoTokens`] = text_scanner.GoTokens
	Consts[`/text/scanner/GoWhitespace`] = text_scanner.GoWhitespace
	Consts[`/text/scanner/Ident`] = text_scanner.Ident
	Consts[`/text/scanner/Int`] = text_scanner.Int
	Consts[`/text/scanner/RawString`] = text_scanner.RawString
	Consts[`/text/scanner/ScanChars`] = text_scanner.ScanChars
	Consts[`/text/scanner/ScanComments`] = text_scanner.ScanComments
	Consts[`/text/scanner/ScanFloats`] = text_scanner.ScanFloats
	Consts[`/text/scanner/ScanIdents`] = text_scanner.ScanIdents
	Consts[`/text/scanner/ScanInts`] = text_scanner.ScanInts
	Consts[`/text/scanner/ScanRawStrings`] = text_scanner.ScanRawStrings
	Consts[`/text/scanner/ScanStrings`] = text_scanner.ScanStrings
	Consts[`/text/scanner/SkipComments`] = text_scanner.SkipComments
	Consts[`/text/scanner/String`] = text_scanner.String
	Consts[`/text/tabwriter/AlignRight`] = text_tabwriter.AlignRight
	Consts[`/text/tabwriter/Debug`] = text_tabwriter.Debug
	Consts[`/text/tabwriter/DiscardEmptyColumns`] = text_tabwriter.DiscardEmptyColumns
	Consts[`/text/tabwriter/Escape`] = text_tabwriter.Escape
	Consts[`/text/tabwriter/FilterHTML`] = text_tabwriter.FilterHTML
	Consts[`/text/tabwriter/StripEscape`] = text_tabwriter.StripEscape
	Consts[`/text/tabwriter/TabIndent`] = text_tabwriter.TabIndent
	Consts[`/text/template/parse/NodeAction`] = text_template_parse.NodeAction
	Consts[`/text/template/parse/NodeBool`] = text_template_parse.NodeBool
	Consts[`/text/template/parse/NodeCommand`] = text_template_parse.NodeCommand
	Consts[`/text/template/parse/NodeDot`] = text_template_parse.NodeDot
	Consts[`/text/template/parse/NodeField`] = text_template_parse.NodeField
	Consts[`/text/template/parse/NodeIdentifier`] = text_template_parse.NodeIdentifier
	Consts[`/text/template/parse/NodeIf`] = text_template_parse.NodeIf
	Consts[`/text/template/parse/NodeList`] = text_template_parse.NodeList
	Consts[`/text/template/parse/NodeNumber`] = text_template_parse.NodeNumber
	Consts[`/text/template/parse/NodePipe`] = text_template_parse.NodePipe
	Consts[`/text/template/parse/NodeRange`] = text_template_parse.NodeRange
	Consts[`/text/template/parse/NodeString`] = text_template_parse.NodeString
	Consts[`/text/template/parse/NodeTemplate`] = text_template_parse.NodeTemplate
	Consts[`/text/template/parse/NodeText`] = text_template_parse.NodeText
	Consts[`/text/template/parse/NodeVariable`] = text_template_parse.NodeVariable
	Consts[`/text/template/parse/NodeWith`] = text_template_parse.NodeWith
	Consts[`/time/ANSIC`] = time.ANSIC
	Consts[`/time/April`] = time.April
	Consts[`/time/August`] = time.August
	Consts[`/time/December`] = time.December
	Consts[`/time/February`] = time.February
	Consts[`/time/Friday`] = time.Friday
	Consts[`/time/Hour`] = time.Hour
	Consts[`/time/January`] = time.January
	Consts[`/time/July`] = time.July
	Consts[`/time/June`] = time.June
	Consts[`/time/Kitchen`] = time.Kitchen
	Consts[`/time/March`] = time.March
	Consts[`/time/May`] = time.May
	Consts[`/time/Microsecond`] = time.Microsecond
	Consts[`/time/Millisecond`] = time.Millisecond
	Consts[`/time/Minute`] = time.Minute
	Consts[`/time/Monday`] = time.Monday
	Consts[`/time/Nanosecond`] = time.Nanosecond
	Consts[`/time/November`] = time.November
	Consts[`/time/October`] = time.October
	Consts[`/time/RFC1123`] = time.RFC1123
	Consts[`/time/RFC1123Z`] = time.RFC1123Z
	Consts[`/time/RFC3339`] = time.RFC3339
	Consts[`/time/RFC3339Nano`] = time.RFC3339Nano
	Consts[`/time/RFC822`] = time.RFC822
	Consts[`/time/RFC822Z`] = time.RFC822Z
	Consts[`/time/RFC850`] = time.RFC850
	Consts[`/time/RubyDate`] = time.RubyDate
	Consts[`/time/Saturday`] = time.Saturday
	Consts[`/time/Second`] = time.Second
	Consts[`/time/September`] = time.September
	Consts[`/time/Stamp`] = time.Stamp
	Consts[`/time/StampMicro`] = time.StampMicro
	Consts[`/time/StampMilli`] = time.StampMilli
	Consts[`/time/StampNano`] = time.StampNano
	Consts[`/time/Sunday`] = time.Sunday
	Consts[`/time/Thursday`] = time.Thursday
	Consts[`/time/Tuesday`] = time.Tuesday
	Consts[`/time/UnixDate`] = time.UnixDate
	Consts[`/time/Wednesday`] = time.Wednesday
	Consts[`/unicode/LowerCase`] = unicode.LowerCase
	Consts[`/unicode/MaxASCII`] = unicode.MaxASCII
	Consts[`/unicode/MaxCase`] = unicode.MaxCase
	Consts[`/unicode/MaxLatin1`] = unicode.MaxLatin1
	Consts[`/unicode/MaxRune`] = unicode.MaxRune
	Consts[`/unicode/ReplacementChar`] = unicode.ReplacementChar
	Consts[`/unicode/TitleCase`] = unicode.TitleCase
	Consts[`/unicode/UpperCase`] = unicode.UpperCase
	Consts[`/unicode/UpperLower`] = unicode.UpperLower
	Consts[`/unicode/Version`] = unicode.Version
	Consts[`/unicode/utf8/MaxRune`] = unicode_utf8.MaxRune
	Consts[`/unicode/utf8/RuneError`] = unicode_utf8.RuneError
	Consts[`/unicode/utf8/RuneSelf`] = unicode_utf8.RuneSelf
	Consts[`/unicode/utf8/UTFMax`] = unicode_utf8.UTFMax
}
